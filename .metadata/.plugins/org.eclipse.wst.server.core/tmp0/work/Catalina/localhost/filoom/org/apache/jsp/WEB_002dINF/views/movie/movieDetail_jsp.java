/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-04-07 07:46:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.movie;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class movieDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:contains", org.apache.taglibs.standard.functions.Functions.class, "contains", new Class[] {java.lang.String.class, java.lang.String.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1740045704991L));
    _jspx_dependants.put("jar:file:/C:/00_FinalProject/Filoom/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/00_FinalProject/Filoom/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>꿈을 담는 공간, Filoom</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- 'Poppins' 폰트 추가용 -->\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("    <!-- swiper.js 라이브러리추가 (cdn) -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://unpkg.com/swiper@8/swiper-bundle.min.css\" />\r\n");
      out.write("    <script src=\"https://unpkg.com/swiper@8/swiper-bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        /* === Overall Font === */\r\n");
      out.write("        * {\r\n");
      out.write("            font-family: \"Poppins\", sans-serif;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            background-color: #151515;\r\n");
      out.write("        }\r\n");
      out.write("        /* 뒷판떼기 */\r\n");
      out.write("        .backStage {\r\n");
      out.write("            background-color: #313131;\r\n");
      out.write("            color:white;\r\n");
      out.write("            width:1324px;\r\n");
      out.write("            margin:auto;\r\n");
      out.write("            border-radius:5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 앞판떼기 */\r\n");
      out.write("        .inner {\r\n");
      out.write("            width:1184px;\r\n");
      out.write("            /* border:1px solid rgba(255, 0, 0, 0.4); */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .category {\r\n");
      out.write("            font-size:20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 상단 영화 정보란 */\r\n");
      out.write("        #description {\r\n");
      out.write("            display:flex;\r\n");
      out.write("            padding-top:10px;\r\n");
      out.write("            /* background-image: 컴퓨터 내부에서 가져오더라도 url() 써야 함 */\r\n");
      out.write("            /* background-size: cover; */\r\n");
      out.write("            /* background-image: url('resources/images/posters/news_1732052776_1431040_m_1.jpeg'); */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #description>* {\r\n");
      out.write("            display:inline-block;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("/*         #description * { border : 1px solid red;} */\r\n");
      out.write("\r\n");
      out.write("        #description *:not(hr) {\r\n");
      out.write("            /* border:1px solid rgba(255, 0, 0, 0.4); */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #thumbnail {\r\n");
      out.write("            /* width:300px; */\r\n");
      out.write("            height:500px;\r\n");
      out.write("            margin-right:6px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .filmrate {\r\n");
      out.write("            width:60px;\r\n");
      out.write("        }\r\n");
      out.write("        #movieTitle {\r\n");
      out.write("            font-weight:bold;\r\n");
      out.write("            font-size:24px;\r\n");
      out.write("        }\r\n");
      out.write("        #specific * {\r\n");
      out.write("/*         	text-align:left; */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        /* .linkTable>* {\r\n");
      out.write("            font-size:40px;\r\n");
      out.write("            display:inline-block;\r\n");
      out.write("            margin: 0px 40px;\r\n");
      out.write("            background-color: #151515;\r\n");
      out.write("            padding:20px;\r\n");
      out.write("        } */\r\n");
      out.write("        .linkTable a, .screenType>* {\r\n");
      out.write("            font-size:21px;\r\n");
      out.write("            background-color: rgba(217,217,217,0.3);\r\n");
      out.write("            color:white;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            border-radius:3px;\r\n");
      out.write("            padding:5px 12px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #evalTotal {width:20%;}\r\n");
      out.write("        #toBook, #like {width:15%;}\r\n");
      out.write("\r\n");
      out.write("        a:hover {\r\n");
      out.write("            filter:invert(100%);\r\n");
      out.write("            cursor:pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* .screenType>* {\r\n");
      out.write("            width:80px;\r\n");
      out.write("            height:56px;\r\n");
      out.write("            border:1px solid gray;\r\n");
      out.write("            float:right;\r\n");
      out.write("            margin-right:10px;\r\n");
      out.write("        } */\r\n");
      out.write("\r\n");
      out.write("        /* === 스틸컷 - float 무시 */\r\n");
      out.write("        #steelcut {\r\n");
      out.write("            clear:both;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 이미지 영역 사이즈 조절 */\r\n");
      out.write("        .swiper {\r\n");
      out.write("            width:100%;\r\n");
      out.write("            height:427px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .swiper-slide>img {\r\n");
      out.write("            height:100%;    \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === 리뷰 === */\r\n");
      out.write("        #part-header * {\r\n");
      out.write("            /* border:1px solid red; */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #part-header {\r\n");
      out.write("            height:50px;\r\n");
      out.write("            display:flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("        }\r\n");
      out.write("        #part-header>div>* {\r\n");
      out.write("            display:inline-block;\r\n");
      out.write("            vertical-align: middle;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === 실제 관람평 여부 체크용 스위치 === */\r\n");
      out.write("                /* 토글스위치 */\r\n");
      out.write("        /* The switch - the box around the slider */\r\n");
      out.write("        .switch {\r\n");
      out.write("            position: relative;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            width: 40px;\r\n");
      out.write("            height: 22px;\r\n");
      out.write("            vertical-align:middle;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Hide default HTML checkbox */\r\n");
      out.write("        .switch input {display:none;}\r\n");
      out.write("\r\n");
      out.write("        /* The slider */\r\n");
      out.write("        .slider {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            right: 0;\r\n");
      out.write("            bottom: 0;\r\n");
      out.write("            background-color: #939393;\r\n");
      out.write("            -webkit-transition: .4s;\r\n");
      out.write("            transition: .4s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .slider:before {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            content: \"\";\r\n");
      out.write("            height: 18px;\r\n");
      out.write("            width: 18px;\r\n");
      out.write("            left: 2px;\r\n");
      out.write("            bottom: 2px;\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            -webkit-transition: .4s;\r\n");
      out.write("            transition: .4s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input:checked + .slider {\r\n");
      out.write("            background-color: #67503F;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input:focus + .slider {\r\n");
      out.write("            box-shadow: 0 0 1px #67503F;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input:checked + .slider:before {\r\n");
      out.write("            -webkit-transform: translateX(18px);\r\n");
      out.write("            -ms-transform: translateX(18px);\r\n");
      out.write("            transform: translateX(18px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Rounded sliders */\r\n");
      out.write("        .slider.round {\r\n");
      out.write("            border-radius: 34px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .slider.round:before {\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === 토글 스위치 END === */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        /* 평점 개요 */\r\n");
      out.write("        #evalOverview {\r\n");
      out.write("            display:flex;\r\n");
      out.write("            /*border: 1px solid red;*/\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .evalSummary {\r\n");
      out.write("            width:130px;\r\n");
      out.write("            display:flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            /* border: 1px solid orange; */\r\n");
      out.write("        }\r\n");
      out.write("        .statistic {\r\n");
      out.write("            width:1030px;\r\n");
      out.write("            display:inline-block;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .graph-back {\r\n");
      out.write("            width:1000px;\r\n");
      out.write("            height:10px;\r\n");
      out.write("            border-radius:20px;\r\n");
      out.write("            /* margin:4px; */\r\n");
      out.write("            background-color: gray;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #evalOverview .graph {\r\n");
      out.write("            /* width:50%; */\r\n");
      out.write("            height:10px;\r\n");
      out.write("            border-radius:20px;\r\n");
      out.write("            margin:2px 0px;\r\n");
      out.write("            background-color: green;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* 상세 리뷰 */\r\n");
      out.write("\r\n");
      out.write("        #review-pool {\r\n");
      out.write("            padding: 0px 45px;\r\n");
      out.write("        }\r\n");
      out.write("        #review {\r\n");
      out.write("            background-color: rgba(228,224,225,0.8);\r\n");
      out.write("            color:black;\r\n");
      out.write("            border-radius:5px;\r\n");
      out.write("\r\n");
      out.write("            padding: 10px 35px;\r\n");
      out.write("            margin-bottom:60px;\r\n");
      out.write("            font-size:20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #newReview {\r\n");
      out.write("            float:right;\r\n");
      out.write("            font-size:21px;\r\n");
      out.write("            background-color: rgba(217,217,217,0.3);\r\n");
      out.write("            color:white;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            border-radius:3px;\r\n");
      out.write("            padding:5px 12px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 페이징바 */\r\n");
      out.write("        .pagingbar {\r\n");
      out.write("            margin-bottom:10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .pagingbar button {\r\n");
      out.write("            border:0;\r\n");
      out.write("            background-color: transparent;\r\n");
      out.write("            color:white;\r\n");
      out.write("            font-size:32px;\r\n");
      out.write("            font-weight:lighter;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .pagingbar button:hover {\r\n");
      out.write("            transform: scale(1.1);\r\n");
      out.write("            font-weight: normal;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* === 리뷰 모달창 === */\r\n");
      out.write("	        /* 모달 스타일 */\r\n");
      out.write("	    .modal {\r\n");
      out.write("	        display: none; /* 기본적으로 숨김 */\r\n");
      out.write("	        position: fixed;\r\n");
      out.write("	        z-index: 1000;\r\n");
      out.write("	        left:50%;\r\n");
      out.write("	        top: 50%;\r\n");
      out.write("	        width: 100%;\r\n");
      out.write("	        height: 100%;\r\n");
      out.write("	        transform: translate(-50%, -50%);\r\n");
      out.write("	        background-color: rgba(0, 0, 0, 0.6);\r\n");
      out.write("	        max-width: 800px;\r\n");
      out.write("	    }\r\n");
      out.write("	\r\n");
      out.write("	    /* 모달 내용 */\r\n");
      out.write("	    .modal-content {\r\n");
      out.write("	        background-color: #fff;\r\n");
      out.write("	        color: #000;\r\n");
      out.write("	        margin: 15% auto;\r\n");
      out.write("	        padding: 20px;\r\n");
      out.write("	        border-radius: 10px;\r\n");
      out.write("	        width: 60%;\r\n");
      out.write("	        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n");
      out.write("	        position: relative;\r\n");
      out.write("	    }\r\n");
      out.write("	\r\n");
      out.write("	    /* 닫기 버튼 */\r\n");
      out.write("	    .close-btn {\r\n");
      out.write("	        color: #aaa;\r\n");
      out.write("	        float: right;\r\n");
      out.write("	        font-size: 28px;\r\n");
      out.write("	        font-weight: bold;\r\n");
      out.write("	        cursor: pointer;\r\n");
      out.write("	    }\r\n");
      out.write("	\r\n");
      out.write("	    .close-btn:hover {\r\n");
      out.write("	        color: #000;\r\n");
      out.write("	    }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        input[type='radio'] { display:none; }\r\n");
      out.write("        #star {\r\n");
      out.write("            width:80px;\r\n");
      out.write("            transition: filter 0.2s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* filter code generated on https://codepen.io/sosuke/pen/Pjoqqp */\r\n");
      out.write("        #star:hover, #star.filled {\r\n");
      out.write("            filter: invert(95%) sepia(62%) saturate(1957%) hue-rotate(357deg) brightness(101%) contrast(102%);           \r\n");
      out.write("        }\r\n");
      out.write("        input[name=evaluation]:checked+label {\r\n");
      out.write("            filter: invert(95%) sepia(62%) saturate(1957%) hue-rotate(357deg) brightness(101%) contrast(102%);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        td>input {\r\n");
      out.write("        	width:100%;\r\n");
      out.write("        	box-sizing:border-box;\r\n");
      out.write("        }\r\n");
      out.write("        input::placeholder, textarea::placeholder {\r\n");
      out.write("        	font-style:italic;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    \r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"backStage\" align=\"center\">\r\n");
      out.write("        <div class=\"inner\">\r\n");
      out.write("            <!-- 아직 내부 div를 안 넣어서 이 위치에 끼워넣어야 하는데\r\n");
      out.write("            양끝 마진 약 67px(~=100 * (2/3)) 정도 주면 됨\r\n");
      out.write("            계산의 편의를 위해 최대 70px 까지는 줄 수 있을 듯\r\n");
      out.write("            -->\r\n");
      out.write("            \r\n");
      out.write("            <!--  예시 : <위키드> -->\r\n");
      out.write("            <div id=\"description\" align=\"left\">\r\n");
      out.write("            	<input type=\"hidden\" id=\"mno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.list.movieNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                <!-- 이미지 넣는 곳 -->\r\n");
      out.write("                <div>\r\n");
      out.write("                	<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/posters/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.list.fileCodename}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.list.movieTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"thumbnail\">\r\n");
      out.write("                    <!-- <img src=\"resources/images/posters/wicked2.jpg\" alt=\"위키드\" id=\"thumbnail\"> -->\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- 제목과 설명을 넣는 곳 -->\r\n");
      out.write("                <div id=\"specific\" style=\"flex-grow: 1;\">\r\n");
      out.write("                    <table>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td style=\"padding-right:5px;\"><img src=\"resources/images/posters/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.list.filmRate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(".svg\" class=\"filmrate\"></td>\r\n");
      out.write("                            <td id=\"movieTitle\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.list.movieTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </table>\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <!-- [여기에 여러모로 입력] -->\r\n");
      out.write("                        <table style=\"width:100%;\">\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th width=150>감독</th>\r\n");
      out.write("                                <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ requestScope.list.director }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>배우</th>\r\n");
      out.write("                                <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ requestScope.list.starring }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>장르</th>\r\n");
      out.write("                                <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ requestScope.list.genre }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>상영시간</th>\r\n");
      out.write("                                <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.list.runtime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("분</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>개봉</th>\r\n");
      out.write("                                <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.list.openDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </table>\r\n");
      out.write("\r\n");
      out.write("                        <hr>\r\n");
      out.write("                        <!-- ↓ 이거 길어지면 내부 스크롤 넣는 게 미관상으로도 좋아보임 -->\r\n");
      out.write("                        <pre style=\"padding-left:10px;\">                \r\n");
      out.write("    ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.list.description}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("                        </pre>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <br>\r\n");
      out.write("           \r\n");
      out.write("            <div class=\"linkTable\" style=\"float:left; margin-left:10px;\">\r\n");
      out.write("                <!-- 평점은 소수 셋째 자리에서 반올림 (= 소수 둘째 자리까지 표기) -->\r\n");
      out.write("\r\n");
      out.write("                <!-- display가 inline이 아닌데도 display:inline이라면서 width가 무시되는 현상 있음 -->\r\n");
      out.write("                <a href=\"#reviewList\" id=\"evalTotal\">평점 로딩 중</a>\r\n");
      out.write("                <!-- script를 통해 버튼이 왼쪽부터 평점/5 만큼만 밝은 색으로 나오게 할 계획  -->\r\n");
      out.write("                <input type=\"hidden\" id=\"uid\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.loginUser ? sessionScope.loginUser.userNo : 0}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> \r\n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <!-- 순서대로 IMAX, 4DX, screenX이며, 필요한 것만 우측부터 배치 -->\r\n");
      out.write("            <div class=\"screenType\" style=\"float:right; margin-right:10px;\">\r\n");
      out.write("                <!-- float로 별개로 배치 -->\r\n");
      out.write("                 <!-- 클릭 시 각각의 소개 영상(외부 링크)로 이동 -->\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <br><br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <br><br><hr style=\"display:none;\">\r\n");
      out.write("            <div id=\"steelcut\" align=\"left\">\r\n");
      out.write("                <p class=\"category\"><b>스틸컷</b> <!-- <b>01</b> / 35건--></p>\r\n");
      out.write("                <hr><br>\r\n");
      out.write("                <!-- <div align=\"center\">\r\n");
      out.write("                    // 왼쪽 끝에 '<' 이미지\r\n");
      out.write("                    <img src=\"resources/images/posters/wicked1.jpg\">\r\n");
      out.write("                    // 오른쪽 끝에 '>' 이미지\r\n");
      out.write("                </div> -->\r\n");
      out.write("\r\n");
      out.write("                <!-- swiper_api 넣되, pagination은 빼기 -->\r\n");
      out.write("                <div id=\"container\">\r\n");
      out.write("                    <div class=\"swiper\">\r\n");
      out.write("                        <div class=\"swiper-wrapper\" align=\"center\">\r\n");
      out.write("                        	");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"swiper-button-prev\"></div>\r\n");
      out.write("                        <div class=\"swiper-button-next\"></div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- swiper의 동작에 대한 스크립트 -->\r\n");
      out.write("            <script>\r\n");
      out.write("                const swiper = new Swiper('.swiper', {\r\n");
      out.write("                    loop : true,\r\n");
      out.write("                    slidesPerView : 1, // 확인용\r\n");
      out.write("                    navigation: {\r\n");
      out.write("                        // 스틸컷 번호도 같이 바꾸고 싶은데 안될라나\r\n");
      out.write("                        prevEl: '.swiper-button-prev',\r\n");
      out.write("                        nextEl: '.swiper-button-next'\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            </script>\r\n");
      out.write("\r\n");
      out.write("            <br><br><hr>\r\n");
      out.write("\r\n");
      out.write("            <div id=\"reviewTop\">\r\n");
      out.write("                <div id=\"part-header\">\r\n");
      out.write("                    <p class=\"category\"><b>리뷰</b></p>\r\n");
      out.write("                    <div>\r\n");
      out.write("	                    <p>실제 관람평만 보기</p>\r\n");
      out.write("	                    <!-- ↓ 얘도 흰색으로 바꿔야 함 -->\r\n");
      out.write("	                    <label class=\"switch\">\r\n");
      out.write("	                        <input type=\"checkbox\">\r\n");
      out.write("	                        <span class=\"slider round\"></span>\r\n");
      out.write("	                    </label>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <br>\r\n");
      out.write("\r\n");
      out.write("                <div id=\"evalOverview\">\r\n");
      out.write("                    <!-- 특수문자는 꽉찬 별과 빈 별만 있고 반 개짜리 별은 없기 때문에\r\n");
      out.write("                    다른 방법으로 구현해야 함\r\n");
      out.write("                    일례로 Google Play의 경우 서로 다른 opacity 값을 절반씩 적용했음\r\n");
      out.write("                    -->\r\n");
      out.write("                    <!-- 이렇게 하니까 border 없으면 허전해보이는데 -->\r\n");
      out.write("                    <div class=\"evalSummary\">\r\n");
      out.write("                        <!-- <b style=\"font-size:20px;\">4.55</b><br>\r\n");
      out.write("                        ★★★★★ -->\r\n");
      out.write("                        <div id=\"moviescore\" style=\"font-size:30px;\">\r\n");
      out.write("                            3.97\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <!-- 아래 별 부분은 별 이미지 x5를 평점에 맞게 채우는 걸로 대체 예정 -->\r\n");
      out.write("                        <div>★★★★★</div>\r\n");
      out.write("                        <div id=\"listcount\">리뷰 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.reviewNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("개</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"statistic\">\r\n");
      out.write("                        <table>\r\n");
      out.write("                        	");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                        	<!-- dummy percentage : 5점부터 순서대로 65% 17% 10% 1% 7% -->\r\n");
      out.write("                        </table>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <br><br>\r\n");
      out.write("            <div id=\"review-pool\">\r\n");
      out.write("                \r\n");
      out.write("                <div id=\"reviewList\">\r\n");
      out.write("                \r\n");
      out.write("                <!-- 그리고 여기도 AJAX로 넣어야 함 -->\r\n");
      out.write("\r\n");
      out.write("                <!-- SAMPLE (table) -->\r\n");
      out.write("                <!-- <div id=\"review\">\r\n");
      out.write("                	닉네임 개념이 없는 관계로 아이디로 받아야 함\r\n");
      out.write("                	full id = 'tenletterstunman'\r\n");
      out.write("                    <div id=\"reviewerName\" style=\"float:left;\">tenl****</div>\r\n");
      out.write("                    <div id=\"writtenDate\" style=\"float:right;\">2024-11-29</div><br>\r\n");
      out.write("\r\n");
      out.write("                    <table>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td width=\"50\">제목</td>\r\n");
      out.write("                            <td>원작을 봤다면 여러 번 볼 수밖에 없는 영화</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td>평점</td>\r\n");
      out.write("                            <td>★★★★★</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td>내용</td>\r\n");
      out.write("                            <td>동명의 소설을 N번, 동명의 뮤지컬을 1N번 본 사람으로써, 원작 팬으로써의 엄격한 잣대를 가지고 영화를 보러 갔다. 조금이라도 맘에 안 들면 바로 1점 때릴 생각으로.  그런데 이 영화는, 맘에 안 드는 구석을 전혀 찾을 수 없었다...</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </table>\r\n");
      out.write("                </div> -->\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- if user is logged in -->\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f4(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                <br><br>\r\n");
      out.write("                \r\n");
      out.write("<!--                 <div id=\"editModal\" class=\"modal\"> -->\r\n");
      out.write("<!--                 	<div class=\"modal-content\" style=\"background-color:#6f6464;\"> -->\r\n");
      out.write("<!-- 						<span class=\"close-btn\" style=\"color:white;\">&times;</span><br> -->\r\n");
      out.write("\r\n");
      out.write("<!-- 						실제 MEMBER 테이블은 닉네임이 없어 이름으로만 부를 예정 -->\r\n");
      out.write("\r\n");
      out.write("<!-- 				        <p style=\"font-size:16px;\"> -->\r\n");
      out.write("<!-- 							영화가 어땠는지 감상평을 남겨주세요!<br> -->\r\n");
      out.write("<!-- 						    수정된 리뷰로는 영화관람권을 받을 수 없어요! 이 점 유의해주세요. -->\r\n");
      out.write("<!-- 						</p> -->\r\n");
      out.write("						\r\n");
      out.write("<!-- 				        <div> -->\r\n");
      out.write("<!-- 				        	<input type=\"hidden\" id=\"rid\"> -->\r\n");
      out.write("<!-- 				        	빈 별의 색상 : #141414 (20,20,20) -->\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!-- 				        </div> -->\r\n");
      out.write("<!-- 				        <br><br> -->\r\n");
      out.write("				        \r\n");
      out.write("<!-- 				        <table> -->\r\n");
      out.write("<!-- 				        	<tr> -->\r\n");
      out.write("<!-- 				        		<td><input id=\"editReviewTitle\" placeholder=\"제목을 입력해주세요.\"> -->\r\n");
      out.write("<!-- 				            <tr> -->\r\n");
      out.write("<!-- 				                <td> -->\r\n");
      out.write("<!-- 				                    <textarea style=\"width:360px; resize:none;\" -->\r\n");
      out.write("<!-- 				                    id=\"editReviewContent\" placeholder=\"규정에 어긋나는 감상평은 경고 없이 삭제되며, 반복 적발시 향후 리뷰 작성 및 VIP 승급이 제한될 수 있습니다.\"></textarea> -->\r\n");
      out.write("<!-- 				                </td> -->\r\n");
      out.write("<!-- 				            </tr> -->\r\n");
      out.write("<!-- 				        </table> -->\r\n");
      out.write("				        \r\n");
      out.write("<!-- 				        <br> -->\r\n");
      out.write("<!-- 				        <a href=\"javascript:updateReview(rid);\" id=\"submit\" style=\"color:white;\">수정</button> -->\r\n");
      out.write("				\r\n");
      out.write("<!-- 				        <br><br> -->\r\n");
      out.write("                            \r\n");
      out.write("<!--                         </div> -->\r\n");
      out.write("<!--                     </div> -->\r\n");
      out.write("                \r\n");
      out.write("                <script>\r\n");
      out.write("                const mno = $(\"#mno\").val();\r\n");
      out.write("                let uid = $(\"#uid\").val();\r\n");
      out.write("                let count = $(\"#listcount\");\r\n");
      out.write("                $(function() {\r\n");
      out.write("                	\r\n");
      out.write("                	if(uid > 0) {\r\n");
      out.write("                		favCheck(uid);\r\n");
      out.write("                		checkUserReview(uid);\r\n");
      out.write("                	}\r\n");
      out.write("                	selectReviewList(mno,1);\r\n");
      out.write("                	getAverage(mno);\r\n");
      out.write("                	\r\n");
      out.write("                	// 모달 열기\r\n");
      out.write("    	            $(\".open-modal-btn\").click(function () {\r\n");
      out.write("    	                const targetModal = \"#\" + $(this).data(\"target\");\r\n");
      out.write("    	                $(targetModal).fadeIn(200); // 모달을 서서히 나타냄\r\n");
      out.write("    	            });\r\n");
      out.write("                	\r\n");
      out.write("    	           \r\n");
      out.write("\r\n");
      out.write("    	            // 모달 닫기\r\n");
      out.write("    	            $(\".close-btn\").click(function () {\r\n");
      out.write("    	                $(this).closest(\".modal\").fadeOut(100); // 모달을 서서히 사라지게 함\r\n");
      out.write("    	            });\r\n");
      out.write("\r\n");
      out.write("    	            // 모달 외부 클릭 시 닫기\r\n");
      out.write("    	            $(window).click(function (event) {\r\n");
      out.write("    	                if ($(event.target).hasClass(\"modal\")) {\r\n");
      out.write("    	                    $(event.target).fadeOut(100);\r\n");
      out.write("    	                }\r\n");
      out.write("    	            });\r\n");
      out.write("    	            \r\n");
      out.write("    	            $(\"input[name=score]+label\").click(function() {\r\n");
      out.write("    	                // removeColor\r\n");
      out.write("    	                $(this).parent().children('label').children().removeClass('filled');\r\n");
      out.write("    	                \r\n");
      out.write("    	                // addColor\r\n");
      out.write("    	                $(this).children().addClass('filled'); // to this\r\n");
      out.write("    	                $(this).addClass('filled').prevAll('label').children('#star').addClass('filled'); // to prev\r\n");
      out.write("    	            });\r\n");
      out.write("                });\r\n");
      out.write("                \r\n");
      out.write("                function refreshPagingBar(cpage) {\r\n");
      out.write("            		$(\".pagingbar\").empty();\r\n");
      out.write("            		let link = 'detail.mo?movieNo=';\r\n");
      out.write("            		let pgbar = '';\r\n");
      out.write("\r\n");
      out.write("            		// EL 태그를 function 안에 쓸 수 없어서 다른 방법을 연구하는 중\r\n");
      out.write("            		let start = $(\"#first\").val();\r\n");
      out.write("            		let end = $(\"#last\").val();\r\n");
      out.write("            		let max = $(\"#MX\").val();\r\n");
      out.write("            		\r\n");
      out.write("        			// '<<', '<' 처리\r\n");
      out.write("            		if(cpage > 1) {\r\n");
      out.write("            			// add &lt;&lt;\r\n");
      out.write("            			// add &lt;\r\n");
      out.write("            			pgbar += \"<button onclick= '\" + link + \"1);'>&lt;&lt;</button> <!-- to Page1 -->\"\r\n");
      out.write("            				+ \"<button onclick= '\" + link + (cpage-1) + \");'>&lt;</button> <!-- Prev -->\";\r\n");
      out.write("            		}\r\n");
      out.write("\r\n");
      out.write("            		for(let i = start; i <= Math.min(end,max); i++) {\r\n");
      out.write("\r\n");
      out.write("            			if(i == cpage) {\r\n");
      out.write("            				// font-weight:normal 넣는 이유 : 나머지는 lighter로 해놨음\r\n");
      out.write("            				pgbar += \"<button disabled style='font-weight: normal;' onclick= '\" + link + i + \");'>\"\r\n");
      out.write("            					+ i + \"</button>\";\r\n");
      out.write("            			}\r\n");
      out.write("            			else {\r\n");
      out.write("            				pgbar += \"<button onclick= '\" + link + i + \");'>\" + i + \"</button>\";\r\n");
      out.write("            			}\r\n");
      out.write("            		}\r\n");
      out.write("\r\n");
      out.write("            		if (cpage < max) {\r\n");
      out.write("            			// add &gt;\r\n");
      out.write("            			// add &gt;&gt;\r\n");
      out.write("            			pgbar += \"<button onclick= '\" + link\r\n");
      out.write("            					+ (cpage+1) + \");'>&gt;</button> <!-- Next -->\"\r\n");
      out.write("            				+ \"<button onclick= '\" + link + max + \")';>&gt;&gt;</button> <!-- to LastPage -->\";\r\n");
      out.write("            		}\r\n");
      out.write("\r\n");
      out.write("            		$(\".pagingbar\").html(pgbar);\r\n");
      out.write("            		\r\n");
      out.write("            	}\r\n");
      out.write("                \r\n");
      out.write("                function selectReviewList(mno, cpage) {\r\n");
      out.write("                	$.ajax({\r\n");
      out.write("                		url:'reviewlist.mo?mno='+mno +'&cpage='+cpage,\r\n");
      out.write("                		type:'get',\r\n");
      out.write("                		data:{\r\n");
      out.write("                			'mno' : mno,\r\n");
      out.write("                			'cpage' : cpage\r\n");
      out.write("                		},\r\n");
      out.write("                		\r\n");
      out.write("                		success: function(result) {\r\n");
      out.write("                			$(\"#reviewList\").empty();\r\n");
      out.write("                			$(\"#reviewList\").append(result);\r\n");
      out.write("                			\r\n");
      out.write("                			// 페이징바 갱신\r\n");
      out.write("                			refreshPagingBar(cpage);\r\n");
      out.write("                			\r\n");
      out.write("                			// 평점 갱신\r\n");
      out.write("                			getAverage(mno);\r\n");
      out.write("\r\n");
      out.write("                		},\r\n");
      out.write("        	    		error: function() {\r\n");
      out.write("        	    			alert('DAMN!');\r\n");
      out.write("        	    		}	\r\n");
      out.write("        	    	});\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                function getAverage(mno) {\r\n");
      out.write("                	$.ajax({\r\n");
      out.write("                		url:'review_ovr.mo?mno='+mno,\r\n");
      out.write("                		type:'post',\r\n");
      out.write("                		data:{\r\n");
      out.write("                			'mno' : mno,\r\n");
      out.write("                		},\r\n");
      out.write("                		\r\n");
      out.write("                		success: function(result) {\r\n");
      out.write("                			// 리뷰 수 갱신\r\n");
      out.write("                			let rvno = result.listcount;\r\n");
      out.write("                			$(\"#listcount\").text(\"리뷰 \"+result.listcount+\"개\");\r\n");
      out.write("                			\r\n");
      out.write("                			if(rvno <= 0) {\r\n");
      out.write("                				$(\"#evalTotal\").text(\"평점 없음\");\r\n");
      out.write("                				$(\"#moviescore\").html(\"N/A\");\r\n");
      out.write("                			} else {\r\n");
      out.write("                				// 평점 갱신\r\n");
      out.write("	                			// 혹시 몰라서 .empty() 넣었는데 사실 빼도 되서 비활성화함\r\n");
      out.write("	                			// $(\"#evalTotal\").empty();\r\n");
      out.write("	                			$(\"#evalTotal\").text(\"평점 \" + result.ave);\r\n");
      out.write("	                			// $(\"#moviescore\").empty();\r\n");
      out.write("	                			$(\"#moviescore\").html(result.ave);\r\n");
      out.write("								\r\n");
      out.write("	    						//그래프 갱신\r\n");
      out.write("	    						$(\".graph[value=1]\").css(\"width\", result.one+\"%\");\r\n");
      out.write("	    						$(\".graph[value=2]\").css(\"width\", result.two+\"%\");\r\n");
      out.write("	    						$(\".graph[value=3]\").css(\"width\", result.three+\"%\");\r\n");
      out.write("	    						$(\".graph[value=4]\").css(\"width\", result.four+\"%\");\r\n");
      out.write("	    						$(\".graph[value=5]\").css(\"width\", result.five+\"%\");\r\n");
      out.write("                			}\r\n");
      out.write("                			\r\n");
      out.write("                		},\r\n");
      out.write("        	    		error: function() {\r\n");
      out.write("        	    			alert('DAMN!');\r\n");
      out.write("        	    		}\r\n");
      out.write("                	});\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                function favCheck(uid) {\r\n");
      out.write("                	let sw = '';\r\n");
      out.write("                	$.ajax({\r\n");
      out.write("                			url:\"favcheck.mo?userNo=\"+uid+\"&movieNo=\"+mno,\r\n");
      out.write("                			type:\"post\",\r\n");
      out.write("                			data:{\"userNo\" : uid, \"movieNo\" : mno},\r\n");
      out.write("                			\r\n");
      out.write("                			success:function(result) {\r\n");
      out.write("                				if(result == 1) {\r\n");
      out.write("                					sw = '♥ ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.favCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("                				} else {\r\n");
      out.write("                					sw = '♡ ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.favCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("                				}\r\n");
      out.write("                				//sw += $(\"#like\").val();\r\n");
      out.write("                				$(\"#like\").html(sw);\r\n");
      out.write("                			},\r\n");
      out.write("                			error:function() {\r\n");
      out.write("                				sw = '♨ERROR';\r\n");
      out.write("                				$(\"#like\").text(sw);\r\n");
      out.write("                			}\r\n");
      out.write("                		});\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                function favToggle(uid) {\r\n");
      out.write("                	\r\n");
      out.write("                	// 비로그인일 땐 애초에 가지도 않지만 혹시 몰라서..\r\n");
      out.write("                	if(uid == 0) {\r\n");
      out.write("                		alert('영화를 찜하려면 로그인해야 합니다.');\r\n");
      out.write("                		return false;\r\n");
      out.write("                	} else {\r\n");
      out.write("                		$.ajax({\r\n");
      out.write("                			url:\"likethis.mo?userNo=\"+uid+\"&movieNo=\"+mno,\r\n");
      out.write("                			type:\"post\",\r\n");
      out.write("                			data:{\"userNo\" : uid, \"movieNo\" : mno},\r\n");
      out.write("                			\r\n");
      out.write("                			success:function(result) {\r\n");
      out.write("                				if(result == \"success\") {\r\n");
      out.write("                					favCheck(uid);\r\n");
      out.write("                				} else {\r\n");
      out.write("                					alert(\"좋아요가 반영되지 않았습니다.\");\r\n");
      out.write("                				}\r\n");
      out.write("                			},\r\n");
      out.write("                			error:function() {\r\n");
      out.write("                				alert(\"오류가 발생했습니다.\");\r\n");
      out.write("                			}\r\n");
      out.write("                		});	\r\n");
      out.write("                	}\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                function checkUserReview(uid) {\r\n");
      out.write("                	$.ajax({\r\n");
      out.write("                		url:\"checkreview.mo?uid=\"+uid,\r\n");
      out.write("                		type:\"post\",\r\n");
      out.write("                		data: {\"userNo\" : uid},\r\n");
      out.write("                		\r\n");
      out.write("                		success:function(result) {\r\n");
      out.write("                			$(\"#isReviewed\").val(result);\r\n");
      out.write("                			console.log($(\"#isReviewed\").val());\r\n");
      out.write("                			// 있으면 1 없으면 0\r\n");
      out.write("                			\r\n");
      out.write("//                 			if(result == 1) {\r\n");
      out.write("//                 				// change button into \"수정\"\r\n");
      out.write("//                 			}\r\n");
      out.write("                		},\r\n");
      out.write("                		error: function(result) {\r\n");
      out.write("                			alert(\"오류가 발생했습니다.\");\r\n");
      out.write("                			$(\"#newReview\").hide(); // 로그인 상태에서 hide\r\n");
      out.write("                		}\r\n");
      out.write("                	});\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                function submitReview() {\r\n");
      out.write("                	let score = $('input[name=score]:checked').val();\r\n");
      out.write("                	let reviewTitle = $(\"#reviewTitle\").val();\r\n");
      out.write("                	let reviewContent = $(\"#reviewContent\").val();\r\n");
      out.write("                	// let isWatched = 'Y'; // 기본값, 설정 가능하면 따로 적용\r\n");
      out.write("                	\r\n");
      out.write("                	$.ajax({\r\n");
      out.write("            			url:\"newreview.mo?userNo=\"+uid+\"&movieNo=\"+mno,\r\n");
      out.write("            			type:\"post\",\r\n");
      out.write("            			data:{\r\n");
      out.write("							\"userNo\" : uid,\r\n");
      out.write("            				\"movieNo\" : mno,\r\n");
      out.write("							\"reviewTitle\" : reviewTitle,\r\n");
      out.write("							\"score\" : score,\r\n");
      out.write("							\"isWatched\" : 'Y',\r\n");
      out.write("							\"reviewContent\" : reviewContent\r\n");
      out.write("            			},\r\n");
      out.write("            			\r\n");
      out.write("            			success:function(result) {\r\n");
      out.write("            				if(result == \"success\") {\r\n");
      out.write("            					alert(\"리뷰가 작성되었습니다.\");\r\n");
      out.write("            					selectReviewList(mno, 1);\r\n");
      out.write("            					$(\".close-btn\").click();\r\n");
      out.write("            				} else {\r\n");
      out.write("            					alert(\"리뷰 작성에 실패하였습니다.\");\r\n");
      out.write("            				}\r\n");
      out.write("            			},\r\n");
      out.write("            			error:function() {\r\n");
      out.write("            				alert(\"오류가 발생했습니다.\");\r\n");
      out.write("            			}\r\n");
      out.write("            		});	\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("//                 function updateReview(rid) {\r\n");
      out.write("//                 	let score = $('input[name=score]:checked').val();\r\n");
      out.write("//                 	let reviewTitle = $(\"#reviewTitle\").val();\r\n");
      out.write("//                 	let reviewContent = $(\"#reviewContent\").val();\r\n");
      out.write("//                 	// let isWatched = 'Y'; // 기본값, 설정 가능하면 따로 적용\r\n");
      out.write("                	\r\n");
      out.write("//                 	$.ajax({\r\n");
      out.write("//             			url:\"updatereview.mo?userNo=\"+uid+\"&movieNo=\"+mno,\r\n");
      out.write("//             			type:\"post\",\r\n");
      out.write("//             			data:{\r\n");
      out.write("// 							\"userNo\" : uid,\r\n");
      out.write("//             				\"movieNo\" : mno,\r\n");
      out.write("// 							\"reviewTitle\" : editReviewTitle,\r\n");
      out.write("// 							\"score\" : editScore,\r\n");
      out.write("// 							\"reviewContent\" : editReviewContent\r\n");
      out.write("//             			},\r\n");
      out.write("            			\r\n");
      out.write("//             			success:function(result) {\r\n");
      out.write("//             				if(result == \"success\") {\r\n");
      out.write("//             					alert(\"리뷰가 수정되었습니다.\");\r\n");
      out.write("//             					selectReviewList(mno, 1);\r\n");
      out.write("//             					$(\".close-btn\").click();\r\n");
      out.write("//             				} else {\r\n");
      out.write("//             					alert(\"리뷰가 수정되지 않았습니다.\");\r\n");
      out.write("//             				}\r\n");
      out.write("//             			},\r\n");
      out.write("//             			error:function() {\r\n");
      out.write("//             				alert(\"오류가 발생했습니다.\");\r\n");
      out.write("//             			}\r\n");
      out.write("//             		});	\r\n");
      out.write("//                 }\r\n");
      out.write("                \r\n");
      out.write("                function deleteReview(rid) {\r\n");
      out.write("                	$.ajax({\r\n");
      out.write("                		url:'deletereview.mo?rid='+rid,\r\n");
      out.write("                		type:\"post\",\r\n");
      out.write("                		data:{\"rid\" : rid, \"mno\" : mno, \"uid\" : uid},\r\n");
      out.write("                		// 셋을 받는 이유 : 그래야 남이 함부로 못 지울 거 아냐\r\n");
      out.write("                		\r\n");
      out.write("                		success:function(result) {\r\n");
      out.write("                			if(result == \"success\") {\r\n");
      out.write("                				alert(\"리뷰가 삭제되었습니다.\");\r\n");
      out.write("                				location.href=\"detail.mo?movieNo=\"+mno;\r\n");
      out.write("                			} else {\r\n");
      out.write("                				alert(\"리뷰가 삭제되지 않았습니다.\");\r\n");
      out.write("                			}\r\n");
      out.write("                		},\r\n");
      out.write("                		error:function() {\r\n");
      out.write("                			alert(\"An error has occurred.\");\r\n");
      out.write("                		}\r\n");
      out.write("                	});\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                </script>\r\n");
      out.write("\r\n");
      out.write("                <!-- Paging Bar -->\r\n");
      out.write("				<div class=\"pagingbar\" align=\"center\">\r\n");
      out.write("					<!--  -->\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/movie/movieDetail.jsp(429,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.list.premiere eq 'Y' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                	<a href=\"book.do\" id=\"toBook\">예매하기</a>\r\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                	");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("               		");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("               	");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/movie/movieDetail.jsp(433,17) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.loginUser}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                	<a href=\"javascript:favToggle(uid);\" id=\"like\"></a>\r\n");
          out.write("               		");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                		<a href=\"javascript:alert('영화를 찜하려면 로그인해야 합니다.');\" id=\"like\">♡ ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.favCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</a>\r\n");
          out.write("               		");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/movie/movieDetail.jsp(448,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:contains(requestScope.list.screenType,'IMAX')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                	<a href=\"https://www.youtube.com/watch?v=n5HbQ7vCvDY\" id=\"imax\">IMAX</a>\r\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/movie/movieDetail.jsp(451,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:contains(requestScope.list.screenType,'4DX')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	                <a href=\"https://www.youtube.com/watch?v=-Wm2y5028ds\" id=\"4dx\">4DX</a>\r\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/views/movie/movieDetail.jsp(454,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:contains(requestScope.list.screenType,'SCREENX')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	                <a href=\"https://www.youtube.com/watch?v=lkqm7quc-ME\" id=\"screenx\">SCREENX</a>\r\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/movie/movieDetail.jsp(476,25) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("pic");
      // /WEB-INF/views/movie/movieDetail.jsp(476,25) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/movie/movieDetail.jsp(476,25) '${album}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${album}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                        		<div class=\"swiper-slide\"><img src=\"resources/images/posters/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pic.fileCodename}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"></div>                            \r\n");
            out.write("                            ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/movie/movieDetail.jsp(534,25) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("s");
      // /WEB-INF/views/movie/movieDetail.jsp(534,25) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setBegin(1);
      // /WEB-INF/views/movie/movieDetail.jsp(534,25) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setEnd(5);
      // /WEB-INF/views/movie/movieDetail.jsp(534,25) name = step type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setStep(1);
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                        		<tr>\r\n");
            out.write("	                                <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${6-s}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("	                                <td>\r\n");
            out.write("	                                    <div class=\"graph-back\">\r\n");
            out.write("	                                        <div class=\"graph\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${6-s}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" style=\"width:0%;\"></div>\r\n");
            out.write("	                                    </div>\r\n");
            out.write("	                                </td>\r\n");
            out.write("	                            </tr>\r\n");
            out.write("                        	");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f4 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f4_reused = false;
    try {
      _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f4.setParent(null);
      // /WEB-INF/views/movie/movieDetail.jsp(583,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.loginUser && requestScope.list.premiere eq 'Y'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
      if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                	<input type=\"hidden\" id=\"isReviewed\">\r\n");
          out.write("                    <a class=\"open-modal-btn\" data-target=\"reviewModal\" id=\"newReview\">작성</a>\r\n");
          out.write("                    \r\n");
          out.write("                    <!-- 'give_a_star.html' -->\r\n");
          out.write("                    <div id=\"reviewModal\" class=\"modal\">\r\n");
          out.write("                        <div class=\"modal-content\" style=\"background-color:#6f6464;\">\r\n");
          out.write("                            <span class=\"close-btn\" style=\"color:white;\">&times;</span><br>\r\n");
          out.write("\r\n");
          out.write("					        <!-- 실제 MEMBER 테이블은 닉네임이 없어 이름으로만 부를 예정 -->\r\n");
          out.write("					        <h2>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" 님, 영화는 재미있었나요?</h1>\r\n");
          out.write("						        <p style=\"font-size:16px;\">\r\n");
          out.write("						            영화가 어땠는지 감상평을 남겨주세요!<br>\r\n");
          out.write("						            우수 리뷰로 선정되면 영화관람권을 선물로 드립니다.\r\n");
          out.write("						        </p>\r\n");
          out.write("						\r\n");
          out.write("						        <div>\r\n");
          out.write("						            <!-- 빈 별의 색상 : #141414 (20,20,20) -->\r\n");
          out.write("						            ");
          if (_jspx_meth_c_005fforEach_005f2(_jspx_th_c_005fif_005f4, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("						        </div>\r\n");
          out.write("						        <br><br>\r\n");
          out.write("						        \r\n");
          out.write("						        <table>\r\n");
          out.write("						        	<tr>\r\n");
          out.write("						        		<td><input id=\"reviewTitle\" placeholder=\"제목을 입력해주세요.\">\r\n");
          out.write("						            <tr>\r\n");
          out.write("						                <td>\r\n");
          out.write("						                    <textarea style=\"width:360px; resize:none;\"\r\n");
          out.write("						                    id=\"reviewContent\" placeholder=\"규정에 어긋나는 감상평은 경고 없이 삭제되며, 반복 적발시 향후 리뷰 작성 및 VIP 승급이 제한될 수 있습니다.\"></textarea>\r\n");
          out.write("						                </td>\r\n");
          out.write("						            </tr>\r\n");
          out.write("						        </table>\r\n");
          out.write("						        \r\n");
          out.write("						        <br>\r\n");
          out.write("						        <a href=\"javascript:submitReview();\" id=\"submit\" style=\"color:white;\">작성</button>\r\n");
          out.write("						\r\n");
          out.write("						        <br><br>\r\n");
          out.write("                            \r\n");
          out.write("                        </div>\r\n");
          out.write("                    </div>\r\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f4);
      _jspx_th_c_005fif_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f2_reused = false;
    try {
      _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f4);
      // /WEB-INF/views/movie/movieDetail.jsp(601,18) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setVar("s");
      // /WEB-INF/views/movie/movieDetail.jsp(601,18) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setBegin(1);
      // /WEB-INF/views/movie/movieDetail.jsp(601,18) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setEnd(5);
      int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
        if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("						            	<input type=\"radio\" name=\"score\" id=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("						            	<label for=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"><img id=\"star\" src=\"resources/images/icons/star_vectoricon.png\"></label>\r\n");
            out.write("					            	");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f2);
      _jspx_th_c_005fforEach_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f2_reused);
    }
    return false;
  }
}
