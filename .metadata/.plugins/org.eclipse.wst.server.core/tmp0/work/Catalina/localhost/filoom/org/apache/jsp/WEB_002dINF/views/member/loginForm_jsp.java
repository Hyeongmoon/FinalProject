/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-02-20 10:26:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class loginForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1740045704991L));
    _jspx_dependants.put("jar:file:/C:/00_FinalProject/Filoom/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>로그인</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("    /* 기본 스타일 초기화 */\r\n");
      out.write("    * {\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    body {\r\n");
      out.write("	    font-family: Arial, sans-serif;\r\n");
      out.write("	    background-color: #121212;\r\n");
      out.write("	    color: #ffffff;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("    .login-container {\r\n");
      out.write("        width: 600px;\r\n");
      out.write("        background-color: #1e1e1e;\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        padding: 50px;\r\n");
      out.write("        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);\r\n");
      out.write("        margin: 100px auto;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login-Header {\r\n");
      out.write("        font-size: 24px;\r\n");
      out.write("        font-weight: 600;\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("        border-bottom: 1px solid #333;\r\n");
      out.write("        padding-bottom: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .form-group {\r\n");
      out.write("        margin-bottom: 15px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .form-group label {\r\n");
      out.write("        display: block;\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("        margin-bottom: 10px;\r\n");
      out.write("        font-weight: 500;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .userId, .userPwd {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        border: 1px solid #333;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        background-color: #2b2b2b;\r\n");
      out.write("        color: #ffffff;\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input::placeholder {\r\n");
      out.write("        color: #777;\r\n");
      out.write("    } \r\n");
      out.write("\r\n");
      out.write("	input:focus {\r\n");
      out.write("	  outline: none;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("    .saveId {\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        transition: color 0.3s ease;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .options {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: space-between;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        font-size: 12px;\r\n");
      out.write("        color: #aaaaaa;\r\n");
      out.write("        margin-top: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .options a {\r\n");
      out.write("        color: #aaaaaa;\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("        transition: color 0.3s ease;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .options a:hover, .saveId:hover {\r\n");
      out.write("        color: #ffffff;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login-btn {\r\n");
      out.write("        background-color: #000000;\r\n");
      out.write("        margin-top: 25px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    hr {\r\n");
      out.write("        border: 0;\r\n");
      out.write("        border-top: 1px solid #333;\r\n");
      out.write("        margin: 30px 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .signup-text1 {\r\n");
      out.write("        font-size: 20px;\r\n");
      out.write("        font-weight: 600;\r\n");
      out.write("        color: #aaaaaa;\r\n");
      out.write("        padding-bottom: 30px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .signup-text2 {\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("        color: #aaaaaa;\r\n");
      out.write("        padding-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .signup-btn {\r\n");
      out.write("        background-color: #493628;\r\n");
      out.write("        margin-top: 15px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login-btn, .signup-btn {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        font-size: 16px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        color: #ffffff;\r\n");
      out.write("        border-radius: 60px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        transition: background-color 0.3s ease, color 0.3s ease; /* 배경색과 글씨 색 변화를 위한 트랜지션 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .signup-btn:hover, .login-btn:hover {\r\n");
      out.write("        background-color: #fff; /* 배경을 흰색으로 변경 */\r\n");
      out.write("        color: #000; /* 글씨 색을 검정색으로 변경 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 크롬 자동완성 시 input 색상 변경 막음 */\r\n");
      out.write("    input:-webkit-autofill,\r\n");
      out.write("    input:-webkit-autofill:hover,\r\n");
      out.write("    input:-webkit-autofill:focus,\r\n");
      out.write("    input:-webkit-autofill:active {\r\n");
      out.write("        transition: background-color 5000s ease-in-out 0s;\r\n");
      out.write("        -webkit-transition: background-color 9999s ease-out;\r\n");
      out.write("        -webkit-box-shadow: 0 0 0px 1000px #2b2b2b inset !important;\r\n");
      out.write("        -webkit-text-fill-color: #fff !important;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"login-container\">\r\n");
      out.write("        <div class=\"login-box\">\r\n");
      out.write("            <h1 class=\"login-Header\">로그인</h1>\r\n");
      out.write("            <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login.me\" method=\"post\">\r\n");
      out.write("            \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"userId\">아이디</label>\r\n");
      out.write("                    <input type=\"text\" class=\"userId\" id=\"userId\"  name=\"userId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ cookie.saveId.value }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"  placeholder=\"아이디를 입력하세요.\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"userPwd\">비밀번호</label>\r\n");
      out.write("                    <input type=\"password\" class=\"userPwd\" id=\"userPwd\" name=\"userPwd\" placeholder=\"비밀번호를 입력하세요.\">\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"options\">\r\n");
      out.write("                \r\n");
      out.write("                    ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                    <div>\r\n");
      out.write("                        <a href=\"findIdForm.me\">아이디 찾기</a> | <a href=\"findPwdForm.me\">비밀번호 찾기</a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <button type=\"submit\" class=\"login-btn\">로그인</button>\r\n");
      out.write("            </form>\r\n");
      out.write("            <hr>\r\n");
      out.write("            <div class=\"signup-box\">\r\n");
      out.write("                <p class=\"signup-text1\">아직 계정이 없으신가요?</p>\r\n");
      out.write("                <p class=\"signup-text2\">개인 계정을 생성하시면 더욱 다양한 혜택을 누리실 수 있습니다.</p>\r\n");
      out.write("                <button type=\"button\" class=\"signup-btn\" onclick=\"location.href='enrollForm.me'\">Filoom 계정 만들기</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("    \r\n");
      out.write("	    $(function () {\r\n");
      out.write("	        $(\"form\").on(\"submit\", function (e) {\r\n");
      out.write("	            e.preventDefault(); // 기본 폼 제출 동작 방지\r\n");
      out.write("	\r\n");
      out.write("	            // 클라이언트 유효성 검사\r\n");
      out.write("	            const userId = $(\"#userId\").val().trim();\r\n");
      out.write("	            const userPwd = $(\"#userPwd\").val().trim();\r\n");
      out.write("	\r\n");
      out.write("	            if (!userId) {\r\n");
      out.write("	                alert(\"아이디를 입력해주세요\");\r\n");
      out.write("	                $(\"#userId\").focus(); // 아이디 입력창 포커스\r\n");
      out.write("	                return false; // 더 이상 진행하지 않음\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if (!userPwd) {\r\n");
      out.write("	                alert(\"비밀번호를 입력해주세요\");\r\n");
      out.write("	                $(\"#userPwd\").focus(); // 비밀번호 입력창 포커스\r\n");
      out.write("	                return false; // 더 이상 진행하지 않음\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            // 클라이언트 유효성 검사를 통과하면 AJAX 요청\r\n");
      out.write("	            const formData = $(this).serialize(); // 폼 데이터 직렬화\r\n");
      out.write("	\r\n");
      out.write("	            $.ajax({\r\n");
      out.write("	                url: \"login.me\",\r\n");
      out.write("	                method: \"POST\",\r\n");
      out.write("	                data: formData,\r\n");
      out.write("	                success: function (response) {\r\n");
      out.write("	                    if (response === \"로그인 성공\") {\r\n");
      out.write("	                        // alert(response);\r\n");
      out.write("	                        location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\"; // 홈으로 이동\r\n");
      out.write("	                    } else {\r\n");
      out.write("	                        alert(response); // 실패 메시지 출력\r\n");
      out.write("	                    }\r\n");
      out.write("	                },\r\n");
      out.write("	                error: function () {\r\n");
      out.write("	                    alert(\"로그인 처리 중 문제가 발생했습니다. 다시 시도해주세요.\");\r\n");
      out.write("	                }\r\n");
      out.write("	            });\r\n");
      out.write("	        });\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                        ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                        ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                    ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/member/loginForm.jsp(173,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ not empty cookie.saveId }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                            <div>\r\n");
          out.write("                                <input type=\"checkbox\" class=\"saveId\" id=\"saveId\" name=\"saveId\" value=\"y\" checked>\r\n");
          out.write("                                <label for=\"saveId\" class=\"saveId\">아이디 저장</label>\r\n");
          out.write("                            </div>\r\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                            <div>\r\n");
          out.write("                                <input type=\"checkbox\" class=\"saveId\" id=\"saveId\" name=\"saveId\" value=\"y\">\r\n");
          out.write("                                <label for=\"saveId\" class=\"saveId\">아이디 저장</label>\r\n");
          out.write("                            </div>\r\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
