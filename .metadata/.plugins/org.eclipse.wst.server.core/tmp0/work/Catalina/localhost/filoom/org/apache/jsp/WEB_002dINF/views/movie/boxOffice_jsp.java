/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-12-29 09:02:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.movie;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boxOffice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1734951689000L));
    _jspx_dependants.put("jar:file:/C:/Final_Project/Filoom/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>꿈을 돌리는 영사기, Filoom</title>\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- fontawesome 연동 - 검색 아이콘 넣을 용도 -->\r\n");
      out.write("    <!-- ※ 계정을 파야 embed code를 제공해주던데\r\n");
      out.write("     혹시 다른 분들 자리에서도 검색 아이콘 뜨는지 확인바람\r\n");
      out.write("     참고로 이거 무료는 한 달에 1만 번 로드 횟수 제한 있으니까 테스트할 때는 비활성화 필요함\r\n");
      out.write("     Ctrl+Q,S로 여는 프리뷰 창도 카운트 되는 것으로 알고 있음 -->\r\n");
      out.write("    <script src=\"https://kit.fontawesome.com/4c4be5559b.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        /* === Overall Font === */\r\n");
      out.write("        * {\r\n");
      out.write("            font-family: \"Poppins\", sans-serif;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        body {\r\n");
      out.write("        	background-color: #151515;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* === 내부 div === */\r\n");
      out.write("        .backStage {\r\n");
      out.write("            background-color: #313131;\r\n");
      out.write("            color:white;\r\n");
      out.write("            width:1324px;\r\n");
      out.write("            margin:auto;\r\n");
      out.write("            border-radius:5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .backStage>#title {\r\n");
      out.write("            display:inline-block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .backStage h1 {\r\n");
      out.write("            font-size:45px;\r\n");
      out.write("            padding-left:40px;\r\n");
      out.write("            margin-top:20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #showMore {\r\n");
      out.write("            text-align:right;\r\n");
      out.write("            padding-right:120px;\r\n");
      out.write("            font-size:30px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* === 영화 목록 바로 위 설정란 === */\r\n");
      out.write("        /* === Toggle Switch === */\r\n");
      out.write("        .switch {\r\n");
      out.write("            position: relative;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            width: 40px;\r\n");
      out.write("            height: 22px;\r\n");
      out.write("            vertical-align:middle;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Hide default HTML checkbox */\r\n");
      out.write("        .switch input {display:none;}\r\n");
      out.write("\r\n");
      out.write("        /* The slider */\r\n");
      out.write("        .slider {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            right: 0;\r\n");
      out.write("            bottom: 0;\r\n");
      out.write("            background-color: #939393;\r\n");
      out.write("            -webkit-transition: .4s;\r\n");
      out.write("            transition: .4s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .slider:before {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            content: \"\";\r\n");
      out.write("            height: 18px;\r\n");
      out.write("            width: 18px;\r\n");
      out.write("            left: 2px;\r\n");
      out.write("            bottom: 2px;\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            -webkit-transition: .4s;\r\n");
      out.write("            transition: .4s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input:checked + .slider {\r\n");
      out.write("            background-color: #AB886D;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input:focus + .slider {\r\n");
      out.write("            box-shadow: 0 0 1px #67503F;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input:checked + .slider:before {\r\n");
      out.write("            -webkit-transform: translateX(18px);\r\n");
      out.write("            -ms-transform: translateX(18px);\r\n");
      out.write("            transform: translateX(18px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Rounded sliders */\r\n");
      out.write("        .slider.round {\r\n");
      out.write("            border-radius: 34px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .slider.round:before {\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === Toggle Switch END === */\r\n");
      out.write("\r\n");
      out.write("        .middle>a {\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color:white;\r\n");
      out.write("        }\r\n");
      out.write("        .middle>a:hover {\r\n");
      out.write("            color:black;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .search-bar {\r\n");
      out.write("            font-style:italic;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .poster {\r\n");
      out.write("            width:240px;\r\n");
      out.write("            border-radius:5px;\r\n");
      out.write("            margin-bottom:5px;\r\n");
      out.write("        }\r\n");
      out.write("        .poster:hover {\r\n");
      out.write("        	cursor:pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #filmrate {\r\n");
      out.write("            width:50px;\r\n");
      out.write("        }\r\n");
      out.write("        .filmrate {\r\n");
      out.write("            width:45px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /**/\r\n");
      out.write("\r\n");
      out.write("        .movie {\r\n");
      out.write("            display:inline-block;\r\n");
      out.write("            /* 이걸로 충분함. 굳이 4x4를 고민할 필요 없음 */\r\n");
      out.write("            margin:10px 30px;\r\n");
      out.write("            /* font-size:24px; */\r\n");
      out.write("            text-align:left;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .movie-info {\r\n");
      out.write("            font-size:20px;\r\n");
      out.write("            \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 페이징바 */\r\n");
      out.write("        .pagingbar {\r\n");
      out.write("            margin-bottom:10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .pagingbar button {\r\n");
      out.write("            border:0;\r\n");
      out.write("            background-color: transparent;\r\n");
      out.write("            color:white;\r\n");
      out.write("            font-size:32px;\r\n");
      out.write("            font-weight:lighter;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .pagingbar button:hover {\r\n");
      out.write("            transform: scale(1.1);\r\n");
      out.write("            font-weight: normal;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"backStage\">\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"movie-pool\" align=\"center\">\r\n");
      out.write("            <div id=\"title\" align=\"left\">\r\n");
      out.write("                <h1>박스 오피스</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <hr style=\"width:95%;\">\r\n");
      out.write("\r\n");
      out.write("            <div style=\"display:flex; justify-content:space-between;\">\r\n");
      out.write("                <div class=\"left\" style=\"padding-left:30px;\">\r\n");
      out.write("                    <label for=\"openedOnly\">상영중인 영화만 표시</label>    \r\n");
      out.write("                        <label class=\"switch\">\r\n");
      out.write("                            <input id=\"openedOnly\" type=\"checkbox\" onchange=\"toggleSwitch();\">\r\n");
      out.write("                            <span class=\"slider round\"></span>\r\n");
      out.write("                        </label>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- ※ 상세 정렬 기준\r\n");
      out.write("                 default : MOVIE_NO 역순 (관리자 측 영화 목록과 동일)\r\n");
      out.write("                 개봉순 : \"현재 상영작\" 중 개봉이 빠른 순.\r\n");
      out.write("                 평점순 : \"현재 상영작\" 중 리뷰 평점 높은 순, 같을 경우 개봉이 빠른 순\r\n");
      out.write("                    ※ 재개봉작의 개봉일자는 마지막 재개봉 날짜로 간주\r\n");
      out.write("                 ※ 위 두 정렬 기준 사용 중에는 switch#openedOnly가 ON으로 고정\r\n");
      out.write("                 이름순 = 한글 제목을 기준으로 ㄱ-ㅎ, 0-9 순\r\n");
      out.write("                  -->\r\n");
      out.write("                <div class=\"middle\">\r\n");
      out.write("                    <!-- <p>정렬 기준 |</p> -->\r\n");
      out.write("                    정렬 기준 |\r\n");
      out.write("                    <a href=\"javascript:listbyOpenedOrder(1);\">개봉순</a>\r\n");
      out.write("                    <a href=\"javascript:listbyCritics(1);\">평점순</a>\r\n");
      out.write("                    <a href=\"javascript:listbyName(1);\">이름순</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"right\" style=\"padding-right:30px;\">\r\n");
      out.write("                    <input type=\"search\" class=\"search-bar\" placeholder=\"제목으로 검색...\"\r\n");
      out.write("                    	name=\"keyword\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.keyword}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    <i class=\"fa-solid fa-magnifying-glass\"\r\n");
      out.write("                    	onclick=\"searchMovie();\"></i>\r\n");
      out.write("                    <!-- ↑ 이게 검색 아이콘인데 횟수 절약을 위해 잠시 비활성화 처리하였음 -->\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <br>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"movie-list\">\r\n");
      out.write("	            <!--  -->\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <script>\r\n");
      out.write("        	$(function() {\r\n");
      out.write("        		viewAll(1);\r\n");
      out.write("        	});\r\n");
      out.write("        	\r\n");
      out.write("        	function toggleSwitch() {\r\n");
      out.write("        		// alert($(\"#openedOnly\").prop(\"checked\"));\r\n");
      out.write("        		if(!$(\"#openedOnly\").prop(\"checked\")) {\r\n");
      out.write("        			viewAll(1);\r\n");
      out.write("        		} else {\r\n");
      out.write("        			openedOnly(1);\r\n");
      out.write("        		}\r\n");
      out.write("        	}\r\n");
      out.write("        	\r\n");
      out.write("        	// 별도의 jsp에 JSTL을 적용한 것을 AJAX로 띄우는 방식\r\n");
      out.write("        	// 출처: https://velog.io/@hana78786/Ajax를-활용하여-jstl-적용하기\r\n");
      out.write("        	function viewAll(cpage) {\r\n");
      out.write("        		$.ajax({\r\n");
      out.write("    				url: \"viewall.mo?cpage=\"+cpage,\r\n");
      out.write("    				type: \"get\",\r\n");
      out.write("    				dataType:\"html\",\r\n");
      out.write("    				\r\n");
      out.write("    				success: function(result) {\r\n");
      out.write("    					$(\".movie-list\").empty();\r\n");
      out.write("    					$(\".movie-list\").append(result);\r\n");
      out.write("    					refreshPagingBar('all', cpage);\r\n");
      out.write("    				},\r\n");
      out.write("    				error: function() {\r\n");
      out.write("    					alert(\"Mission Failure\");\r\n");
      out.write("    				}\r\n");
      out.write("    			});	\r\n");
      out.write("        	}\r\n");
      out.write("        	\r\n");
      out.write("        	function openedOnly(cpage) {\r\n");
      out.write("        		$.ajax({\r\n");
      out.write("    				url: \"viewopened.mo?cpage=\"+cpage,\r\n");
      out.write("    				type: \"get\",\r\n");
      out.write("    				dataType:\"html\",\r\n");
      out.write("    				\r\n");
      out.write("    				success: function(result) {    					\r\n");
      out.write("    					$(\".movie-list\").empty();\r\n");
      out.write("    					$(\".movie-list\").append(result);\r\n");
      out.write("    					refreshPagingBar('open', cpage);\r\n");
      out.write("    				},\r\n");
      out.write("    				error: function() {\r\n");
      out.write("    					alert(\"Mission Failure\");\r\n");
      out.write("    				}\r\n");
      out.write("    			});\r\n");
      out.write("        	}\r\n");
      out.write("        	\r\n");
      out.write("        	// 상영작 한정 스위치 체크 여부에 따라 함수 나누고 싶은데 고민 중\r\n");
      out.write("        	function listbyOpenedOrder(cpage) {\r\n");
      out.write("        		$.ajax({\r\n");
      out.write("    				url: \"openorder.mo?cpage=\"+cpage,\r\n");
      out.write("    				type: \"get\",\r\n");
      out.write("    				dataType:\"html\",\r\n");
      out.write("    				\r\n");
      out.write("    				success: function(result) {\r\n");
      out.write("    					$(\".movie-list\").empty();\r\n");
      out.write("    					$(\".movie-list\").append(result);\r\n");
      out.write("    					refreshPagingBar('order', cpage);\r\n");
      out.write("    				},\r\n");
      out.write("    				error: function() {\r\n");
      out.write("    					alert(\"Mission Failure\");\r\n");
      out.write("    				}\r\n");
      out.write("    			});\r\n");
      out.write("        	}\r\n");
      out.write("        	\r\n");
      out.write("        	function listbyCritics(cpage) {\r\n");
      out.write("        		$.ajax({\r\n");
      out.write("    				url: \"criticchoice.mo?cpage=\"+cpage,\r\n");
      out.write("    				type: \"get\",\r\n");
      out.write("    				dataType:\"html\",\r\n");
      out.write("    				\r\n");
      out.write("    				success: function(result) {    					\r\n");
      out.write("    					$(\".movie-list\").empty();\r\n");
      out.write("    					$(\".movie-list\").append(result);\r\n");
      out.write("    					refreshPagingBar('critic', cpage);\r\n");
      out.write("    				},\r\n");
      out.write("    				error: function() {\r\n");
      out.write("    					alert(\"Mission Failure\");\r\n");
      out.write("    				}\r\n");
      out.write("    			});\r\n");
      out.write("        	}\r\n");
      out.write("        	\r\n");
      out.write("        	// '이름순'을 눌렀을 때, '상영중인 영화만 표시' 스위치가 켜져 있으면 상영중인 영화만 가지고 정렬함\r\n");
      out.write("        	function listbyName(cpage) {\r\n");
      out.write("\r\n");
      out.write("        		$.ajax({\r\n");
      out.write("//         			if($(\"#openedOnly\").prop(\"checked\")) {\r\n");
      out.write("//         				url: \"nameorderplaying.mo?cpage=\"+cpage\r\n");
      out.write("//         			} else {\r\n");
      out.write("//         				url: \"nameorder.mo?cpage=\"+cpage\r\n");
      out.write("//         			},\r\n");
      out.write("					url: ($(\"#openedOnly\").prop(\"checked\") ? \"nameorderplaying\" : \"nameorder\")\r\n");
      out.write("						+\".mo?cpage=\"+cpage,\r\n");
      out.write("    				type: \"get\",\r\n");
      out.write("    				dataType:\"html\",\r\n");
      out.write("    				\r\n");
      out.write("    				success: function(result) {\r\n");
      out.write("    					$(\".movie-list\").empty();\r\n");
      out.write("    					$(\".movie-list\").append(result);\r\n");
      out.write("    					refreshPagingBar('name', cpage);\r\n");
      out.write("    				},\r\n");
      out.write("    				error: function() {\r\n");
      out.write("    					alert(\"Mission Failure\");\r\n");
      out.write("    				}\r\n");
      out.write("    			});\r\n");
      out.write("\r\n");
      out.write("        	}\r\n");
      out.write("        	\r\n");
      out.write("        	function searchMovie() {\r\n");
      out.write("        		let keyword = $(\"input[name=keyword]\").val();\r\n");
      out.write("        		console.log(keyword);\r\n");
      out.write("        		// status = '상영중인 영화만 표시' 스위치 체크 여부\r\n");
      out.write("        		let status = $(\"#openedOnly\").prop(\"checked\") ? 1 : 0;\r\n");
      out.write("        		if(keyword != \"\") {\r\n");
      out.write("        			$.ajax({\r\n");
      out.write("	        			url: \"searchMovie.mo\",\r\n");
      out.write("	        			type: \"get\",\r\n");
      out.write("	        			data: {\"keyword\" : keyword, \"status\" : status},\r\n");
      out.write("	        			dataType:\"html\",\r\n");
      out.write("	        			\r\n");
      out.write("	        			success: function(result) {\r\n");
      out.write("	    					$(\".movie-list\").empty();\r\n");
      out.write("	    					$(\".movie-list\").append(result);\r\n");
      out.write("	    					$(\".pagingbar\").empty();\r\n");
      out.write("	    					//refreshPagingBar(??);\r\n");
      out.write("	    					/* 검색 기능에서는 일부러 페이징바를 넣지 않으려고 하는데\r\n");
      out.write("	    					 더미데이터(30편)에서 '아' 한 글자로 검색해도 10편 정도밖에 안 되기 때문임\r\n");
      out.write("	    					 대신 페이징바를 없애는 기능으로 구현하였음\r\n");
      out.write("	    					*/\r\n");
      out.write("	    				},\r\n");
      out.write("	    				error: function() {\r\n");
      out.write("	    					alert(\"Mission Failure\");\r\n");
      out.write("	    				}\r\n");
      out.write("        			});\r\n");
      out.write("        		}\r\n");
      out.write("        	}\r\n");
      out.write("        	\r\n");
      out.write("        	\r\n");
      out.write("        	function refreshPagingBar(sort, cpage) {\r\n");
      out.write("        		$(\".pagingbar\").empty();\r\n");
      out.write("        		let link = '';\r\n");
      out.write("        		let pgbar = '';\r\n");
      out.write("\r\n");
      out.write("        		switch(sort) {\r\n");
      out.write("        			case 'all' : link =\"viewAll(\"; break;\r\n");
      out.write("        			case 'open' : link =\"openedOnly(\"; break;\r\n");
      out.write("        			case 'order' : link = \"listbyOpenedOrder(\"; break;\r\n");
      out.write("        			case 'critic' : link = \"listbyCritics(\"; break;\r\n");
      out.write("        			case 'name' : link = \"listbyName(\"; break;\r\n");
      out.write("        			// default : alert('오류가 발생했습니다.'); return;\r\n");
      out.write("        		}\r\n");
      out.write("\r\n");
      out.write("        		// EL 태그를 function 안에 쓸 수 없어서 다른 방법을 연구하는 중\r\n");
      out.write("        		// 여기만 해결하면 진짜 끝남\r\n");
      out.write("     \r\n");
      out.write("        		let start = $(\"#first\").val();\r\n");
      out.write("        		let end = $(\"#last\").val();\r\n");
      out.write("        		let max = $(\"#MX\").val();\r\n");
      out.write("        		\r\n");
      out.write("        		console.log(\"start = \" + start + \", end = \" + end + \", max = \" + max);\r\n");
      out.write("        				\r\n");
      out.write("    			// '<<', '<' 처리\r\n");
      out.write("        		if(cpage > 1) {\r\n");
      out.write("        			// add &lt;&lt;\r\n");
      out.write("        			// add &lt;\r\n");
      out.write("        			pgbar += \"<button onclick= '\" + link + \"1);'>&lt;&lt;</button> <!-- to Page1 -->\"\r\n");
      out.write("        				+ \"<button onclick= '\" + link + (cpage-1) + \");'>&lt;</button> <!-- Prev -->\";\r\n");
      out.write("        		}\r\n");
      out.write("\r\n");
      out.write("        		for(let i = start; i <= Math.min(end,max); i++) {\r\n");
      out.write("\r\n");
      out.write("        			if(i == cpage) {\r\n");
      out.write("        				// font-weight:normal 넣는 이유 : 나머지는 lighter로 해놨음\r\n");
      out.write("        				pgbar += \"<button disabled style='font-weight: normal;' onclick= '\" + link + i + \");'>\"\r\n");
      out.write("        					+ i + \"</button>\";\r\n");
      out.write("        			}\r\n");
      out.write("        			else {\r\n");
      out.write("        				pgbar += \"<button onclick= '\" + link + i + \");'>\" + i + \"</button>\";\r\n");
      out.write("        			}\r\n");
      out.write("        		}\r\n");
      out.write("\r\n");
      out.write("        		if (cpage < max) {\r\n");
      out.write("        			// add &gt;\r\n");
      out.write("        			// add &gt;&gt;\r\n");
      out.write("        			pgbar += \"<button onclick= '\" + link\r\n");
      out.write("        					+ (cpage+1) + \");'>&gt;</button> <!-- Next -->\"\r\n");
      out.write("        				+ \"<button onclick= '\" + link + max + \")';>&gt;&gt;</button> <!-- to LastPage -->\";\r\n");
      out.write("        		}\r\n");
      out.write("\r\n");
      out.write("        		$(\".pagingbar\").html(pgbar);\r\n");
      out.write("        		\r\n");
      out.write("        	}\r\n");
      out.write("        </script>\r\n");
      out.write("        <br><br>\r\n");
      out.write("\r\n");
      out.write("        <!-- Paging Bar -->\r\n");
      out.write("        <!-- 영화 상세 페이지 때문에 임시 화면 남겨둔 건데 해당 화면 완성되면 이 페이징바(임시)도 같이 삭제할 예정 -->\r\n");
      out.write("        <div class=\"pagingbar\" align=\"center\">\r\n");
      out.write("            <!-- if i > 1 -->\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            <!-- if 3 ≤ i ≤ maxPage-2, for i in range (currentPage -2 ~ +2) -->\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <!--  if i < maxPage -->\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <br><br>\r\n");
      out.write("\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/movie/boxOffice.jsp(438,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ requestScope.pi.currentPage gt 1 }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                <button onclick=\"location.href = 'boxoffice.mo?page=1';\">&lt;&lt;</button> <!-- to Page1 -->\r\n");
          out.write("                <button onclick=\"location.href = 'boxoffice.mo?page=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p-1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("';\">&lt;</button> <!-- prev -->\r\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/movie/boxOffice.jsp(444,12) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("p");
      // /WEB-INF/views/movie/boxOffice.jsp(444,12) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setBegin(((java.lang.Integer) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.pi.startPage }", int.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).intValue());
      // /WEB-INF/views/movie/boxOffice.jsp(444,12) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setEnd(((java.lang.Integer) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.pi.endPage }", int.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).intValue());
      // /WEB-INF/views/movie/boxOffice.jsp(444,12) name = step type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setStep(1);
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("            	");
            if (_jspx_meth_c_005fchoose_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("            ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            		");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("            		");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("            	");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/movie/boxOffice.jsp(446,14) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(false);
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(" <!-- button refers to currentPage -->\r\n");
          out.write("            			<button class=\"currentPage\" disabled>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</button>\r\n");
          out.write("            		");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            			<button onclick=\"location.href = 'boxoffice.mo?page=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("';\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</button>\r\n");
          out.write("            		");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/movie/boxOffice.jsp(456,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ requestScope.pi.currentPage lt requestScope.pi.maxPage }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                <button onclick=\"location.href = 'boxoffice.mo?page=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p+1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("';\">&gt;</button> <!-- next -->    \r\n");
          out.write("                <button onclick=\"location.href = 'boxoffice.mo?page=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.pi.maxPage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("';\">&gt;&gt;</button> <!-- to LastPage -->\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
