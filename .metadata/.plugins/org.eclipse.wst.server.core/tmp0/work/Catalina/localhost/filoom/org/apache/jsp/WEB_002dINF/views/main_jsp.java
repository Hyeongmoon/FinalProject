/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-02-20 10:03:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1740045704991L));
    _jspx_dependants.put("jar:file:/C:/00_FinalProject/Filoom/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/00_FinalProject/Filoom/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/mainstyle.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=2ca4036e4722868bde0211b5c0b8f26e\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("	<div id = \"main_content1\">\r\n");
      out.write("        <div id = \"header\">\r\n");
      out.write("            <div id = \"header_top\">\r\n");
      out.write("                \r\n");
      out.write("                <ul>\r\n");
      out.write("   \r\n");
      out.write("                    <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/list.no\">공지사항</a></li> &nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("                    <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/list.fa\">문의</a></li>\r\n");
      out.write("     \r\n");
      out.write("                </ul>\r\n");
      out.write("     \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    				");
      if (_jspx_meth_c_005fchoose_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("	                ");
      if (_jspx_meth_c_005fchoose_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    \r\n");
      out.write("            </div>\r\n");
      out.write("            <hr >\r\n");
      out.write("            <div id = \"header_bottom\">\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/movies.mo\">영화</a></li>\r\n");
      out.write("	                ");
      if (_jspx_meth_c_005fchoose_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/list.ev\">이벤트</a></li>\r\n");
      out.write("    \r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <div id=\"content1_real\">\r\n");
      out.write("            <div id=\"video\">\r\n");
      out.write("                  <iframe \r\n");
      out.write("				    id=\"movie-video\" \r\n");
      out.write("				    width=\"1900\" \r\n");
      out.write("				    height=\"1080\" \r\n");
      out.write("				    src=\"https://www.youtube.com/embed/4DM8_51bz-c?autoplay=1&mute=1\" \r\n");
      out.write("				    title=\"YouTube video player\" \r\n");
      out.write("				    frameborder=\"0\" \r\n");
      out.write("				    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n");
      out.write("				    allowfullscreen>\r\n");
      out.write("				</iframe>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div id=\"content1_detail\">\r\n");
      out.write("                <div id=\"detail_main\">\r\n");
      out.write("                    <div id=\"main_blank\">\r\n");
      out.write("                        <div id=\"blank_blank\"></div>\r\n");
      out.write("                        <!-- 여기에 영화 제목 -->\r\n");
      out.write("                        <div id=\"detail_title\">\r\n");
      out.write("                            <a></a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div id=\"main_detail\">\r\n");
      out.write("                        <div id=\"detail_sum\">\r\n");
      out.write("                        <!--  -->\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div id=\"another_movie\">\r\n");
      out.write("                            \r\n");
      out.write("                        </div>\r\n");
      out.write("                        \r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div id=\"main_detail_overlay\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div id = \"main_content3\">\r\n");
      out.write("        \r\n");
      out.write("        <div id = \"main_content3_1\">\r\n");
      out.write("            <div id = \"main_content3_title\">\r\n");
      out.write("                영화 리뷰\r\n");
      out.write("            </div>\r\n");
      out.write("            <div id = \"content3_real\">\r\n");
      out.write("\r\n");
      out.write("                <div id = \"content3_thumbnail\">\r\n");
      out.write("                    <img src=\"resources/images/posters/wicked1.jpg\" alt=\"위키드\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div id = \"content3_detail\">\r\n");
      out.write("                    <div id = \"content3_summary\" style=\"height:50%; color:white;\">\r\n");
      out.write("						<h1>위키드</h1><br>\r\n");
      out.write("						<h3>작성자 : tenl****</h3>\r\n");
      out.write("						<h3>★★★★★</h3>\r\n");
      out.write("						<br><br>\r\n");
      out.write("						<p>동명의 소설을 N번, 동명의 뮤지컬을 1N번 본 사람으로써, 원작 팬으로써의 엄격한 잣대를 가지고 영화를 보러 갔다. 조금이라도 맘에 안 들면 바로 1점 때릴 생각으로.  그런데 이 영화는, 맘에 안 드는 구석을 전혀 찾을 수 없었다...</p>\r\n");
      out.write("						\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div id = \"content3_subimg\">\r\n");
      out.write("                        <img src=\"resources/images/posters/wicked3.jpg\" alt=\"영화 2\">\r\n");
      out.write("                        <img src=\"resources/images/posters/wicked4.jpg\" alt=\"영화 2\">\r\n");
      out.write("                        <img src=\"resources/images/posters/wicked5.jpg\" alt=\"영화 2\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("          \r\n");
      out.write("            <div id=\"content3_booking\">\r\n");
      out.write("                <button>예약하러 가기</button>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("       \r\n");
      out.write("       \r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    <div id = \"service\">\r\n");
      out.write("        <div id =\"service1\">\r\n");
      out.write("            <div id = \"service1_img\">\r\n");
      out.write("                <img src =\"resources/images/posters/notification.png\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div id = \"service1_detail\">\r\n");
      out.write("                <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/list.no\" style=\"text-decoration:none; color:black;\">공지사항</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id = \"service1\">\r\n");
      out.write("            <div id = \"service1_img\">\r\n");
      out.write("                <img src =\"resources/images/posters/question.png\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div id = \"service1_detail\">\r\n");
      out.write("                <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/list.fa\" style=\"text-decoration:none; color:black;\">자주 묻는 질문</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div id=\"main_content2\">\r\n");
      out.write("       \r\n");
      out.write("        <div id =\"content2_real\">\r\n");
      out.write("            <div id=\"content2_title\">\r\n");
      out.write("                최신 상영작\r\n");
      out.write("            </div>\r\n");
      out.write("        \r\n");
      out.write("            <div id=\"content2_movies\">\r\n");
      out.write("                \r\n");
      out.write("\r\n");
      out.write("                \r\n");
      out.write("\r\n");
      out.write("                \r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        \r\n");
      out.write("            <div id=\"content2_booking\">\r\n");
      out.write("                <button onclick=\"location.href=boxoffice.mo;\">더보기</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("	<br><br>\r\n");
      out.write("	\r\n");
      out.write("	<div style = \"width:1400px; height:950px;margin:auto; border:1px solid #E4E0E1;\">\r\n");
      out.write("	\r\n");
      out.write("	<div id = \"map_title\" style=\"margin:auto; margin-top:60px; text-align:center;\" ><h1 style=\"color:white;\">찾아오시는 길</h1></div>\r\n");
      out.write("		<br>\r\n");
      out.write("		<br>\r\n");
      out.write("        \r\n");
      out.write("		<div id=\"map\" style=\"width:800px;height:600px; margin:auto;\"></div><br>\r\n");
      out.write("		<div id = \"map_title\" style=\"margin:auto; margin-top:60px; text-align:center;\" ><h1 style=\"color:white;\">\r\n");
      out.write("			서울특별시 영등포구 선유동2로 57 이레빌딩(구관) 19F, 20F (T: 1544-0000 / F: 02-2000-0000)\r\n");
      out.write("		</h1></div>\r\n");
      out.write("		<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=516002f043bc29ef122d1d4a95ed7be4\"></script>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("    \r\n");
      out.write("    	\r\n");
      out.write("       const contextPath = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("    \r\n");
      out.write("       document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("            // 첫 번째 영화 카드 선택\r\n");
      out.write("            setSelectedCard('movie1');\r\n");
      out.write("            changeVideo('\"https://www.youtube.com/watch?v=4DM8_51bz-c\"', '조커');\r\n");
      out.write("\r\n");
      out.write("            // 각 영화 카드 클릭 이벤트 리스너\r\n");
      out.write("            document.getElementById('movie1').addEventListener('click', function() {\r\n");
      out.write("                changeVideo('images/joker.mp4', '조커');\r\n");
      out.write("                setSelectedCard('movie1');\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            document.getElementById('movie2').addEventListener('click', function() {\r\n");
      out.write("                changeVideo('images/gladiator.mp4', '글래디에이터');\r\n");
      out.write("                setSelectedCard('movie2');\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // 선택된 카드에 'selected' 클래스를 추가하는 함수\r\n");
      out.write("            function setSelectedCard(selectedId) {\r\n");
      out.write("			    // 모든 movie-card에서 'selected' 클래스를 제거\r\n");
      out.write("			    var allCards = document.querySelectorAll('.movie-card');\r\n");
      out.write("			    allCards.forEach(function(card) {\r\n");
      out.write("			        card.classList.remove('selected');\r\n");
      out.write("			    });\r\n");
      out.write("			\r\n");
      out.write("			    // 클릭된 카드에 'selected' 클래스를 추가\r\n");
      out.write("			    var selectedCard = document.getElementById(selectedId);\r\n");
      out.write("			    if (selectedCard) {\r\n");
      out.write("			        selectedCard.classList.add('selected');\r\n");
      out.write("			    }\r\n");
      out.write("			}\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("       /*\r\n");
      out.write("        function changeVideo(videoSrc, videoTitle) {\r\n");
      out.write("            var videoElement = document.getElementById('movie-video');\r\n");
      out.write("            var sourceElement = document.getElementById('video-source');\r\n");
      out.write("            var titleElement = document.getElementById('detail_title').querySelector('a');\r\n");
      out.write("\r\n");
      out.write("            if (sourceElement) {\r\n");
      out.write("                // 비디오 소스 변경\r\n");
      out.write("                sourceElement.src = videoSrc;\r\n");
      out.write("                videoElement.load();  // 비디오 재로드\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 제목 변경\r\n");
      out.write("            if (titleElement) {\r\n");
      out.write("                titleElement.textContent = videoTitle;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("		*/\r\n");
      out.write("        \r\n");
      out.write("        function changeVideo(videoSrc, videoTitle) {\r\n");
      out.write("            var videoElement = document.getElementById('movie-video');\r\n");
      out.write("            var sourceElement = document.getElementById('video-source');\r\n");
      out.write("            var titleElement = document.getElementById('detail_title').querySelector('a');\r\n");
      out.write("\r\n");
      out.write("            if (sourceElement) {\r\n");
      out.write("                // 비디오 소스 변경\r\n");
      out.write("                sourceElement.src = videoSrc;\r\n");
      out.write("                videoElement.load(); // 비디오 재로드\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 제목 변경\r\n");
      out.write("            if (titleElement) {\r\n");
      out.write("                titleElement.textContent = videoTitle;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function requireLoginAlert() {\r\n");
      out.write("		    alert(\"로그인이 필요한 기능입니다!\");\r\n");
      out.write("		}\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        $(document).ready(function () {\r\n");
      out.write("            const moviesData = []; // 영화 데이터를 저장할 배열\r\n");
      out.write("            let currentIndex = 0; // 현재 표시된 영화의 마지막 인덱스\r\n");
      out.write("            const itemsPerPage = 12; // 처음 표시할 영화 수\r\n");
      out.write("            const loadMoreCount = 3; // 더보기 클릭 시 추가로 표시할 영화 수\r\n");
      out.write("\r\n");
      out.write("            // 초기 데이터 로드\r\n");
      out.write("            callMainEndpoint();\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            // AJAX 요청 함수\r\n");
      out.write("            \r\n");
      out.write("            function callMainEndpoint() {\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: \"main.do\", \r\n");
      out.write("                    type: \"POST\",\r\n");
      out.write("                    dataType: \"json\",\r\n");
      out.write("                    success: function (response) {\r\n");
      out.write("                        console.log(\"Response from main.do:\", response);\r\n");
      out.write("                        moviesData.push(...response.list3); // 영화 데이터를 배열에 추가\r\n");
      out.write("                        renderMovies(); // 초기 렌더링\r\n");
      out.write("                        \r\n");
      out.write("                        if (response.list1) {\r\n");
      out.write("                            renderAnotherMovies(response.list1); // list1 데이터를 렌더링\r\n");
      out.write("                        } else {\r\n");
      out.write("                            console.error(\"No data in response.list1:\", response);\r\n");
      out.write("                            alert(\"데이터가 없습니다.\");\r\n");
      out.write("                        }\r\n");
      out.write("                        \r\n");
      out.write("                    },\r\n");
      out.write("                    error: function (xhr, status, error) {\r\n");
      out.write("                        console.error(\"AJAX Error:\", status, error);\r\n");
      out.write("                        alert(\"데이터를 가져오는 데 실패했습니다.\");\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            function renderAnotherMovies(moviesData) {\r\n");
      out.write("                // 영화 데이터를 렌더링할 대상 div\r\n");
      out.write("                var anotherMovieDiv = document.getElementById('another_movie');\r\n");
      out.write("                anotherMovieDiv.innerHTML = ''; // 기존 내용을 초기화\r\n");
      out.write("\r\n");
      out.write("                console.log(\"무비 데이터: \", moviesData);\r\n");
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                // moviesData 배열의 각 항목을 순회하며 HTML 생성\r\n");
      out.write("                moviesData.forEach(function(movie, index) {\r\n");
      out.write("                    var movieCard =\r\n");
      out.write("                        '<div class=\"movie-card\" id=\"movie' + (index + 1) + '\" onclick=\"updateMovieDetail(' + index + ')\">' +\r\n");
      out.write("                            '<img src=\"' + contextPath + '/resources/images/posters/' + movie.fileCodename + '\" alt=\"' + movie.movieTitle + '\"' +\r\n");
      out.write("                            ' onerror=\"this.onerror=null; this.src=\\'' + contextPath + '/resources/images/default.jpg\\';\">' \r\n");
      out.write("                            +\r\n");
      out.write("                            //'<p style = \"width\">' + movie.movieTitle + '</p>' +\r\n");
      out.write("                        '</div>';\r\n");
      out.write("                    anotherMovieDiv.innerHTML += movieCard; // 새 카드 추가\r\n");
      out.write("                });\r\n");
      out.write("                \r\n");
      out.write("                moviesData.forEach(function(movie, index) {\r\n");
      out.write("                    const movieCardElement = document.getElementById('movie' + (index + 1));\r\n");
      out.write("                    if (movieCardElement) {\r\n");
      out.write("                        movieCardElement.addEventListener('click', function () {\r\n");
      out.write("                            // 비디오와 제목 업데이트\r\n");
      out.write("                            changeVideo(movie.imagePath + '/' + movie.fileCodename, movie.movieTitle);\r\n");
      out.write("                            setSelectedCard('movie' + (index + 1)); // 선택된 카드 강조\r\n");
      out.write("                        });\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                // 전역 변수로 영화 데이터를 저장\r\n");
      out.write("                window.moviesData = moviesData;\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 영화 데이터를 동적으로 렌더링\r\n");
      out.write("            function renderMovies() {\r\n");
      out.write("    			const container = $(\"#content2_movies\");\r\n");
      out.write("			    const maxIndex = Math.min(currentIndex + itemsPerPage, moviesData.length);\r\n");
      out.write("			\r\n");
      out.write("			    for (let i = currentIndex; i < maxIndex; i++) {\r\n");
      out.write("			        const movie = moviesData[i];\r\n");
      out.write("			        if (!movie) continue; // 유효하지 않은 데이터 건너뛰기\r\n");
      out.write("				\r\n");
      out.write("			        console.log(movie.moiveTitle);\r\n");
      out.write("			        \r\n");
      out.write("			        // 영화 카드 HTML 문자열 생성\r\n");
      out.write("			       const movieCard = '<div id=\"content2_card\">' +\r\n");
      out.write("					    '<div id=\"content2_img\">' +\r\n");
      out.write("					    '<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/posters/' \r\n");
      out.write("					    + movie.fileCodename \r\n");
      out.write("					    + '\" alt=\"' \r\n");
      out.write("					    + movie.movieTitle + '\"' +\r\n");
      out.write("				        ' onerror=\"this.onerror=null; this.src=\\'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/default.jpg\\';\">' +\r\n");
      out.write("					    '</div>' +\r\n");
      out.write("					    '<div class=\"movie-title\">' + movie.movieTitle + '</div>' +\r\n");
      out.write("					'</div>';\r\n");
      out.write("			\r\n");
      out.write("			        container.append(movieCard); // 영화 카드를 컨테이너에 추가\r\n");
      out.write("			    }\r\n");
      out.write("			\r\n");
      out.write("			    currentIndex = maxIndex;\r\n");
      out.write("			\r\n");
      out.write("			    \r\n");
      out.write("			    if (currentIndex >= moviesData.length) {\r\n");
      out.write("			        $(\"#content2_booking button\").hide();\r\n");
      out.write("			    }\r\n");
      out.write("			}\r\n");
      out.write("           \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            // \"더보기\" 버튼 클릭 이벤트\r\n");
      out.write("            $(\"#content2_booking button\").click(function () {\r\n");
      out.write("                const prevIndex = currentIndex;\r\n");
      out.write("                const newMaxIndex = Math.min(currentIndex + loadMoreCount, moviesData.length); // 최대 인덱스 계산\r\n");
      out.write("\r\n");
      out.write("                if (prevIndex === newMaxIndex) {\r\n");
      out.write("                    $(this).hide(); // 더 이상 데이터가 없으면 버튼 숨기기\r\n");
      out.write("                } else {\r\n");
      out.write("                    renderMovies(); // 추가 영화 렌더링\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        function updateMovieDetail(index) {\r\n");
      out.write("            const movie = moviesData[index];\r\n");
      out.write("\r\n");
      out.write("            // 제목 업데이트\r\n");
      out.write("            var titleElement = document.getElementById('detail_title').querySelector('a');\r\n");
      out.write("            titleElement.textContent = movie.movieTitle;\r\n");
      out.write("\r\n");
      out.write("            // 상세 설명 업데이트\r\n");
      out.write("            //var descriptionElement = document.getElementById('detail_sum').querySelector('a');\r\n");
      out.write("            //descriptionElement.textContent = movie.description;\r\n");
      out.write("\r\n");
      out.write("            // 동영상 업데이트\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            var iframe = document.getElementById('movie-video');\r\n");
      out.write("            const videoId = movie.trailer.split('v=')[1]; // YouTube Video ID 추출\r\n");
      out.write("            \r\n");
      out.write("            console.log(\"비디오 아이디 : \" +videoId);\r\n");
      out.write("            \r\n");
      out.write("            iframe.src = \"https://www.youtube.com/embed/\" + videoId + \"?autoplay=1&mute=1&controls=0&loop=1\";\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("	    mapOption = { \r\n");
      out.write("	        center: new kakao.maps.LatLng(37.533813, 126.896863), // 지도의 중심좌표\r\n");
      out.write("	        level: 3 // 지도의 확대 레벨\r\n");
      out.write("	    };\r\n");
      out.write("		\r\n");
      out.write("		var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n");
      out.write("		\r\n");
      out.write("		// 마커가 표시될 위치입니다 \r\n");
      out.write("		var markerPosition  = new kakao.maps.LatLng(37.533813, 126.896863); \r\n");
      out.write("		\r\n");
      out.write("		// 마커를 생성합니다\r\n");
      out.write("		var marker = new kakao.maps.Marker({\r\n");
      out.write("		    position: markerPosition\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 마커가 지도 위에 표시되도록 설정합니다\r\n");
      out.write("		marker.setMap(map);\r\n");
      out.write("       \r\n");
      out.write("		\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<!--Start of Tawk.to Script-->\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		var Tawk_API=Tawk_API||{}, Tawk_LoadStart=new Date();\r\n");
      out.write("		(function(){\r\n");
      out.write("		var s1=document.createElement(\"script\"),s0=document.getElementsByTagName(\"script\")[0];\r\n");
      out.write("		s1.async=true;\r\n");
      out.write("		s1.src='https://embed.tawk.to/6767f7c649e2fd8dfefbe09c/1ifn1vnud';\r\n");
      out.write("		s1.charset='UTF-8';\r\n");
      out.write("		s1.setAttribute('crossorigin','*');\r\n");
      out.write("		s0.parentNode.insertBefore(s1,s0);\r\n");
      out.write("		})();\r\n");
      out.write("	</script>\r\n");
      out.write("	<!--End of Tawk.to Script-->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/main.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("path");
      // /WEB-INF/views/main.jsp(4,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/main.jsp(4,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	    ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("	    ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write('\r');
          out.write('\n');
          out.write('	');
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/main.jsp(19,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${!empty sessionScope.loginUser && sessionScope.loginUser.userId == 'admin'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	        <!-- 로그인한 사용자가 admin일 경우 -->\r\n");
          out.write("			<div id=\"manager\" style=\"display: flex; justify-content: center; align-items: center; height: 100px; background-color: #000;\">\r\n");
          out.write("			    <a href=\"/filoom/ad.li\" style=\"text-decoration: none; font-size: 30px; color: white;\">관리자 메인페이지</a>\r\n");
          out.write("			</div>\r\n");
          out.write("	    ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	        <!-- 로그인한 사용자가 admin이 아닐 경우 아무것도 표시되지 않음 -->\r\n");
          out.write("	    ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f1_reused = false;
    try {
      _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f1.setParent(null);
      int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
      if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			            ");
          if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("	           		");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
      _jspx_th_c_005fchoose_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /WEB-INF/views/main.jsp(45,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ empty sessionScope.loginUser }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			                <!-- 로그인 전 -->\r\n");
          out.write("			                <ul>\r\n");
          out.write("				                <a class=\"logo\"  href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">Filoom</a>\r\n");
          out.write("			                </ul>\r\n");
          out.write("			            ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f1_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("    \r\n");
          out.write("			                <!-- 로그인 후 -->\r\n");
          out.write("			                <ul>\r\n");
          out.write("		                    	<a class=\"logo\" style=\"margin-left:1px;\" href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">Filoom</a>\r\n");
          out.write("		                    </ul>\r\n");
          out.write("			            ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f1);
      _jspx_th_c_005fotherwise_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f2 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f2_reused = false;
    try {
      _jspx_th_c_005fchoose_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f2.setParent(null);
      int _jspx_eval_c_005fchoose_005f2 = _jspx_th_c_005fchoose_005f2.doStartTag();
      if (_jspx_eval_c_005fchoose_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						");
          if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f2, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			            ");
          if (_jspx_meth_c_005fotherwise_005f2(_jspx_th_c_005fchoose_005f2, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("	           		");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f2);
      _jspx_th_c_005fchoose_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
      // /WEB-INF/views/main.jsp(62,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ empty sessionScope.loginUser }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			                <!-- 로그인 전 -->\r\n");
          out.write("			                <ul>\r\n");
          out.write("				                <li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/loginForm.me\">로그인</a></li> &nbsp;&nbsp;&nbsp;&nbsp;\r\n");
          out.write("				                <li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/enrollForm.me\">회원가입</a></li>\r\n");
          out.write("			                </ul>\r\n");
          out.write("			            ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f2 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f2_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
      int _jspx_eval_c_005fotherwise_005f2 = _jspx_th_c_005fotherwise_005f2.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("    \r\n");
          out.write("			                <!-- 로그인 후 -->\r\n");
          out.write("			                <ul>\r\n");
          out.write("		                    	<li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/profile.me\">마이페이지</a></li> &nbsp;&nbsp;&nbsp;&nbsp;\r\n");
          out.write("		                    	<li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/logout.me\">로그아웃</a></li>\r\n");
          out.write("		                    </ul>\r\n");
          out.write("			            ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f2);
      _jspx_th_c_005fotherwise_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f3 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f3_reused = false;
    try {
      _jspx_th_c_005fchoose_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f3.setParent(null);
      int _jspx_eval_c_005fchoose_005f3 = _jspx_th_c_005fchoose_005f3.doStartTag();
      if (_jspx_eval_c_005fchoose_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			            ");
          if (_jspx_meth_c_005fwhen_005f3(_jspx_th_c_005fchoose_005f3, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			            ");
          if (_jspx_meth_c_005fotherwise_005f3(_jspx_th_c_005fchoose_005f3, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			        ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f3);
      _jspx_th_c_005fchoose_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f3 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f3_reused = false;
    try {
      _jspx_th_c_005fwhen_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f3);
      // /WEB-INF/views/main.jsp(84,15) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ empty sessionScope.loginUser }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f3 = _jspx_th_c_005fwhen_005f3.doStartTag();
      if (_jspx_eval_c_005fwhen_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			                <!-- 로그인 전 -->\r\n");
          out.write("			                <li><a href=\"javascript:void(0);\" onclick=\"requireLoginAlert();\">예매</a></li>\r\n");
          out.write("			            ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f3);
      _jspx_th_c_005fwhen_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f3 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f3_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f3);
      int _jspx_eval_c_005fotherwise_005f3 = _jspx_th_c_005fotherwise_005f3.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			                <!-- 로그인 후 -->\r\n");
          out.write("			                <li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/book.do\">예매</a></li>\r\n");
          out.write("			            ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f3);
      _jspx_th_c_005fotherwise_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f3_reused);
    }
    return false;
  }
}
