/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-02-21 08:43:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin.movie;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class manageMovieDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>영화 상세:: Filoom</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/admin.css\" />\r\n");
      out.write("    \r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- jQuery 연동 -->\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("    	body { overflow : auto; }\r\n");
      out.write("    \r\n");
      out.write("        #admin_right * {\r\n");
      out.write("            font-family: \"Poppins\", sans-serif;\r\n");
      out.write("            font-size:25px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        #admin_title_content {\r\n");
      out.write("            font-size:25px;\r\n");
      out.write("            display:flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            color:#493628;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        #goBack:hover {\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #admin_page * {\r\n");
      out.write("            font-size:24px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #admin_page div {\r\n");
      out.write("            display:inline-block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #innerAdmin {\r\n");
      out.write("            width:90%;\r\n");
      out.write("            padding: 5px 5%;\r\n");
      out.write("        }\r\n");
      out.write("        #innerAdmin>* {\r\n");
      out.write("        	margin:0px 20px;\r\n");
      out.write("        	display:inline-block;\r\n");
      out.write("        	/*border:1px solid red;*/\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === 영화 포스터 (좌) === */\r\n");
      out.write("        #moviePoster {\r\n");
      out.write("            width:480px;\r\n");
      out.write("            height:100%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #moviePoster>img {\r\n");
      out.write("            width:100%;\r\n");
      out.write("            /* height:100%; */\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* #moviePoster,#moviePoster>img {\r\n");
      out.write("            height:100%;\r\n");
      out.write("        } */\r\n");
      out.write("\r\n");
      out.write("        /* === 영화 정보 (우) === */\r\n");
      out.write("        #tobeManaged {\r\n");
      out.write("            width:725px;\r\n");
      out.write("            height:100%;\r\n");
      out.write("            max-height:684px;\r\n");
      out.write("            vertical-align: top;\r\n");
      out.write("            text-align:left;\r\n");
      out.write("            overflow:auto;\r\n");
      out.write("        }\r\n");
      out.write("        #tobeManaged * {\r\n");
      out.write("            /* border: 1px solid green; */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #button_sample {\r\n");
      out.write("            font-size:15px;\r\n");
      out.write("        }\r\n");
      out.write("        #button_sample:not(.unready) {\r\n");
      out.write("            background-color: #d6c0b3;\r\n");
      out.write("            color:black;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        .filmrate {\r\n");
      out.write("            width:60px;\r\n");
      out.write("            margin-right:10px;\r\n");
      out.write("        }\r\n");
      out.write("        #movie-title, #movie-info {\r\n");
      out.write("            font-size:24px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === 토글 스위치 === */\r\n");
      out.write("        /* The switch - the box around the slider */\r\n");
      out.write("        .switch {\r\n");
      out.write("            position: relative;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            width: 40px;\r\n");
      out.write("            height: 22px;\r\n");
      out.write("            vertical-align:middle;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Hide default HTML checkbox */\r\n");
      out.write("        .switch input {display:none;}\r\n");
      out.write("\r\n");
      out.write("        /* The slider */\r\n");
      out.write("        .slider {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            right: 0;\r\n");
      out.write("            bottom: 0;\r\n");
      out.write("            background-color: #939393;\r\n");
      out.write("            -webkit-transition: .4s;\r\n");
      out.write("            transition: .4s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .slider:before {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            content: \"\";\r\n");
      out.write("            height: 18px;\r\n");
      out.write("            width: 18px;\r\n");
      out.write("            left: 2px;\r\n");
      out.write("            bottom: 2px;\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            -webkit-transition: .4s;\r\n");
      out.write("            transition: .4s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input:checked + .slider {\r\n");
      out.write("            background-color: #67503F;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input:focus + .slider {\r\n");
      out.write("            box-shadow: 0 0 1px #67503F;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input:checked + .slider:before {\r\n");
      out.write("            -webkit-transform: translateX(18px);\r\n");
      out.write("            -ms-transform: translateX(18px);\r\n");
      out.write("            transform: translateX(18px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Rounded sliders */\r\n");
      out.write("        .slider.round {\r\n");
      out.write("            border-radius: 34px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .slider.round:before {\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* === 토글 스위치 끝 === */\r\n");
      out.write("\r\n");
      out.write("        #only_when_playing>#tabletitle {\r\n");
      out.write("            display:flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #only_when_playing table th {\r\n");
      out.write("            text-align:center;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        #minus {\r\n");
      out.write("        	filter: invert(100%) sepia(1%) saturate(0%) hue-rotate(151deg) brightness(105%) contrast(102%);\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id = \"admin_content\">\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../common/adminHeader.jsp", out, false);
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        <div id = \"admin_right\">\r\n");
      out.write("            <div id =\"admin_title\">\r\n");
      out.write("\r\n");
      out.write("                <!-- 여기가 관리자 상단 회원번호, 회원아이디 이런거 적는 곳\r\n");
      out.write("                    구상은 각자 알아서~ \r\n");
      out.write("                -->\r\n");
      out.write("                <div id = \"admin_title_content\">\r\n");
      out.write("                    <p id=\"fnName\" style=\"padding-left:33px; font-weight:bold;\">영화 상세</p>\r\n");
      out.write("                    <p id=\"goBack\" style=\"padding-right:33px;\"\r\n");
      out.write("                        onclick=\"location.href='movielist_ad.mo';\">\r\n");
      out.write("                        ← 목록으로 돌아가기\r\n");
      out.write("                    </p>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div id = \"admin_detail\">\r\n");
      out.write("                \r\n");
      out.write("                <!-- 여기 안이 관리자 컨텐츠 영역이에요~-->\r\n");
      out.write("                <div id =\"admin_page\">\r\n");
      out.write("\r\n");
      out.write("                    <div id=\"innerAdmin\">\r\n");
      out.write("                        <div id=\"moviePoster\">\r\n");
      out.write("                            <!-- <img src=\"https://placehold.co/600x400\"> -->\r\n");
      out.write("                            <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/posters/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.fileCodename}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                            <input type=\"hidden\" id=\"prevpath\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.imagePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                            <input type=\"hidden\" id=\"mno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.movieNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div id=\"tobeManaged\">\r\n");
      out.write("                            <!-- 내부 스크롤은 여기만 지원함 -->\r\n");
      out.write("                            \r\n");
      out.write("                            <!-- 영화 제목 & 상영 등급 표기란\r\n");
      out.write("                            ※ 상세 페이지에서는 제목이 한 줄을 넘겨도 전부 보여주는 것을 원칙으로 함 -->\r\n");
      out.write("                            \r\n");
      out.write("                            <!-- 스틸컷을 관리할 수 있는 '이미지 보기' 버튼을 추가했음\r\n");
      out.write("                             → 해당 페이지를 하나 더 제작해야 함\r\n");
      out.write("                             (불필요하거나 시간 부족할 경우 삭제) -->\r\n");
      out.write("                            <div id=\"manageBar\" align=\"right\" style=\"width:100%;\">\r\n");
      out.write("                                <!-- <button id=\"button_sample\">이미지 관리</button> -->\r\n");
      out.write("                                <button id=\"button_sample\" onclick=\"location.href='admin.managereview.mo?movieNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.movieNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&cpage=1';\">리뷰 관리</button>\r\n");
      out.write("                                <button id=\"button_sample\" onclick=\"location.href='modifymovie.mo?movieNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.movieNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\">수정</button>\r\n");
      out.write("                                <button id=\"button_sample\" class=\"unready\" style=\"background-color:red;\">삭제</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("                            <div id=\"movie-title\">\r\n");
      out.write("                                <table>\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <td><img class=\"filmrate\" src=\"resources/images/posters/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.filmRate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(".svg\"></td>\r\n");
      out.write("                                        <td><b>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.movieTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</b></td>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                </table>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <br>\r\n");
      out.write("                            <div id=\"movie-info\">\r\n");
      out.write("                                <!-- 대충 영화 정보 -->\r\n");
      out.write("                                <!-- 주요 배우는 네 명까지만 -->\r\n");
      out.write("                                <table>\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th width=\"110\">감독</th>\r\n");
      out.write("                                        <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.director}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th>주요 배우</th>\r\n");
      out.write("                                        <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.starring}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th>장르</th>\r\n");
      out.write("                                        <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.genre}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th>상영시간</th>\r\n");
      out.write("                                        <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.runtime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("분</td>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th>개봉일자</th>\r\n");
      out.write("                                        <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.openDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                </table>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <br><hr>\r\n");
      out.write("                            <div id=\"if_premiere\" style=\"font-size:36px;\">\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>개봉 여부</th>\r\n");
      out.write("                                    <td>\r\n");
      out.write("                                        <label class=\"switch\">\r\n");
      out.write("                                            <input type=\"checkbox\" name=\"if_premiere\" onclick=\"togglePremiere(this.checked);\">\r\n");
      out.write("                                            <!-- onclick='console.log(this.checked);' 찍어보면 누른 후의 결과로 나옴\r\n");
      out.write("                                            	그러니까 개봉 안한 영화(false로 조회됨)에 스위치 누르면 true로 바뀐 후 true가 찍힘 -->\r\n");
      out.write("                                            <!-- onchange 보다 onclick으로 해야 제대로 반영될 듯 -->\r\n");
      out.write("                                            <span class=\"slider round\"></span>\r\n");
      out.write("                                        </label>\r\n");
      out.write("                                    </td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <br><hr>\r\n");
      out.write("                            <!-- 상영 중일 경우, 아래 div안으로 상영 정보가 들어감 -->\r\n");
      out.write("                            <div id=\"only_when_playing\" align=\"center\" style=\"width:100%;\">\r\n");
      out.write("                                <div id=\"tabletitle\">\r\n");
      out.write("                                    <b>상영 정보</b>\r\n");
      out.write("                                    <hr>\r\n");
      out.write("                                    <!-- 밑으로 내려가는 게 나을 것 같아서 대책 필요함 -->\r\n");
      out.write("                                    <button id=\"plus\" onclick=\"newPlayList();\"><img src=\"resources/images/icons/plus.svg\"></button>\r\n");
      out.write("                                    <!-- onclick → 상영 정보 추가 탭 toggle(0.5s~1s 사이) -->\r\n");
      out.write("                                </div>\r\n");
      out.write("\r\n");
      out.write("                                <div style=\"background-color: #8b8b8b;\">\r\n");
      out.write("                                    <table id=\"playList\" border=1>\r\n");
      out.write("                                    	<thead>\r\n");
      out.write("	                                        <tr id=\"toprow\">\r\n");
      out.write("	                                            <th colspan=\"2\">시작 일자</th>\r\n");
      out.write("	                                            <th colspan=\"2\">상영관</th>\r\n");
      out.write("	                                        </tr>\r\n");
      out.write("                                        </thead>\r\n");
      out.write("                                        \r\n");
      out.write("                                        <!-- \r\n");
      out.write("                                        	<td class=\"minus\" style=\"display:none;\">\r\n");
      out.write("	                                        	<button style=\"background-color: red; width:100%;\" onclick=\"deletePlaying();\">\r\n");
      out.write("	                                            	<img id=\"minus\" src=\"resources/images/icons/dash-lg.svg\"></button>\r\n");
      out.write("	                                        </td>\r\n");
      out.write("                                        \r\n");
      out.write("                                         -->\r\n");
      out.write("                                        \r\n");
      out.write("                                        <tbody></tbody>\r\n");
      out.write("                                        <!-- 이 밑으로는 ajax로 추가/삭제 구현 -->\r\n");
      out.write("                                        <!-- ajax 추가할 때는 아래 tr을 table에 \"append\"하면 됨 --> \r\n");
      out.write("                                        \r\n");
      out.write("                                        <tfoot id=\"addPlaying\" style=\"display:none;\">\r\n");
      out.write("	                                        <tr>\r\n");
      out.write("	                                            <td>\r\n");
      out.write("	                                                <input type=\"date\" class=\"movie-date\">\r\n");
      out.write("	                                            </td>\r\n");
      out.write("	                                            <td>\r\n");
      out.write("	                                                <input type=\"time\" class=\"movie-start\">\r\n");
      out.write("	                                            </td>\r\n");
      out.write("	                                            <td>\r\n");
      out.write("	                                                <select class=\"screen-no\">\r\n");
      out.write("	                                                    <option value=\"1\">1</option>\r\n");
      out.write("	                                                    <option value=\"2\">2</option>\r\n");
      out.write("	                                                </select>\r\n");
      out.write("	                                            </td>\r\n");
      out.write("	                                            <td class=\"plus\">\r\n");
      out.write("	                                                <button style=\"color:red;\" onclick=\"confirmPlaying();\">OK</button>\r\n");
      out.write("	                                            </td>\r\n");
      out.write("	                                        </tr>\r\n");
      out.write("	                                    </tfoot>\r\n");
      out.write("                                    </table>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>    \r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script>\r\n");
      out.write("    document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("        const navItems = document.querySelectorAll(\"#nav > ul > li\");\r\n");
      out.write("    \r\n");
      out.write("        navItems.forEach(item => {\r\n");
      out.write("            item.addEventListener(\"click\", function () {\r\n");
      out.write("                // 모든 항목에서 selected 클래스 제거\r\n");
      out.write("                navItems.forEach(nav => nav.classList.remove(\"selected\"));\r\n");
      out.write("    \r\n");
      out.write("                // 클릭된 항목에 selected 클래스 추가\r\n");
      out.write("                this.classList.add(\"selected\");\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $(function() {\r\n");
      out.write("    	let isOpen = (\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${target.premiere}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" == 'Y');\r\n");
      out.write("    	if(isOpen) {\r\n");
      out.write("    		$(\"input[name=if_premiere]\").attr(\"checked\", \"true\");\r\n");
      out.write("    	} else\r\n");
      out.write("	   		$(\"#only_when_playing\").hide();\r\n");
      out.write("    	console.log(isOpen);\r\n");
      out.write("    	\r\n");
      out.write("    	$(\".unready\").click(function() {\r\n");
      out.write("			removeMovie(isOpen);\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("    	// 상영 정보 조회 함수 제작 후, 해당 함수로 통합\r\n");
      out.write("//     	if($(\"#playList tr\").not(\":hidden\").length == 1) {\r\n");
      out.write("//     		$(\"#toprow\").hide();\r\n");
      out.write("//     	}\r\n");
      out.write("    	viewPlayList();\r\n");
      out.write("    	\r\n");
      out.write("    	// let row = $(\"#addPlaying\");\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    function togglePremiere(isOpen) {\r\n");
      out.write("    	let mno = $(\"#mno\").val();\r\n");
      out.write("    	let premiere = isOpen ? 1 : 0;\r\n");
      out.write("    	// premiere는 스위치를 눌러서 바뀐 값으로 들어감.\r\n");
      out.write("    	// 즉, 미개봉(false)일 때 눌러서 true로 만들면 isOpen = true, premiere = 1\r\n");
      out.write("    	\r\n");
      out.write("    	$.ajax({\r\n");
      out.write("    		url:\"admin.premiere.mo?mno=\"+mno,\r\n");
      out.write("    		type:\"post\",\r\n");
      out.write("    		data: {\"mno\" : mno, \"premiere\" : premiere},\r\n");
      out.write("    		\r\n");
      out.write("    		success:function(result) {\r\n");
      out.write("    			if(result === \"success\") {\r\n");
      out.write("   					console.log(\"CHANGED to \"+ isOpen);\r\n");
      out.write("   					isOpen = $(\"input[name=if_premiere]\").prop(\"checked\");\r\n");
      out.write("   					$(\"#only_when_playing\").toggle(500);\r\n");
      out.write("    			} else {\r\n");
      out.write("    				// result === \"failure\"\r\n");
      out.write("    				console.log(isOpen);\r\n");
      out.write("    				alert(\"개봉 여부 변경에 실패하였습니다.\");\r\n");
      out.write("    				\r\n");
      out.write("    				// 스위치 원상 복구하기\r\n");
      out.write("					$(\"input[name=if_premiere]\").prop(\"checked\",!isOpen);\r\n");
      out.write("					isOpen = !isOpen;\r\n");
      out.write("    				console.log(isOpen);\r\n");
      out.write("    			}\r\n");
      out.write("    		},\r\n");
      out.write("    		error:function() {\r\n");
      out.write("    			alert(\"An error has occurred..\");\r\n");
      out.write("    		}\r\n");
      out.write("    	});\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function removeMovie(isOpen) {\r\n");
      out.write("    	if(isOpen) {\r\n");
      out.write("    		alert(\"현재 상영중인 영화는 삭제할 수 없습니다.\");\r\n");
      out.write("    		return false;\r\n");
      out.write("    	} else if(!confirm(\"삭제하면 되돌릴 수 없습니다. 정말 삭제하시겠습니까?\")) {\r\n");
      out.write("    		return false;\r\n");
      out.write("    	} else {\r\n");
      out.write("    		// 현재 개봉중이 아닌 영화에서, 확인창에서 '확인'을 눌렀을 경우\r\n");
      out.write("    		\r\n");
      out.write("    		let mno = $(\"#mno\").val();\r\n");
      out.write("    		$.ajax({\r\n");
      out.write("    			url:\"admin.deletemovie.mo?movieNo=\"+mno,\r\n");
      out.write("    			type:\"post\",\r\n");
      out.write("    			data: {\"movieNo\" : mno},\r\n");
      out.write("    			\r\n");
      out.write("    			success: function(result) {\r\n");
      out.write("    				if(result === \"success\") {\r\n");
      out.write("	    				alert(\"삭제가 완료되었습니다.\");\r\n");
      out.write("    				} else {\r\n");
      out.write("    					// if result === \"failure\"\r\n");
      out.write("    					alert(\"영화가 삭제되지 않았습니다.\");\r\n");
      out.write("    				}\r\n");
      out.write("    				\r\n");
      out.write("    				// 성공 여부와 상관없이 리다이렉트 - 뚫렸을 때 시간 벌 목적\r\n");
      out.write("    				location.href = 'movielist_ad.mo';\r\n");
      out.write("    			},\r\n");
      out.write("    			error: function(result) {\r\n");
      out.write("    				alert(\"An error has occurred..\");\r\n");
      out.write("    			}\r\n");
      out.write("    		});\r\n");
      out.write("    		\r\n");
      out.write("    	}\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function viewPlayList() {\r\n");
      out.write("    	let mno = $(\"#mno\").val();\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url:\"admin.playlist.mo?mno=\"+mno,\r\n");
      out.write("    		type:\"get\",\r\n");
      out.write("    		data:{\"mno\" : mno},\r\n");
      out.write("    		\r\n");
      out.write("    		success:function(result) {\r\n");
      out.write("   				// GSON으로 받음\r\n");
      out.write("   				console.log(result);\r\n");
      out.write("   				\r\n");
      out.write("   				let resultStr = '';\r\n");
      out.write("   				for(let i = 0; i < result.length; i++) {\r\n");
      out.write("   					resultStr += \"<tr>\"\r\n");
      out.write("   					+ \"<td style='display:none;'>\" + result[i].playingNo + \"</td>\"\r\n");
      out.write("   					+ \"<td colspan='2'>\" + result[i].playTime + \"</td>\"\r\n");
      out.write("   					+ \"<td>\" + result[i].screenNo + \"</td>\"\r\n");
      out.write("   					+ \"<td class='minus'><button style='background-color:red; width:100%;'\"\r\n");
      out.write("   						+ \"onclick='deletePlaying(\" + result[i].playingNo + \");'>\"\r\n");
      out.write("   						+ \"<img id='minus' src='resources/images/icons/dash-lg.svg'></button></td>\"\r\n");
      out.write("   					+ \"</tr>\";\r\n");
      out.write("   				}\r\n");
      out.write("\r\n");
      out.write("   				$(\"#playList>tbody\").html(resultStr);\r\n");
      out.write("   				\r\n");
      out.write("   				// 미관 정리\r\n");
      out.write("   				if(result.length <= 0)\r\n");
      out.write("	   				// result == \"empty\" (failure 역할도 겸함)\r\n");
      out.write("   					$(\"#toprow\").hide();\r\n");
      out.write("       			$(\"#playList>tfoot\").hide();\r\n");
      out.write("   			\r\n");
      out.write("    		},\r\n");
      out.write("    		error:function() {\r\n");
      out.write("    			// 상영 정보 추가가 불가능하도록 막기\r\n");
      out.write("    			let resultStr = \"<tr><td colspan='4'>상영 정보 조회에 실패하였습니다.</td></tr>\";\r\n");
      out.write("    			$(\"#playList>tbody\").html(resultStr);\r\n");
      out.write("    			$(\"#playList>tfoot\").remove();\r\n");
      out.write("    			$(\"#plus\").attr(\"disabled\",\"true\");\r\n");
      out.write("    		}\r\n");
      out.write("		});    	\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function newPlayList() {\r\n");
      out.write("        var rowcount = $(\"#playList tr\").not(\":hidden\").length;\r\n");
      out.write("        \r\n");
      out.write("        // vis = $(\"#addPlaying\")의 display가 none인지 체크\r\n");
      out.write("        var vis = $(\"#addPlaying\").is(\":hidden\");\r\n");
      out.write("\r\n");
      out.write("        if(vis) {\r\n");
      out.write("            // if hidden\r\n");
      out.write("            if(rowcount == 0)\r\n");
      out.write("            	$(\"#toprow\").show(); // rowcount = 1\r\n");
      out.write("            $(\"#addPlaying\").slideDown(1000);\r\n");
      out.write("            vis = $(\"#addPlaying\").is(\":hidden\");\r\n");
      out.write("            console.log(\"Now #addPlaying is : \"+vis);\r\n");
      out.write("            // console.log($(\"#playList tr\").not(\":hidden\").length);\r\n");
      out.write("        } else {\r\n");
      out.write("            // if visible\r\n");
      out.write("            $(\"#plus\").attr(\"disabled\",\"true\");\r\n");
      out.write("            $(\"#addPlaying\").hide(); // 원래 slideUp할라 했는데 부자연스러워서 바꿈\r\n");
      out.write("            vis = $(\"#addPlaying\").is(\":hidden\");\r\n");
      out.write("            console.log(\"Now #addPlaying is : \"+vis);\r\n");
      out.write("            \r\n");
      out.write("            console.log(rowcount); // 2\r\n");
      out.write("            if(rowcount == 2)\r\n");
      out.write("            	$(\"#toprow\").hide();\r\n");
      out.write("            // console.log(rowcount);\r\n");
      out.write("            // 숨기는 조건이 rowcount == 1이 아니라 2인 이유 : 즉시 숨겨도 rowcount=2로 나옴\r\n");
      out.write("            \r\n");
      out.write("            // 쿨타임 2초 적용\r\n");
      out.write("            setTimeout(function() {\r\n");
      out.write("            	$(\"#plus\").removeAttr(\"disabled\");\r\n");
      out.write("            }, 2000);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function confirmPlaying() {\r\n");
      out.write("    	// let infocount = $(\"#playList>tbody>tr\").length;\r\n");
      out.write("    	\r\n");
      out.write("    	let mno = $(\"#mno\").val();\r\n");
      out.write("    	let playdate = $(\"input.movie-date\").val();\r\n");
      out.write("    	let starttime = $(\"input.movie-start\").val();\r\n");
      out.write("    	let screen = $(\".screen-no option:selected\").val();\r\n");
      out.write("    	\r\n");
      out.write("    	console.log(playdate);\r\n");
      out.write("    	console.log(starttime);\r\n");
      out.write("    	\r\n");
      out.write("    	console.log(screen);\r\n");
      out.write("\r\n");
      out.write("    	if(playdate != '' && starttime != '') {\r\n");
      out.write("    		alert(\"ready to execute function\");\r\n");
      out.write("    		$.ajax({\r\n");
      out.write("        		url:\"admin.moviePlay.mo?mno=\"+mno,\r\n");
      out.write("        		type:\"post\",\r\n");
      out.write("        		data:{\"mno\" : mno, \"pDate\" : playdate,\r\n");
      out.write("        				\"pTime\" : starttime, \"screen\": screen},\r\n");
      out.write("        		\r\n");
      out.write("        		success:function(result) {\r\n");
      out.write("        			if(result == \"success\") {    				\r\n");
      out.write("    	    			alert(\"상영정보가 추가되었습니다.\");\r\n");
      out.write("    					$(\"#addPlaying\").find(\"input\").val(\"\");\r\n");
      out.write("    					$(\"#addPlaying\").hide();\r\n");
      out.write("    					viewPlayList();\r\n");
      out.write("        			} else if (result == \"no_screen\") {\r\n");
      out.write("        				alert(\"선택한 상영관을 먼저 추가해주세요.\");\r\n");
      out.write("        			} else {\r\n");
      out.write("        				// result == \"failure\"\r\n");
      out.write("        				alert(\"상영정보가 추가되지 않았습니다.\");\r\n");
      out.write("        			}\r\n");
      out.write("        		},\r\n");
      out.write("        		error:function(){\r\n");
      out.write("        			alert(\"An error has occurred..\");\r\n");
      out.write("        		}\r\n");
      out.write("        	});\r\n");
      out.write("    	} else {\r\n");
      out.write("    		alert(\"상영일과 상영 시작시간을 모두 입력해주세요.\");\r\n");
      out.write("    		return false;\r\n");
      out.write("    	}\r\n");
      out.write("     	 console.log(\"V\");\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function deletePlaying(num) {\r\n");
      out.write("    	\r\n");
      out.write("    	$.ajax({\r\n");
      out.write("    		url:\"admin.movieStop.mo?pno=\"+num,\r\n");
      out.write("    		type:\"post\",\r\n");
      out.write("    		data:{\"pno\" : num},\r\n");
      out.write("    		\r\n");
      out.write("    		success:function(result) {\r\n");
      out.write("    			if(result == \"success\") {\r\n");
      out.write("    				alert(\"상영정보가 삭제되었습니다.\");\r\n");
      out.write("    				viewPlayList();\r\n");
      out.write("    			} else {\r\n");
      out.write("    				// result == \"failure\"\r\n");
      out.write("    				alert(\"상영정보가 삭제되지 않았습니다.\");\r\n");
      out.write("    			}\r\n");
      out.write("    		},\r\n");
      out.write("    		error:function(){\r\n");
      out.write("    			alert(\"An error has occurred..\");\r\n");
      out.write("    		}\r\n");
      out.write("    	})\r\n");
      out.write("    	\r\n");
      out.write("    	//$(\"#play\"+ num).remove();\r\n");
      out.write("    	\r\n");
      out.write("    	console.log(\"X\");\r\n");
      out.write("    }\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
