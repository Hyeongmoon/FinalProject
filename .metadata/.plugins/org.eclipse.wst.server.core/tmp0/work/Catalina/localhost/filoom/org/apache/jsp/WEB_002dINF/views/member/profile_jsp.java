/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-02-21 08:59:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1740045704991L));
    _jspx_dependants.put("jar:file:/C:/00_FinalProject/Filoom/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>내 정보</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("	/* 기본 스타일 초기화 */\r\n");
      out.write("	* {\r\n");
      out.write("	    margin: 0;\r\n");
      out.write("	    padding: 0;\r\n");
      out.write("	    box-sizing: border-box;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	body {\r\n");
      out.write("	    font-family: Arial, sans-serif;\r\n");
      out.write("	    background-color: #121212;\r\n");
      out.write("	    color: #ffffff;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 마이페이지 컨테이너 */\r\n");
      out.write("	.mypage-container {\r\n");
      out.write("	    display: flex;\r\n");
      out.write("	    width: 1100px;\r\n");
      out.write("	    background-color: #1e1e1e;\r\n");
      out.write("	    border-radius: 10px;\r\n");
      out.write("	    padding: 50px;\r\n");
      out.write("	    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);\r\n");
      out.write("	    overflow: hidden;\r\n");
      out.write("	    margin: 50px auto;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 사이드바 */\r\n");
      out.write("	.mypage-sidebar {\r\n");
      out.write("	    width: 20%;\r\n");
      out.write("	    padding: 10px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.mypage-sidebar h2 a {\r\n");
      out.write("	    color: #fff; /* 흰 글씨 */\r\n");
      out.write("	    font-size: 20px; /* 큰 폰트 크기 */\r\n");
      out.write("	    font-weight: bold; /* 굵은 폰트 */\r\n");
      out.write("	    text-decoration: none; /* 밑줄 제거 */\r\n");
      out.write("	    display: block;\r\n");
      out.write("	    margin-bottom: 30px; /* 아래 간격 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.menu-list {\r\n");
      out.write("	    list-style: none;\r\n");
      out.write("	    padding: 0;\r\n");
      out.write("	    margin: 0;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.menu-list li a {\r\n");
      out.write("	    color: #aaa; /* 기본 회색 글씨 */\r\n");
      out.write("	    font-size: 14px; /* 작은 폰트 크기 */\r\n");
      out.write("	    font-weight: normal; /* 얇은 폰트 */\r\n");
      out.write("	    text-decoration: none; /* 밑줄 제거 */\r\n");
      out.write("	    display: block;\r\n");
      out.write("	    padding: 10px 0; /* 상하 간격 */\r\n");
      out.write("	    transition: color 0.3s ease;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.menu-list li.active a {\r\n");
      out.write("	    color: #fff; /* 흰 글씨 */\r\n");
      out.write("	    font-size: 16px; /* 작지만 조금 큰 폰트 크기 */\r\n");
      out.write("	    font-weight: bold; /* 굵은 폰트 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.menu-list li a:hover {\r\n");
      out.write("	    color: #ffffff;\r\n");
      out.write("	    font-weight: bold;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 콘텐츠 영역 */\r\n");
      out.write("	.mypage-content {\r\n");
      out.write("	    width: 60%;\r\n");
      out.write("	    padding: 10px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.profile-header {\r\n");
      out.write("	    font-size: 24px;\r\n");
      out.write("	    font-weight: bold;\r\n");
      out.write("	    margin-bottom: 30px;\r\n");
      out.write("	    border-bottom: 1px solid #333;\r\n");
      out.write("	    padding-bottom: 10px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 정보 리스트 */\r\n");
      out.write("	.info-list {\r\n");
      out.write("	    display: flex;\r\n");
      out.write("	    flex-direction: column;\r\n");
      out.write("	    gap: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.info-item {\r\n");
      out.write("	    /* display: flex; */\r\n");
      out.write("	    align-items: center;\r\n");
      out.write("	    border-bottom: 1px solid #333;\r\n");
      out.write("	    /* padding: 10px 0; */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.label {\r\n");
      out.write("	    font-size: 14px;\r\n");
      out.write("	    font-weight: bold;\r\n");
      out.write("	    color: #fff;\r\n");
      out.write("	    border-left: 2px solid #666;\r\n");
      out.write("	    padding-left: 10px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.value-btn {\r\n");
      out.write("	    display: flex;\r\n");
      out.write("	    align-items: center;\r\n");
      out.write("	    justify-content: space-between;\r\n");
      out.write("	    flex: 1; /* 남은 공간을 차지 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.value-btn {\r\n");
      out.write("	    display: flex;\r\n");
      out.write("	    justify-content: space-between;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.value, .value-notChange {\r\n");
      out.write("	    font-size: 16px;\r\n");
      out.write("	    font-weight: 400;\r\n");
      out.write("	    margin: 15px 0;\r\n");
      out.write("	    padding-left: 10px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.value-notChange {\r\n");
      out.write("	    color: #888;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	.btn-change {\r\n");
      out.write("	    padding: 5px 10px;\r\n");
      out.write("	    background-color: transparent;\r\n");
      out.write("	    border: 1px solid rgba(228, 224, 225, 20%);\r\n");
      out.write("	    border-radius: 10px;\r\n");
      out.write("	    color: #fff;\r\n");
      out.write("	    cursor: pointer;\r\n");
      out.write("	    font-size: 14px;\r\n");
      out.write("	    transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.btn-change:hover {\r\n");
      out.write("	    background-color: #999999;\r\n");
      out.write("	    color: #000;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 약관 모달 스타일 */\r\n");
      out.write("	.agreement-modal {\r\n");
      out.write("	    display: none; /* 기본적으로 숨김 */\r\n");
      out.write("	    position: fixed;\r\n");
      out.write("	    z-index: 1000;\r\n");
      out.write("	    left:50%;\r\n");
      out.write("	    top: 50%;\r\n");
      out.write("	    width: 100%;\r\n");
      out.write("	    height: 100%;\r\n");
      out.write("	    transform: translate(-50%, -50%);\r\n");
      out.write("	    background-color: rgba(0, 0, 0, 0.6);\r\n");
      out.write("	    max-width: 1100px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 모달 내용 */\r\n");
      out.write("	.agreement-modal-content {\r\n");
      out.write("	    background-color: #fff;\r\n");
      out.write("	    color: #000;\r\n");
      out.write("	    margin: 15% auto;\r\n");
      out.write("	    padding: 20px;\r\n");
      out.write("	    border-radius: 10px;\r\n");
      out.write("	    width: 60%;\r\n");
      out.write("	    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n");
      out.write("	    position: relative;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 닫기 버튼 */\r\n");
      out.write("	.close-btn {\r\n");
      out.write("	    color: #aaa;\r\n");
      out.write("	    float: right;\r\n");
      out.write("	    font-size: 28px;\r\n");
      out.write("	    font-weight: bold;\r\n");
      out.write("	    cursor: pointer;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.close-btn:hover {\r\n");
      out.write("	    color: #000;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 자세히 보기 버튼 */\r\n");
      out.write("	.open-modal-btn, .out {\r\n");
      out.write("	    background: none;\r\n");
      out.write("	    border: none;\r\n");
      out.write("	    border-bottom: 1px solid #aaa;\r\n");
      out.write("	    color: #aaa;\r\n");
      out.write("	    cursor: pointer;\r\n");
      out.write("	    font-size: 12px;\r\n");
      out.write("	    margin-left: 5px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.out {\r\n");
      out.write("	    margin-top: 70px;\r\n");
      out.write("	    width: 48px;\r\n");
      out.write("	    text-decoration: none;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.open-modal-btn:hover, .out:hover {\r\n");
      out.write("	    color: #fff;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 토글스위치 */\r\n");
      out.write("	/* The switch - the box around the slider */\r\n");
      out.write("	.switch {\r\n");
      out.write("	    position: relative;\r\n");
      out.write("	    display: inline-block;\r\n");
      out.write("	    width: 40px;\r\n");
      out.write("	    height: 22px;\r\n");
      out.write("	    vertical-align:middle;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* Hide default HTML checkbox */\r\n");
      out.write("	.switch input {display:none;}\r\n");
      out.write("	\r\n");
      out.write("	/* The slider */\r\n");
      out.write("	.slider {\r\n");
      out.write("	    position: absolute;\r\n");
      out.write("	    cursor: pointer;\r\n");
      out.write("	    top: 0;\r\n");
      out.write("	    left: 0;\r\n");
      out.write("	    right: 0;\r\n");
      out.write("	    bottom: 0;\r\n");
      out.write("	    background-color: #939393;\r\n");
      out.write("	    -webkit-transition: .4s;\r\n");
      out.write("	    transition: .4s;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.slider:before {\r\n");
      out.write("	    position: absolute;\r\n");
      out.write("	    content: \"\";\r\n");
      out.write("	    height: 18px;\r\n");
      out.write("	    width: 18px;\r\n");
      out.write("	    left: 2px;\r\n");
      out.write("	    bottom: 2px;\r\n");
      out.write("	    background-color: white;\r\n");
      out.write("	    -webkit-transition: .4s;\r\n");
      out.write("	    transition: .4s;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	input:checked + .slider {\r\n");
      out.write("	    background-color: #67503F;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	input:focus + .slider {\r\n");
      out.write("	    box-shadow: 0 0 1px #67503F;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	input:checked + .slider:before {\r\n");
      out.write("	    -webkit-transform: translateX(18px);\r\n");
      out.write("	    -ms-transform: translateX(18px);\r\n");
      out.write("	    transform: translateX(18px);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* Rounded sliders */\r\n");
      out.write("	.slider.round {\r\n");
      out.write("	    border-radius: 34px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.slider.round:before {\r\n");
      out.write("	    border-radius: 50%;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	.changes-btn:hover {\r\n");
      out.write("        background-color: #fff; /* 배경을 흰색으로 변경 */\r\n");
      out.write("        color: #000; /* 글씨 색을 검정색으로 변경 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("/* ----------------------------- */\r\n");
      out.write("	\r\n");
      out.write("	/* 모달 배경 */\r\n");
      out.write(".modal {\r\n");
      out.write("    display: none; /* 기본적으로 숨김 */\r\n");
      out.write("    position: fixed;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    left: 0;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 100%;\r\n");
      out.write("    background-color: rgba(0, 0, 0, 0.6); /* 어두운 반투명 배경 */\r\n");
      out.write("    z-index: 1000;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center; /* 세로 중앙 정렬 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 모달 콘텐츠 박스 */\r\n");
      out.write(".modal-content {\r\n");
      out.write("    background-color: #ffffff;\r\n");
      out.write("    width: 90%;\r\n");
      out.write("    max-width: 500px; /* 최대 너비 */\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    padding: 20px 30px;\r\n");
      out.write("    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3); /* 그림자 */\r\n");
      out.write("    animation: fadeIn 0.3s ease-in-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 모달 닫기 버튼 */\r\n");
      out.write(".modal .close {\r\n");
      out.write("    float: right;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    color: #888888;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal .close:hover {\r\n");
      out.write("    color: #ff5555; /* 닫기 버튼 호버 색상 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 폼 내 요소들 */\r\n");
      out.write(".modal-content h2 {\r\n");
      out.write("    font-size: 24px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("    color: #333333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-content .form-group {\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-content label {\r\n");
      out.write("    display: block;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    margin-bottom: 5px;\r\n");
      out.write("    color: #555555;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-content .changeInput {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    border: 1px solid #cccccc;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    transition: border-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-content .changeInput:focus {\r\n");
      out.write("    border-color: #007bff; /* 포커스 시 파란 테두리 */\r\n");
      out.write("    outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-content button[type=\"submit\"] {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 12px 20px;\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    color: #ffffff;\r\n");
      out.write("    background-color: #007bff; /* 파란색 */\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-content button[type=\"submit\"]:hover {\r\n");
      out.write("    background-color: #0056b3; /* 호버 시 색상 변경 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 페이드 인 애니메이션 */\r\n");
      out.write("@keyframes fadeIn {\r\n");
      out.write("    from {\r\n");
      out.write("        opacity: 0;\r\n");
      out.write("        transform: scale(0.95);\r\n");
      out.write("    }\r\n");
      out.write("    to {\r\n");
      out.write("        opacity: 1;\r\n");
      out.write("        transform: scale(1);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"mypage-container\">\r\n");
      out.write("        <div class=\"mypage-sidebar\">\r\n");
      out.write("            <h2><a href=\"#\">마이 페이지</a></h2>\r\n");
      out.write("            <ul class=\"menu-list\">\r\n");
      out.write("                <li class=\"active\"><a href=\"profile.me\">내 정보</a></li>\r\n");
      out.write("                <li><a href=\"coupon.me\">쿠폰 조회</a></li>\r\n");
      out.write("                <li><a href=\"reserve.me\">예매 내역 조회</a></li>\r\n");
      out.write("                <li><a href=\"history.me\">내가 본 영화 조회</a></li>\r\n");
      out.write("                <li><a href=\"favorite.me\">보고 싶은 영화 조회</a></li>\r\n");
      out.write("                <li><a href=\"review.me\">내가 쓴 리뷰 조회</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"mypage-content\">\r\n");
      out.write("            <h1 class=\"profile-header\">내 정보</h1>\r\n");
      out.write("            <div class=\"info-list\">\r\n");
      out.write("\r\n");
      out.write("                <div class=\"info-item\">\r\n");
      out.write("                    <label class=\"label\">아이디</label>\r\n");
      out.write("                    <div class=\"value-notChange\">\r\n");
      out.write("                        ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.loginUser.userId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"info-item\">\r\n");
      out.write("                    <label class=\"label\">이메일</label>\r\n");
      out.write("                    <div class=\"value-notChange\">\r\n");
      out.write("                        ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.loginUser.email }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"info-item\">\r\n");
      out.write("                    <label class=\"label\">비밀번호</label>\r\n");
      out.write("                    <div class=\"value-btn\">\r\n");
      out.write("                        <div class=\"value\">\r\n");
      out.write("                            ●●●●●●●●●●\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button type=\"button\" class=\"btn-change\" onclick=\"showChangePwdModal()\">\r\n");
      out.write("                            변경\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("				<!-- 비밀번호 변경 모달 -->\r\n");
      out.write("				<div id=\"changePwdModal\" class=\"modal\">\r\n");
      out.write("				    <div class=\"modal-content\">\r\n");
      out.write("				        <span class=\"close\" onclick=\"closeChangePwdModal()\">&times;</span>\r\n");
      out.write("				        <h2>비밀번호 변경</h2>\r\n");
      out.write("				        <form id=\"changePwdForm\" action=\"changePwd.me\" method=\"post\">\r\n");
      out.write("				            <div class=\"form-group\">\r\n");
      out.write("				                <label for=\"currentPassword\">기존 비밀번호</label>\r\n");
      out.write("				                <input type=\"password\" class=\"changeInput\" id=\"currentPwd\" name=\"currentPwd\" placeholder=\"기존 비밀번호를 입력해주세요\" required>\r\n");
      out.write("				            </div>\r\n");
      out.write("				            <div class=\"form-group\">\r\n");
      out.write("				                <label for=\"newPassword\">새 비밀번호</label>\r\n");
      out.write("				                <input type=\"password\" class=\"changeInput\" id=\"newPwd\" name=\"newPwd\" placeholder=\"새 비밀번호를 입력해주세요\" required>\r\n");
      out.write("				            </div>\r\n");
      out.write("				            <div class=\"form-group\">\r\n");
      out.write("				                <label for=\"confirmNewPassword\">새 비밀번호 확인</label>\r\n");
      out.write("				                <input type=\"password\" class=\"changeInput\" id=\"confirmNewPwd\" name=\"confirmNewPwd\" placeholder=\"새 비밀번호를 다시 입력해주세요\" required>\r\n");
      out.write("				            </div>\r\n");
      out.write("				            <button type=\"submit\">완료</button>\r\n");
      out.write("				        </form>\r\n");
      out.write("				    </div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"info-item\">\r\n");
      out.write("                    <label class=\"label\">이름</label>\r\n");
      out.write("                    <div class=\"value-btn\">\r\n");
      out.write("                        <div class=\"value\">\r\n");
      out.write("                            ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.loginUser.userName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button type=\"button\" class=\"btn-change\" onclick=\"showChangeNameModal()\">\r\n");
      out.write("                            변경\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- 이름 변경 모달 -->\r\n");
      out.write("				<div id=\"changeNameModal\" class=\"modal\">\r\n");
      out.write("				    <div class=\"modal-content\">\r\n");
      out.write("				        <span class=\"close\" onclick=\"closeChangeNameModal()\">&times;</span>\r\n");
      out.write("				        <h2>이름 변경</h2>\r\n");
      out.write("				        <form id=\"changeNameForm\" action=\"changeName.me\" method=\"post\">\r\n");
      out.write("				            <div class=\"form-group\">\r\n");
      out.write("				                <label for=\"newName\">변경할 이름</label>\r\n");
      out.write("				                <input type=\"text\" class=\"changeInput\" id=\"newName\" name=\"newName\" placeholder=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" required>\r\n");
      out.write("				            </div>\r\n");
      out.write("				            <button type=\"submit\">완료</button>\r\n");
      out.write("				        </form>\r\n");
      out.write("				    </div>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("                <div class=\"info-item\">\r\n");
      out.write("                    <label class=\"label\">성별</label>\r\n");
      out.write("                    <div class=\"value-btn\">\r\n");
      out.write("                        <div class=\"value\">\r\n");
      out.write("                            ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button type=\"button\" class=\"btn-change\" onclick=\"showChangeGenderModal()\">\r\n");
      out.write("                            변경\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- 성별 변경 모달 -->\r\n");
      out.write("				<div id=\"changeGenderModal\" class=\"modal\">\r\n");
      out.write("				    <div class=\"modal-content\">\r\n");
      out.write("				        <span class=\"close\" onclick=\"closeChangeGenderModal()\">&times;</span>\r\n");
      out.write("				        <h2>성별 변경</h2>\r\n");
      out.write("				        <form id=\"changeGenderForm\" action=\"changeGender.me\" method=\"post\">\r\n");
      out.write("				            <div class=\"form-group\">\r\n");
      out.write("								<label><input type=\"radio\" class=\"changeGender\" name=\"gender\" value=\"\">선택안함</label>\r\n");
      out.write("                        		<label><input type=\"radio\" class=\"changeGender\" name=\"gender\" value=\"M\">남성</label>\r\n");
      out.write("                        		<label><input type=\"radio\" class=\"changeGender\" name=\"gender\" value=\"F\">여성</label>\r\n");
      out.write("				            </div>\r\n");
      out.write("				            <button type=\"submit\">완료</button>\r\n");
      out.write("				        </form>\r\n");
      out.write("				    </div>\r\n");
      out.write("				</div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"info-item\">\r\n");
      out.write("                    <label class=\"label\">생년월일</label>\r\n");
      out.write("                    <div class=\"value-btn\">\r\n");
      out.write("                        <div class=\"value\">\r\n");
      out.write("                            ");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button type=\"button\" class=\"btn-change\" onclick=\"showChangeBirthModal()\">\r\n");
      out.write("                            변경\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- 생년월일 변경 모달 -->\r\n");
      out.write("				<div id=\"changeBirthModal\" class=\"modal\">\r\n");
      out.write("				    <div class=\"modal-content\">\r\n");
      out.write("				        <span class=\"close\" onclick=\"closeChangeBirthModal()\">&times;</span>\r\n");
      out.write("				        <h2>생년월일 변경</h2>\r\n");
      out.write("				        <form id=\"changeBirthForm\" action=\"changeBirth.me\" method=\"post\">\r\n");
      out.write("						    <div class=\"form-group\">\r\n");
      out.write("						        <label for=\"birthDate\">변경할 생년월일</label>\r\n");
      out.write("						        <input type=\"date\" id=\"birthDate\" name=\"birthDate\">\r\n");
      out.write("						        <input type=\"hidden\" id=\"formattedBirthDate\" name=\"formattedBirthDate\"> <!-- 포매팅된 값 전달 -->\r\n");
      out.write("						    </div>\r\n");
      out.write("						    <button type=\"submit\">완료</button>\r\n");
      out.write("						</form>\r\n");
      out.write("				    </div>\r\n");
      out.write("				</div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"info-item\">\r\n");
      out.write("                    <label class=\"label\">약관동의</label>\r\n");
      out.write("                    <div class=\"value-btn\">\r\n");
      out.write("                        <div class=\"value\">\r\n");
      out.write("                            개인 정보 마케팅 활용 동의\r\n");
      out.write("                            <button class=\"open-modal-btn\" data-target=\"modal\">내용 보기</button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <label class=\"switch\">\r\n");
      out.write("                            <input type=\"checkbox\" id=\"marketingConsent\" class=\"checkbox\"\r\n");
      out.write("                            	");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                            >\r\n");
      out.write("                            <span class=\"slider round\"></span>\r\n");
      out.write("                        </label>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- 모달창 -->\r\n");
      out.write("				<div id=\"marketingModal\" class=\"modal\">\r\n");
      out.write("				    <div class=\"modal-content\">\r\n");
      out.write("				        <h2>개인정보 마케팅 활용 동의 철회</h2>\r\n");
      out.write("				        <p>마케팅 활용에 동의하지 않을 시 <strong>혜택과 다양한 이벤트 소식</strong>을 제공받을 수 없습니다. 계속하시겠습니까?</p>\r\n");
      out.write("				        <div class=\"modal-buttons\">\r\n");
      out.write("				            <button id=\"confirmUnsubscribe\" class=\"btn\">해제</button>\r\n");
      out.write("				            <button id=\"cancelUnsubscribe\" class=\"btn\">유지</button>\r\n");
      out.write("				        </div>\r\n");
      out.write("				    </div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("	                <a class=\"out\" href=\"withdrawal.me\">회원탈퇴</a>\r\n");
      out.write("\r\n");
      out.write("                <!-- 약관 내용 모달 -->\r\n");
      out.write("                <div id=\"agreement-modal\" class=\"agreement-modal\">\r\n");
      out.write("                    <div class=\"agreement-modal-content\">\r\n");
      out.write("                        <span class=\"close-btn\">&times;</span>\r\n");
      out.write("                        <h2>마케팅 활용 동의</h2><hr>\r\n");
      out.write("                        <p>마케팅 활용에 대한 설명이 여기에 표시됩니다.</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("        \r\n");
      out.write("     	// 비밀번호 변경 모달 보여주기\r\n");
      out.write("        function showChangePwdModal() {\r\n");
      out.write("        	$('#changePwdModal').css('display', 'flex');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 비밀번호 변경 모달 닫기\r\n");
      out.write("        function closeChangePwdModal() {\r\n");
      out.write("        	$('#changePwdModal').css('display', 'none');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        $(function() {\r\n");
      out.write("            // 비밀번호 유효성 검사 정규식\r\n");
      out.write("            const pwdRegexp = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+~`|}{[\\]:;?><,./-]).{8,}$/;\r\n");
      out.write("\r\n");
      out.write("            // 새 비밀번호 유효성 검사\r\n");
      out.write("            $(\"#newPwd\").on(\"keyup\", function() {\r\n");
      out.write("                const newPwd = $(this).val();\r\n");
      out.write("                if (pwdRegexp.test(newPwd)) {\r\n");
      out.write("                    $(this).css(\"border-color\", \"green\");\r\n");
      out.write("                } else {\r\n");
      out.write("                    $(this).css(\"border-color\", \"red\");\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // 새 비밀번호 확인 검사\r\n");
      out.write("            $(\"#confirmNewPwd\").on(\"keyup\", function() {\r\n");
      out.write("                const newPwd = $(\"#newPwd\").val();\r\n");
      out.write("                const confirmNewPwd = $(this).val();\r\n");
      out.write("                if (newPwd === confirmNewPwd && pwdRegexp.test(newPwd)) {\r\n");
      out.write("                    $(this).css(\"border-color\", \"green\");\r\n");
      out.write("                } else {\r\n");
      out.write("                    $(this).css(\"border-color\", \"red\");\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // 폼 제출 이벤트\r\n");
      out.write("            $(\"#changePwdForm\").on(\"submit\", function(e) {\r\n");
      out.write("                e.preventDefault(); // 기본 폼 제출 막기\r\n");
      out.write("\r\n");
      out.write("                const formData = $(this).serialize(); // 폼 데이터 직렬화\r\n");
      out.write("                const newPwd = $(\"#newPwd\").val();\r\n");
      out.write("                const confirmNewPwd = $(\"#confirmNewPwd\").val();\r\n");
      out.write("                \r\n");
      out.write("                if (!newPwd) {\r\n");
      out.write("	                alert(\"새 비밀번호를 입력해주세요.\");\r\n");
      out.write("	                $(\"#newPwd\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("\r\n");
      out.write("                // 새 비밀번호 조건 확인\r\n");
      out.write("                if (!pwdRegexp.test(newPwd)) {\r\n");
      out.write("                    alert(\"새 비밀번호는 영문, 숫자, 특수문자를 포함한 8자 이상이어야 합니다.\");\r\n");
      out.write("                    $(\"#newPwd\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                if (!confirmNewPwd) {\r\n");
      out.write("	                alert(\"비밀번호 확인란을 입력해주세요.\");\r\n");
      out.write("	                $(\"#confirmNewPwd\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("\r\n");
      out.write("                // 새 비밀번호와 확인 비밀번호 일치 확인\r\n");
      out.write("                if (newPwd !== confirmNewPwd) {\r\n");
      out.write("                    alert(\"새 비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("                    $(\"#confirmNewPwd\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // AJAX 요청\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: \"changePwd.me\",\r\n");
      out.write("                    method: \"POST\",\r\n");
      out.write("                    data: formData,\r\n");
      out.write("                    success: function(result) {\r\n");
      out.write("                        alert(result); // 서버에서 반환된 메시지를 alert로 출력\r\n");
      out.write("\r\n");
      out.write("                        // 성공 메시지일 경우 특정 동작 (예: 페이지 이동)\r\n");
      out.write("                        if (result === \"비밀번호가 성공적으로 변경되었습니다. 로그인 페이지로 이동합니다.\") {\r\n");
      out.write("                            location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/loginForm.me\"; // 마이페이지로 이동\r\n");
      out.write("                        } else {\r\n");
      out.write("                        	$(\"#currentPwd\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function() {\r\n");
      out.write("                        alert(\"비밀번호 변경 중 오류가 발생했습니다. 다시 시도해주세요.\");\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("     	// 이름 변경 모달 보여주기\r\n");
      out.write("        function showChangeNameModal() {\r\n");
      out.write("        	$('#changeNameModal').css('display', 'flex');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 이름 변경 모달 닫기\r\n");
      out.write("        function closeChangeNameModal() {\r\n");
      out.write("        	$('#changeNameModal').css('display', 'none');\r\n");
      out.write("        }\r\n");
      out.write("     	\r\n");
      out.write("        $(function() {\r\n");
      out.write("        	// 이름 조건 : 한글 또는 영문, 최소 2자 이상 20자 이하\r\n");
      out.write("	        const nameRegexp = /^[가-힣a-zA-Z]{2,20}$/;\r\n");
      out.write("	        \r\n");
      out.write("	     	// 이름 유효성 검사\r\n");
      out.write("	        $(\"#newName\").on(\"keyup\", function () {\r\n");
      out.write("	            const newName = $(this).val();\r\n");
      out.write("	            if (nameRegexp.test(newName)) {\r\n");
      out.write("	                $(this).css(\"border-color\", \"green\");\r\n");
      out.write("	            } else {\r\n");
      out.write("	                $(this).css(\"border-color\", \"red\");\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	        \r\n");
      out.write("        	$(\"#changeNameForm\").on(\"submit\", function (e) {\r\n");
      out.write("        	    e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("        	    const newName = $(\"#newName\").val().trim();\r\n");
      out.write("        	    \r\n");
      out.write("        	    if (!newName) {\r\n");
      out.write("        	        alert(\"이름을 입력해주세요.\");\r\n");
      out.write("        	        $(\"#newName\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("        	        return;\r\n");
      out.write("        	    }\r\n");
      out.write("\r\n");
      out.write("        	    if (!nameRegexp.test(newName)) {\r\n");
      out.write("        	        alert(\"이름은 한글 또는 영문으로 2~20자 이내로 입력해주세요.\");\r\n");
      out.write("        	        $(\"#newName\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("        	        return;\r\n");
      out.write("        	    }\r\n");
      out.write("\r\n");
      out.write("        	    $.ajax({\r\n");
      out.write("        	        url: \"changeName.me\",\r\n");
      out.write("        	        type: \"POST\",\r\n");
      out.write("        	        data: { newName: newName },\r\n");
      out.write("        	        success: function (response) {\r\n");
      out.write("        	            alert(response);\r\n");
      out.write("        	            if (response === \"이름이 성공적으로 변경되었습니다.\") {\r\n");
      out.write("        	                location.reload(); // 성공 시 페이지 리로드\r\n");
      out.write("        	            } else {\r\n");
      out.write("        	            	$(\"#newName\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("        	            }\r\n");
      out.write("        	        },\r\n");
      out.write("        	        error: function () {\r\n");
      out.write("        	            alert(\"이름 변경 중 오류가 발생했습니다. 다시 시도해주세요.\");\r\n");
      out.write("        	        },\r\n");
      out.write("        	    });\r\n");
      out.write("        	});\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("     	// 성별 변경 모달 보여주기\r\n");
      out.write("        function showChangeGenderModal() {\r\n");
      out.write("        	$('#changeGenderModal').css('display', 'flex');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 성별 변경 모달 닫기\r\n");
      out.write("        function closeChangeGenderModal() {\r\n");
      out.write("        	$('#changeGenderModal').css('display', 'none');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        $(function () {\r\n");
      out.write("            // 현재 로그인된 사용자의 성별 값 가져오기 (예: \"M\", \"F\", \"\")\r\n");
      out.write("            const currentGender = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.gender}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; // 서버에서 JSTL을 통해 성별 전달\r\n");
      out.write("\r\n");
      out.write("            // 해당 성별에 맞는 라디오 버튼을 체크\r\n");
      out.write("            if (currentGender === \"M\") {\r\n");
      out.write("                $(\"input[name='gender'][value='M']\").prop(\"checked\", true);\r\n");
      out.write("            } else if (currentGender === \"F\") {\r\n");
      out.write("                $(\"input[name='gender'][value='F']\").prop(\"checked\", true);\r\n");
      out.write("            } else {\r\n");
      out.write("                $(\"input[name='gender'][value='']\").prop(\"checked\", true);\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            $(\"#changeGenderForm\").on(\"submit\", function (e) {\r\n");
      out.write("                e.preventDefault(); // 기본 폼 제출 방지\r\n");
      out.write("\r\n");
      out.write("                const newGender = $(\"input[name='gender']:checked\").val();\r\n");
      out.write("\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: \"changeGender.me\",\r\n");
      out.write("                    type: \"POST\",\r\n");
      out.write("                    data: { gender: newGender },\r\n");
      out.write("                    success: function (response) {\r\n");
      out.write("                        alert(response); // 성공/실패 메시지 출력\r\n");
      out.write("                        if (response === \"성별이 성공적으로 변경되었습니다.\") {\r\n");
      out.write("                            location.reload(); // 성공 시 페이지 새로고침\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function () {\r\n");
      out.write("                        alert(\"성별 변경 중 오류가 발생했습니다. 다시 시도해주세요.\");\r\n");
      out.write("                    },\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("     	// 생년월일 변경 모달 보여주기\r\n");
      out.write("        function showChangeBirthModal() {\r\n");
      out.write("        	$('#changeBirthModal').css('display', 'flex');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 성별 변경 모달 닫기\r\n");
      out.write("        function closeChangeBirthModal() {\r\n");
      out.write("        	$('#changeBirthModal').css('display', 'none');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        $(function () {\r\n");
      out.write("            $(\"#changeBirthForm\").on(\"submit\", function (e) {\r\n");
      out.write("                e.preventDefault(); // 기본 폼 제출 동작 방지\r\n");
      out.write("\r\n");
      out.write("                let birthDate = $(\"#birthDate\").val(); // yyyy-mm-dd 형식의 값\r\n");
      out.write("                if (!birthDate) {\r\n");
      out.write("                    alert(\"생년월일을 선택해주세요.\");\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // 생년월일을 YYYYMMDD 형식으로 변환\r\n");
      out.write("                birthDate = birthDate.replaceAll(\"-\", \"\");\r\n");
      out.write("\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: \"changeBirth.me\",\r\n");
      out.write("                    type: \"POST\",\r\n");
      out.write("                    data: { birthDate: birthDate },\r\n");
      out.write("                    success: function (response) {\r\n");
      out.write("                        alert(response);\r\n");
      out.write("                        if (response === \"생년월일이 성공적으로 변경되었습니다.\") {\r\n");
      out.write("                            location.reload(); // 성공 시 페이지 새로고침\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function () {\r\n");
      out.write("                        alert(\"생년월일 변경 중 오류가 발생했습니다. 다시 시도해주세요.\");\r\n");
      out.write("                    },\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        $(function () {\r\n");
      out.write("            // 마케팅 동의 체크박스 변경 이벤트\r\n");
      out.write("            $(\"#marketingConsent\").change(function () {\r\n");
      out.write("                const isChecked = $(this).is(\":checked\");\r\n");
      out.write("\r\n");
      out.write("                if (isChecked) {\r\n");
      out.write("                    // 활성화 (바로 동의)\r\n");
      out.write("                    const currentDate = new Date().toLocaleString();\r\n");
      out.write("                    alert(\"전송자 : (주)필룸\\n일시 : \" + currentDate + \"\\n처리내용 : 개인 정보 마케팅 활용 동의 완료\");\r\n");
      out.write("                    changeMarketing(\"Y\");\r\n");
      out.write("                } else {\r\n");
      out.write("                    // 비활성화 시 모달만 띄움 (체크박스 상태 변경은 보류)\r\n");
      out.write("                    $(\"#marketingModal\").fadeIn(200);\r\n");
      out.write("\r\n");
      out.write("                    // 체크박스 상태를 다시 원래대로 설정 (임시 유지)\r\n");
      out.write("                    $(this).prop(\"checked\", true);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // 모달: 해제 버튼 클릭\r\n");
      out.write("            $(\"#confirmUnsubscribe\").click(function () {\r\n");
      out.write("                $(\"#marketingModal\").fadeOut(100);\r\n");
      out.write("                const currentDate = new Date().toLocaleString();\r\n");
      out.write("\r\n");
      out.write("                // 체크박스를 비활성화 (해제)\r\n");
      out.write("                $(\"#marketingConsent\").prop(\"checked\", false);\r\n");
      out.write("\r\n");
      out.write("                alert(\"전송자 : (주)필룸\\n일시 : \" + currentDate + \"\\n처리내용 : 개인 정보 마케팅 활용 동의 철회\");\r\n");
      out.write("                changeMarketing(\"N\"); // AJAX 호출\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // 모달: 유지 버튼 클릭\r\n");
      out.write("            $(\"#cancelUnsubscribe\").click(function () {\r\n");
      out.write("                $(\"#marketingModal\").fadeOut(100);\r\n");
      out.write("                // 체크박스 상태를 그대로 유지 (아무 것도 하지 않음)\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // DB 업데이트 AJAX\r\n");
      out.write("            function changeMarketing(consentValue) {\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: \"changeMarketing.me\",\r\n");
      out.write("                    method: \"POST\",\r\n");
      out.write("                    data: { marketing: consentValue },\r\n");
      out.write("                    success: function (response) {\r\n");
      out.write("                        console.log(\"마케팅 동의 업데이트 성공:\", response);\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function () {\r\n");
      out.write("                        alert(\"정보 업데이트 중 문제가 발생했습니다. 다시 시도해주세요.\");\r\n");
      out.write("                    },\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("     	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("     	// 약관모달-------------------------------------------------\r\n");
      out.write("        $(function () {\r\n");
      out.write("            // 모달 열기\r\n");
      out.write("            $('.open-modal-btn').click(function () {\r\n");
      out.write("                const targetModal = '#' + $(this).data('target');\r\n");
      out.write("                $(targetModal).fadeIn(200); // 모달을 서서히 나타냄\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // 모달 닫기\r\n");
      out.write("            $('.close-btn').click(function () {\r\n");
      out.write("                $(this).closest('.modal').fadeOut(100); // 모달을 서서히 사라지게 함\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // 모달 외부 클릭 시 닫기\r\n");
      out.write("            $(window).click(function (event) {\r\n");
      out.write("                if ($(event.target).hasClass('modal')) {\r\n");
      out.write("                    $(event.target).fadeOut(100);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		                        ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("		                        ");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("		                        ");
          if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                    ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/member/profile.jsp(492,26) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.loginUser.gender}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		                            선택 안함\r\n");
          out.write("		                        ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/member/profile.jsp(495,26) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.gender == 'M'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		                            남성\r\n");
          out.write("		                        ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/member/profile.jsp(498,26) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.gender == 'F'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		                            여성\r\n");
          out.write("	                        ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/member/profile.jsp(529,28) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("birth");
      // /WEB-INF/views/member/profile.jsp(529,28) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/member/profile.jsp(529,28) '${sessionScope.loginUser.birth}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${sessionScope.loginUser.birth}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/member/profile.jsp(530,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty birth}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				                ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${birth.substring(0, 4)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('년');
          out.write(' ');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${birth.substring(4, 6)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('월');
          out.write(' ');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${birth.substring(6, 8)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("일\r\n");
          out.write("				            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/member/profile.jsp(565,29) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.marketing == 'Y'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				                    checked\r\n");
          out.write("				                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
