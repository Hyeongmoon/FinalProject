/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-12-26 06:41:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class enrollForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1734951689000L));
    _jspx_dependants.put("jar:file:/C:/Final_Project/Filoom/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("    /* 스타일 초기화 */\r\n");
      out.write("    * {\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    body {\r\n");
      out.write("        font-family: Arial, sans-serif;\r\n");
      out.write("        background-color: #121212;\r\n");
      out.write("        color: #ffffff;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .signup-container {\r\n");
      out.write("        width: 700px;\r\n");
      out.write("        background-color: #1e1e1e;\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        padding: 50px;\r\n");
      out.write("        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);\r\n");
      out.write("        margin: 50px auto;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .enroll-Header {\r\n");
      out.write("        font-size: 24px;\r\n");
      out.write("        font-weight: 600;\r\n");
      out.write("        margin-bottom: 10px;\r\n");
      out.write("        border-bottom: 1px solid #333;\r\n");
      out.write("        padding-bottom: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .required-notice {\r\n");
      out.write("        font-size: 12px;\r\n");
      out.write("        color: #aaa;\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("        text-align: right;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .form-group {\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    label {\r\n");
      out.write("        display: block;\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("        margin-bottom: 10px;\r\n");
      out.write("        font-weight: 500;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    span {\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("        color: #aaa;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    hr {\r\n");
      out.write("        border: 0;\r\n");
      out.write("        border-top: 1px solid #333;\r\n");
      out.write("        margin: 30px 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 공통 입력 필드 스타일 */\r\n");
      out.write("    input[type=\"text\"],\r\n");
      out.write("    input[type=\"password\"],\r\n");
      out.write("    input[type=\"email\"],\r\n");
      out.write("    input[type=\"tel\"] {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        border: 1px solid #333;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        background-color: #2b2b2b;\r\n");
      out.write("        color: #ffffff;\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("        flex: 1;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input::placeholder {\r\n");
      out.write("    color: #777;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    input:focus {\r\n");
      out.write("	  outline: none;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("    /* 닉네임, 이메일 중복 확인 버튼 */\r\n");
      out.write("    .input-with-btn {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        gap: 10px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    input[readonly], input[disabled] {\r\n");
      out.write("    	color: #808080; /* 텍스트 색상을 회색으로 변경 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    select {\r\n");
      out.write("        /* -moz-appearance: none; */\r\n");
      out.write("        /* -webkit-appearance: none; */\r\n");
      out.write("        /* appearance: none; */\r\n");
      out.write("        /* box-shadow: 0 1px 0 1px rgba(0,0,0,.04); */\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        border: 1px solid #333;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        background-color: #2b2b2b;\r\n");
      out.write("        color: #ffffff;\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .check-btn {\r\n");
      out.write("        padding: 10px 15px;\r\n");
      out.write("        background-color: #493628;\r\n");
      out.write("        color: #ffffff;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .check-btn:hover {\r\n");
      out.write("        background-color: #8b5a2b;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 비활성화 상태 */\r\n");
      out.write("	.check-btn:disabled {\r\n");
      out.write("	    background-color: #d3d3d3; /* 비활성화된 버튼의 배경색 */\r\n");
      out.write("	    color: #a9a9a9; /* 비활성화된 버튼의 텍스트 색상 */\r\n");
      out.write("	    cursor: not-allowed; /* 비활성화된 버튼에 커서 비활성화 스타일 */\r\n");
      out.write("	    opacity: 0.7; /* 약간의 투명도 추가 */\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("    /* 전화번호 그룹 */\r\n");
      out.write("    .phone-group {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        flex-direction: column;\r\n");
      out.write("        /* gap: 5px; 레이블과 입력 필드 간 간격 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .phone-group .input-with-btn {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        gap: 10px; /* 입력 필드 간 간격 */\r\n");
      out.write("        align-items: center; /* 수직 중앙 정렬 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 성별 그룹 */\r\n");
      out.write("    .gender-group {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        gap: 60px; /* 라디오 버튼 사이의 간격 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .gender-group label {\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .gender-group input[type=\"radio\"] {\r\n");
      out.write("        width: 16px;\r\n");
      out.write("        height: 16px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        accent-color: #493628;\r\n");
      out.write("        margin-right: 10px; /* 라디오 버튼과 텍스트 간 간격 */\r\n");
      out.write("        margin-top: 5px;\r\n");
      out.write("        vertical-align: -3px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 약관동의 css */\r\n");
      out.write("    .agreement-container {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        border: 1px solid #444;\r\n");
      out.write("        padding: 15px;\r\n");
      out.write("        background-color: #1e1e1e;\r\n");
      out.write("        color: #ffffff;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .agreement-header {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        gap: 10px;\r\n");
      out.write("        border-bottom: 1px solid #333;\r\n");
      out.write("        padding-bottom: 10px;\r\n");
      out.write("        margin-bottom: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .all-agree {\r\n");
      out.write("        font-size: 16px;\r\n");
      out.write("        margin: 0 0 2px 0; /* 체크박스와 글자 사이 단차 */\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .agreement-header span {\r\n");
      out.write("        font-size: 12px;\r\n");
      out.write("        color: #aaa;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input[type=checkbox] {\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        zoom: 1.5;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .agreement-list {\r\n");
      out.write("        list-style: none;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        margin: 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 약관 항목 스타일 */\r\n");
      out.write("    .agreement-item {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        justify-content: flex-start; /* 체크박스와 제목을 왼쪽 정렬 */\r\n");
      out.write("        gap: 10px; /* 체크박스와 제목 간 간격 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 약관 제목 */\r\n");
      out.write("    .agreement-label {\r\n");
      out.write("        flex: 1;\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("        cursor: pointer; /* 마우스 포인터 활성화 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .agree-label {\r\n");
      out.write("        flex: 1;\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("        cursor: pointer; /* 마우스 포인터 활성화 */\r\n");
      out.write("        margin: 10px 0 14px 0; /* 체크박스와 글자 사이 단차 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 모달 스타일 */\r\n");
      out.write("    .modal {\r\n");
      out.write("        display: none; /* 기본적으로 숨김 */\r\n");
      out.write("        position: fixed;\r\n");
      out.write("        z-index: 1000;\r\n");
      out.write("        left:50%;\r\n");
      out.write("        top: 50%;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        transform: translate(-50%, -50%);\r\n");
      out.write("        background-color: rgba(0, 0, 0, 0.6);\r\n");
      out.write("        max-width: 800px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 모달 내용 */\r\n");
      out.write("    .modal-content {\r\n");
      out.write("        background-color: #fff;\r\n");
      out.write("        color: #000;\r\n");
      out.write("        margin: 15% auto;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        width: 60%;\r\n");
      out.write("        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n");
      out.write("        position: relative;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 닫기 버튼 */\r\n");
      out.write("    .close-btn {\r\n");
      out.write("        color: #aaa;\r\n");
      out.write("        float: right;\r\n");
      out.write("        font-size: 28px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .close-btn:hover {\r\n");
      out.write("        color: #000;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 자세히 보기 버튼 */\r\n");
      out.write("    .open-modal-btn {\r\n");
      out.write("        background: none;\r\n");
      out.write("        border: none;\r\n");
      out.write("        color: #aaa;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        font-size: 12px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .open-modal-btn:hover {\r\n");
      out.write("        color: #fff;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .submit-btn {\r\n");
      out.write("        background-color: #000000;\r\n");
      out.write("        margin-top: 25px;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        font-size: 16px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        color: #ffffff;\r\n");
      out.write("        border-radius: 60px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        transition: background-color 0.3s ease, color 0.3s ease; /* 배경색과 글씨 색 변화를 위한 트랜지션 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .submit-btn:hover {\r\n");
      out.write("        background-color: #fff; /* 배경을 흰색으로 변경 */\r\n");
      out.write("        color: #000; /* 글씨 색을 검정색으로 변경 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 크롬 자동완성 시 input 색상 변경 막음 */\r\n");
      out.write("    input:-webkit-autofill,\r\n");
      out.write("    input:-webkit-autofill:hover,\r\n");
      out.write("    input:-webkit-autofill:focus,\r\n");
      out.write("    input:-webkit-autofill:active {\r\n");
      out.write("        transition: background-color 5000s ease-in-out 0s;\r\n");
      out.write("        -webkit-transition: background-color 9999s ease-out;\r\n");
      out.write("        -webkit-box-shadow: 0 0 0px 1000px #2b2b2b inset !important;\r\n");
      out.write("        -webkit-text-fill-color: #fff !important;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"signup-container\">\r\n");
      out.write("        <div class=\"signup-box\">\r\n");
      out.write("            <h1 class=\"enroll-Header\">회원가입</h1>\r\n");
      out.write("            <p class=\"required-notice\">필수입력사항 *</p>\r\n");
      out.write("            <form action=\"insert.me\" method=\"post\" id=\"enrollForm\">\r\n");
      out.write("            \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"userId\">아이디 *</label>\r\n");
      out.write("                    <div class=\"input-with-btn\">\r\n");
      out.write("                        <input type=\"text\" id=\"userId\" name=\"userId\" placeholder=\"영문, 숫자를 조합한 5-20자 이내로 입력해주세요.\" >\r\n");
      out.write("                        <button class=\"check-btn\" id=\"checkIdBtn\" disabled>중복확인</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"password\">비밀번호 *</label>\r\n");
      out.write("                    <input type=\"password\" id=\"userPwd\" name=\"userPwd\" placeholder=\"영문, 숫자, 특수기호를 포함한 8자 이상의 비밀번호를 입력해주세요.\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"passwordConfirm\">비밀번호 확인 *</label>\r\n");
      out.write("                    <input type=\"password\" id=\"checkPwd\" name=\"checkPwd\" placeholder=\"비밀번호를 다시 입력해주세요.\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <hr>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"userName\">이름 *</label>\r\n");
      out.write("                    <input type=\"text\" id=\"userName\" name=\"userName\" placeholder=\"한글 또는 영문으로 입력해주세요.\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("				    <label for=\"email\">이메일 *</label>\r\n");
      out.write("				    <div class=\"input-with-btn\">\r\n");
      out.write("				        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"이메일을 입력해주세요.\" required>\r\n");
      out.write("				        <button type=\"button\" class=\"check-btn\" id=\"cert\" onclick=\"sendCert();\">인증번호 받기</button>\r\n");
      out.write("				    </div>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"form-group\" style=\"display: none;\" id=\"cert-section\">\r\n");
      out.write("				    <label for=\"checkNo\">인증번호 *</label>\r\n");
      out.write("				    <div class=\"input-with-btn\">\r\n");
      out.write("				        <input type=\"text\" id=\"checkNo\" name=\"checkNo\" placeholder=\"인증번호를 입력해주세요.\" disabled>\r\n");
      out.write("				        <button type=\"button\" class=\"check-btn\" id=\"validate\" onclick=\"validateCert();\" disabled>인증확인</button>\r\n");
      out.write("				    </div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("				    <label for=\"birth\">생년월일 *</label>\r\n");
      out.write("				    <input type=\"text\" id=\"birth\" name=\"birth\" placeholder=\"YYYYMMDD\" required maxlength=\"8\" oninput=\"validateBirth(this)\" required>\r\n");
      out.write("				</div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <!-- 성별 박스 -->\r\n");
      out.write("                    <label for=\"gender\">성별</label>\r\n");
      out.write("                    <div class=\"gender-group\">\r\n");
      out.write("                        <label><input type=\"radio\" class=\"gender\" name=\"gender\" value=\"\" checked=\"checked\">선택안함</label>\r\n");
      out.write("                        <label><input type=\"radio\" class=\"gender\" name=\"gender\" value=\"M\">남성</label>\r\n");
      out.write("                        <label><input type=\"radio\" class=\"gender\" name=\"gender\" value=\"F\">여성</label>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <hr>\r\n");
      out.write("\r\n");
      out.write("                <div>\r\n");
      out.write("                    <label>약관동의</label>\r\n");
      out.write("                    <div class=\"agreement-container\">\r\n");
      out.write("                        <div class=\"agreement-header\">\r\n");
      out.write("                            <input type=\"checkbox\" id=\"all-agree\">\r\n");
      out.write("                            <label for=\"all-agree\" class=\"all-agree\">전체동의</label>\r\n");
      out.write("                            <span>선택항목에 대한 동의 포함</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <ul class=\"agreement-list\">\r\n");
      out.write("                            <li>\r\n");
      out.write("                                <div class=\"agreement-item\">\r\n");
      out.write("                                    <input type=\"checkbox\" id=\"agree1\" class=\"agree-checkbox\" required>\r\n");
      out.write("                                    <label for=\"agree1\" class=\"agree-label\">(필수) 만 14세 이상입니다. *</label>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </li>\r\n");
      out.write("                            <li>\r\n");
      out.write("                                <div class=\"agreement-item\">\r\n");
      out.write("                                    <input type=\"checkbox\" id=\"agree2\" class=\"agree-checkbox\" required>\r\n");
      out.write("                                    <label for=\"agree2\" class=\"agree-label\">(필수) 서비스 이용 약관 동의 *</label>\r\n");
      out.write("                                    <button type=\"button\" class=\"open-modal-btn\" data-target=\"modal2\">자세히 보기</button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </li>\r\n");
      out.write("                            <li>\r\n");
      out.write("                                <div class=\"agreement-item\">\r\n");
      out.write("                                    <input type=\"checkbox\" id=\"agree3\" class=\"agree-checkbox\" required>\r\n");
      out.write("                                    <label for=\"agree3\" class=\"agree-label\">(필수) 개인정보 수집 및 이용 동의 *</label>\r\n");
      out.write("                                    <button type=\"button\" class=\"open-modal-btn\" data-target=\"modal3\">자세히 보기</button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </li>\r\n");
      out.write("                            <li>\r\n");
      out.write("                                <div class=\"agreement-item\">\r\n");
      out.write("                                    <input type=\"checkbox\" id=\"agree4\" class=\"agree-checkbox\">\r\n");
      out.write("                                    <label for=\"agree4\" class=\"agree-label\">(선택) 개인정보 마케팅 활용 동의</label>\r\n");
      out.write("                                    <button type=\"button\" class=\"open-modal-btn\" data-target=\"modal4\">자세히 보기</button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                    <!-- 모달 창 -->\r\n");
      out.write("                    <div id=\"modal2\" class=\"modal\">\r\n");
      out.write("                        <div class=\"modal-content\">\r\n");
      out.write("                            <span class=\"close-btn\">&times;</span>\r\n");
      out.write("                            <h3>서비스 이용 약관</h3><br><br>\r\n");
      out.write("                            <div>\r\n");
      out.write("                                <strong>제 1 조 [목적]</strong><br>\r\n");
      out.write("                                &nbsp;&nbsp;본 약관은 필룸(Filoom)에서 제공하는 영화 예매 및 관련 서비스(이하 \"서비스\")의 이용과 관련된 사항을 규정합니다.<br><br>\r\n");
      out.write("                                <strong>제 2 조 [회원 가입 및 관리]</strong><br>\r\n");
      out.write("                                &nbsp;&nbsp;- 회원은 본인의 정보로만 가입해야 하며, 허위 정보를 기입할 경우 계정이 제한될 수 있습니다.<br>\r\n");
      out.write("                                &nbsp;&nbsp;- 회원은 ID와 비밀번호 관리에 책임을 지며, 이를 타인에게 양도하거나 대여할 수 없습니다.<br><br>\r\n");
      out.write("                                <strong>제 3 조 [서비스 이용]</strong><br>\r\n");
      out.write("                                &nbsp;&nbsp;- 필룸은 영화 예매 서비스 외에도 영화 관련 콘텐츠 제공, 예매 내역 관리 등의 부가 서비스를 제공합니다.<br>\r\n");
      out.write("                                &nbsp;&nbsp;- 필룸은 시스템 점검, 운영상의 이유 등으로 서비스 제공을 일시적으로 제한할 수 있습니다.<br><br>\r\n");
      out.write("                                <strong>제 4 조 [책임 제한]</strong><br>\r\n");
      out.write("                                &nbsp;&nbsp;- 필룸은 영화 예매 후 발생하는 개인적 문제(시간 변경, 상영 취소 등)에 대해 제한적인 책임을 부담합니다.<br>\r\n");
      out.write("                                &nbsp;&nbsp;- 다만, 시스템 오류나 필룸 측 과실로 인한 문제는 책임을 인정하고 적절히 대응합니다.<br>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div id=\"modal3\" class=\"modal\">\r\n");
      out.write("                        <div class=\"modal-content\">\r\n");
      out.write("                            <span class=\"close-btn\">&times;</span>\r\n");
      out.write("                            <h2>개인정보 수집 및 이용</h2><hr>\r\n");
      out.write("                            <p>개인정보 처리 방침 내용이 여기에 표시됩니다.</p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div id=\"modal4\" class=\"modal\">\r\n");
      out.write("                        <div class=\"modal-content\">\r\n");
      out.write("                            <span class=\"close-btn\">&times;</span>\r\n");
      out.write("                            <h2>마케팅 활용 동의</h2><hr>\r\n");
      out.write("                            <p>마케팅 활용에 대한 설명이 여기에 표시됩니다.</p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <button type=\"submit\" class=\"submit-btn\">회원가입</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("	 	// 이메일 인증번호 전송 요청 (중복 체크 포함)\r\n");
      out.write("	    function sendCert() {\r\n");
      out.write("	        let email = $(\"#email\").val();\r\n");
      out.write("	\r\n");
      out.write("	        // 이메일 중복 체크 요청\r\n");
      out.write("	        $.ajax({\r\n");
      out.write("	            url: \"checkEmailAndCert.do\", // 중복 체크 및 인증번호 발급 통합 엔드포인트\r\n");
      out.write("	            type: \"post\",\r\n");
      out.write("	            data: {\r\n");
      out.write("	                email: email,\r\n");
      out.write("	            },\r\n");
      out.write("	            success: function (response) {\r\n");
      out.write("	                if (response.status === \"duplicate\") {\r\n");
      out.write("	                    alert(response.message); // \"중복된 이메일로 가입이 불가능합니다.\"\r\n");
      out.write("	                } else if (response.status === \"success\") {\r\n");
      out.write("	                    alert(response.message); // \"인증번호가 이메일로 전송되었습니다.\"\r\n");
      out.write("	\r\n");
      out.write("	                    // 인증번호 입력 창 보이기\r\n");
      out.write("	                    $(\"#cert-section\").show();\r\n");
      out.write("	\r\n");
      out.write("	                    // 인증번호 입력 창 및 확인 버튼 활성화\r\n");
      out.write("	                    $(\"#checkNo\").attr(\"disabled\", false).focus();\r\n");
      out.write("	                    $(\"#validate\").attr(\"disabled\", false);\r\n");
      out.write("	\r\n");
      out.write("	                    // 이메일 입력창 및 인증번호 받기 버튼 비활성화\r\n");
      out.write("	                    $(\"#email\").attr(\"readonly\", true);\r\n");
      out.write("	                    $(\"#cert\").attr(\"disabled\", true);\r\n");
      out.write("	                } else {\r\n");
      out.write("	                    alert(\"오류가 발생했습니다. 다시 시도해주세요.\");\r\n");
      out.write("	                }\r\n");
      out.write("	            },\r\n");
      out.write("	            error: function () {\r\n");
      out.write("	                console.log(\"이메일 중복 체크 및 인증번호 발급 요청 실패\");\r\n");
      out.write("	            },\r\n");
      out.write("	        });\r\n");
      out.write("	    }\r\n");
      out.write("	\r\n");
      out.write("	    // 이메일 인증번호 대조 요청\r\n");
      out.write("	    function validateCert() {\r\n");
      out.write("	        let email = $(\"#email\").val();\r\n");
      out.write("	        let checkNo = $(\"#checkNo\").val();\r\n");
      out.write("	\r\n");
      out.write("	        $.ajax({\r\n");
      out.write("	            url: \"validate.do\",\r\n");
      out.write("	            type: \"post\",\r\n");
      out.write("	            data: {\r\n");
      out.write("	                email: email,\r\n");
      out.write("	                checkNo: checkNo,\r\n");
      out.write("	            },\r\n");
      out.write("	            success: function (result) {\r\n");
      out.write("	                alert(result);\r\n");
      out.write("	                if (result === \"인증 성공\") {\r\n");
      out.write("	                    // 인증 성공 후 이메일 입력창과 인증번호 입력창의 테두리를 초록색으로 변경\r\n");
      out.write("	                    $(\"#email\").css(\"border-color\", \"green\");\r\n");
      out.write("	                    $(\"#checkNo\").css(\"border-color\", \"green\");\r\n");
      out.write("	\r\n");
      out.write("	                    // 인증 성공 후 인증 관련 요소들 비활성화\r\n");
      out.write("	                    $(\"#checkNo\").attr(\"disabled\", true);\r\n");
      out.write("	                    $(\"#validate\").attr(\"disabled\", true);\r\n");
      out.write("	                } else {\r\n");
      out.write("	                    // 인증 실패 시 이메일 입력창과 인증번호 입력창의 테두리를 빨간색으로 변경\r\n");
      out.write("	                    $(\"#email\").css(\"border-color\", \"red\");\r\n");
      out.write("	                    $(\"#checkNo\").css(\"border-color\", \"red\");\r\n");
      out.write("	\r\n");
      out.write("	                    // 인증 실패 시 이메일 입력창 및 인증번호 받기 버튼 활성화, 이메일 입력창에 포커스\r\n");
      out.write("	                    $(\"#email\").attr(\"readonly\", false).focus();\r\n");
      out.write("	                    $(\"#cert\").attr(\"disabled\", false);\r\n");
      out.write("	\r\n");
      out.write("	                    // 인증 실패 시 인증번호 입력창과 인증확인 버튼 비활성화\r\n");
      out.write("	                    $(\"#checkNo\").attr(\"disabled\", true);\r\n");
      out.write("	                    $(\"#validate\").attr(\"disabled\", true);\r\n");
      out.write("	                }\r\n");
      out.write("	            },\r\n");
      out.write("	            error: function () {\r\n");
      out.write("	                console.log(\"인증번호 대조용 ajax 통신 실패\");\r\n");
      out.write("	            },\r\n");
      out.write("	        });\r\n");
      out.write("	    }\r\n");
      out.write("	\r\n");
      out.write("	    $(function () {\r\n");
      out.write("	        // 비속어 목록\r\n");
      out.write("	        const restrictedWords = [\"admin\", \"fuck\"];\r\n");
      out.write("	\r\n");
      out.write("	        // 아이디 조건 : 영문, 숫자를 조합한 5-20자\r\n");
      out.write("	        const idRegexp = /^[a-zA-Z0-9]{5,20}$/;\r\n");
      out.write("	\r\n");
      out.write("	        // 비밀번호 조건 : 영문, 숫자, 특수기호를 포함한 8자 이상\r\n");
      out.write("	        const pwdRegexp = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+~`|}{[\\]:;?><,./-]).{8,}$/;\r\n");
      out.write("	\r\n");
      out.write("	        // 이름 조건 : 한글 또는 영문, 최소 2자 이상 20자 이하\r\n");
      out.write("	        const nameRegexp = /^[가-힣a-zA-Z]{2,20}$/;\r\n");
      out.write("	\r\n");
      out.write("	        let isIdChecked = false; // 아이디 중복 확인 여부 플래그\r\n");
      out.write("	\r\n");
      out.write("	        // 아이디 입력 실시간 검증\r\n");
      out.write("	        $(\"#userId\").on(\"input\", function () {\r\n");
      out.write("	            const userId = $(this).val().trim();\r\n");
      out.write("	            if (idRegexp.test(userId)) {\r\n");
      out.write("	                $(\"#checkIdBtn\").prop(\"disabled\", false); // 버튼 활성화\r\n");
      out.write("	                isIdChecked = false; // 아이디가 수정되면 다시 중복 확인 필요\r\n");
      out.write("	            } else {\r\n");
      out.write("	                $(\"#checkIdBtn\").prop(\"disabled\", true); // 버튼 비활성화\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	\r\n");
      out.write("	        // 중복확인 버튼 클릭 이벤트\r\n");
      out.write("	        $(\"#checkIdBtn\").click(function (e) {\r\n");
      out.write("	            e.preventDefault();\r\n");
      out.write("	            const userId = $(\"#userId\").val().trim();\r\n");
      out.write("	\r\n");
      out.write("	            $.ajax({\r\n");
      out.write("	                url: \"idCheck.me\",\r\n");
      out.write("	                method: \"post\",\r\n");
      out.write("	                contentType: \"application/json\",\r\n");
      out.write("	                data: JSON.stringify({ userId: userId }),\r\n");
      out.write("	                success: function (response) {\r\n");
      out.write("	                    if (response.result === \"duplicate\") {\r\n");
      out.write("	                        alert(\"이미 사용 중인 아이디입니다.\");\r\n");
      out.write("	                        $(\"#userId\").css(\"border-color\", \"red\").focus();\r\n");
      out.write("	                    } else if (response.result === \"invalid\") {\r\n");
      out.write("	                        alert(\"사용이 불가능한 아이디입니다.\");\r\n");
      out.write("	                        $(\"#userId\").css(\"border-color\", \"red\").focus();\r\n");
      out.write("	                    } else if (response.result === \"available\") {\r\n");
      out.write("	                        alert(\"사용 가능한 아이디입니다.\");\r\n");
      out.write("	                        $(\"#userId\").prop(\"readonly\", true); // 입력창 비활성화\r\n");
      out.write("	                        $(\"#userId\").css(\"border-color\", \"green\"); // 입력창 테두리 초록색\r\n");
      out.write("	                        $(\"#checkIdBtn\").prop(\"disabled\", true); // 버튼 비활성화\r\n");
      out.write("	                        isIdChecked = true; // 중복 확인 성공\r\n");
      out.write("	                    }\r\n");
      out.write("	                },\r\n");
      out.write("	                error: function () {\r\n");
      out.write("	                    alert(\"아이디 중복 확인에 실패했습니다. 다시 시도해주세요.\");\r\n");
      out.write("	                    isIdChecked = false;\r\n");
      out.write("	                },\r\n");
      out.write("	            });\r\n");
      out.write("	        });\r\n");
      out.write("	\r\n");
      out.write("	        // 비밀번호 유효성 검사\r\n");
      out.write("	        $(\"#userPwd\").on(\"keyup\", function () {\r\n");
      out.write("	            const password = $(this).val();\r\n");
      out.write("	            if (pwdRegexp.test(password)) {\r\n");
      out.write("	                $(this).css(\"border-color\", \"green\");\r\n");
      out.write("	            } else {\r\n");
      out.write("	                $(this).css(\"border-color\", \"red\");\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	\r\n");
      out.write("	        // 비밀번호 확인 검사\r\n");
      out.write("	        $(\"#checkPwd\").on(\"keyup\", function () {\r\n");
      out.write("	            const password = $(\"#userPwd\").val();\r\n");
      out.write("	            const confirmPassword = $(this).val();\r\n");
      out.write("	            if (password === confirmPassword && pwdRegexp.test(password)) {\r\n");
      out.write("	                $(this).css(\"border-color\", \"green\");\r\n");
      out.write("	            } else {\r\n");
      out.write("	                $(this).css(\"border-color\", \"red\");\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	\r\n");
      out.write("	        // 이름 유효성 검사\r\n");
      out.write("	        $(\"#userName\").on(\"keyup\", function () {\r\n");
      out.write("	            const userName = $(this).val();\r\n");
      out.write("	            if (nameRegexp.test(userName)) {\r\n");
      out.write("	                $(this).css(\"border-color\", \"green\");\r\n");
      out.write("	            } else {\r\n");
      out.write("	                $(this).css(\"border-color\", \"red\");\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	\r\n");
      out.write("	        // 생년월일 유효성 검사\r\n");
      out.write("	        $(\"#birth\").on(\"keyup\", function () {\r\n");
      out.write("	            const birth = $(this).val();\r\n");
      out.write("	            $(this).val(birth.replace(/[^0-9]/g, \"\").slice(0, 8)); // 숫자 외 문자 제거 및 최대 8자리로 제한\r\n");
      out.write("	            if (birth.length === 8) {\r\n");
      out.write("	                $(this).css(\"border-color\", \"green\");\r\n");
      out.write("	            } else {\r\n");
      out.write("	                $(this).css(\"border-color\", \"red\");\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	\r\n");
      out.write("	        $(\".submit-btn\").click(function (e) {\r\n");
      out.write("	            e.preventDefault(); // 기본 제출 동작 막기\r\n");
      out.write("	\r\n");
      out.write("	            const userId = $(\"#userId\").val().trim();\r\n");
      out.write("	            const userPwd = $(\"#userPwd\").val();\r\n");
      out.write("	            const checkPwd = $(\"#checkPwd\").val();\r\n");
      out.write("	            const userName = $(\"#userName\").val().trim();\r\n");
      out.write("	            const email = $(\"#email\").val().trim();\r\n");
      out.write("	            const checkNo = $(\"#checkNo\").val().trim();\r\n");
      out.write("	            const birth = $(\"#birth\").val();\r\n");
      out.write("	\r\n");
      out.write("	            const isAgree1 = $(\"#agree1\").is(\":checked\");\r\n");
      out.write("	            const isAgree2 = $(\"#agree2\").is(\":checked\");\r\n");
      out.write("	            const isAgree3 = $(\"#agree3\").is(\":checked\");\r\n");
      out.write("	            const isAgree4 = $(\"#agree4\").is(\":checked\") ? \"Y\" : \"N\"; // 선택 약관 동의 여부\r\n");
      out.write("	\r\n");
      out.write("	            if (!userId) {\r\n");
      out.write("	                alert(\"아이디를 입력해주세요.\");\r\n");
      out.write("	                $(\"#userId\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if (!idRegexp.test(userId)) {\r\n");
      out.write("	                alert(\"아이디는 영문, 숫자 조합으로 5~20자 이내로 입력해주세요.\");\r\n");
      out.write("	                $(\"#userId\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if (!isIdChecked) {\r\n");
      out.write("	                alert(\"아이디 중복 확인을 진행해주세요.\");\r\n");
      out.write("	                $(\"#userId\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if (!userPwd) {\r\n");
      out.write("	                alert(\"비밀번호를 입력해주세요.\");\r\n");
      out.write("	                $(\"#userPwd\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if (!pwdRegexp.test(userPwd)) {\r\n");
      out.write("	                alert(\"비밀번호는 영문, 숫자, 특수기호를 포함한 8자 이상이어야 합니다.\");\r\n");
      out.write("	                $(\"#userPwd\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	            \r\n");
      out.write("	            if (!checkPwd) {\r\n");
      out.write("	                alert(\"비밀번호 확인란을 입력해주세요.\");\r\n");
      out.write("	                $(\"#checkPwd\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if (userPwd !== checkPwd) {\r\n");
      out.write("	                alert(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("	                $(\"#checkPwd\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	            \r\n");
      out.write("	            if (!userName) {\r\n");
      out.write("	                alert(\"이름을 입력해주세요.\");\r\n");
      out.write("	                $(\"#userName\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if (!nameRegexp.test(userName)) {\r\n");
      out.write("	                alert(\"이름은 한글 또는 영문으로 2~20자 이내로 입력해주세요.\");\r\n");
      out.write("	                $(\"#userName\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if (!email) {\r\n");
      out.write("	                alert(\"이메일을 입력해주세요.\");\r\n");
      out.write("	                $(\"#email\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if ($(\"#cert\").prop(\"disabled\") !== true) {\r\n");
      out.write("	                alert(\"이메일 인증번호 받기를 진행해주세요.\");\r\n");
      out.write("	                $(\"#email\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if (!checkNo) {\r\n");
      out.write("	                alert(\"이메일 인증번호를 입력해주세요.\");\r\n");
      out.write("	                $(\"#checkNo\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if ($(\"#validate\").prop(\"disabled\") !== true) {\r\n");
      out.write("	                alert(\"이메일 인증번호 확인을 진행해주세요.\");\r\n");
      out.write("	                $(\"#checkNo\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	            \r\n");
      out.write("	            if (!birth) {\r\n");
      out.write("	                alert(\"생년월일을 입력해주세요.\");\r\n");
      out.write("	                $(\"#birth\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if (birth.length !== 8) {\r\n");
      out.write("	                alert(\"생년월일은 8자리(YYYYMMDD)로 입력해주세요.\");\r\n");
      out.write("	                $(\"#birth\").focus().css(\"border-color\", \"red\");\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if (!isAgree1) {\r\n");
      out.write("	                alert(\"만 14세 이상만 가입할 수 있습니다.\");\r\n");
      out.write("	                $(\"#agree1\").focus();\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            if (!isAgree2 || !isAgree3) {\r\n");
      out.write("	                alert(\"이용 약관과 개인정보 수집 및 이용에 관한 안내를 모두 동의해 주세요.\");\r\n");
      out.write("	                if (!isAgree2) {\r\n");
      out.write("	                    $(\"#agree2\").focus();\r\n");
      out.write("	                } else {\r\n");
      out.write("	                    $(\"#agree3\").focus();\r\n");
      out.write("	                }\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	\r\n");
      out.write("	            // 모든 조건을 충족한 경우\r\n");
      out.write("	            $(\"<input>\")\r\n");
      out.write("	                .attr({\r\n");
      out.write("	                    type: \"hidden\",\r\n");
      out.write("	                    name: \"marketing\",\r\n");
      out.write("	                    value: isAgree4,\r\n");
      out.write("	                })\r\n");
      out.write("	                .appendTo(\"#enrollForm\");\r\n");
      out.write("	\r\n");
      out.write("	            $(\"form\").submit(); // 폼 제출\r\n");
      out.write("	        });\r\n");
      out.write("	\r\n");
      out.write("	        // 약관 체크박스\r\n");
      out.write("	        $(function () {\r\n");
      out.write("	            // 전체동의 체크박스 동작\r\n");
      out.write("	            $(\"#all-agree\").change(function () {\r\n");
      out.write("	                const isChecked = $(this).prop(\"checked\");\r\n");
      out.write("	                $(\".agree-checkbox\").prop(\"checked\", isChecked);\r\n");
      out.write("	            });\r\n");
      out.write("\r\n");
      out.write("	            // 개별 약관 체크박스 동작\r\n");
      out.write("	            $(\".agree-checkbox\").change(function () {\r\n");
      out.write("	                const allChecked =\r\n");
      out.write("	                    $(\".agree-checkbox\").length ===\r\n");
      out.write("	                    $(\".agree-checkbox:checked\").length;\r\n");
      out.write("	                $(\"#all-agree\").prop(\"checked\", allChecked);\r\n");
      out.write("	            });\r\n");
      out.write("\r\n");
      out.write("	            // 모달 열기\r\n");
      out.write("	            $(\".open-modal-btn\").click(function () {\r\n");
      out.write("	                const targetModal = \"#\" + $(this).data(\"target\");\r\n");
      out.write("	                $(targetModal).fadeIn(200); // 모달을 서서히 나타냄\r\n");
      out.write("	            });\r\n");
      out.write("\r\n");
      out.write("	            // 모달 닫기\r\n");
      out.write("	            $(\".close-btn\").click(function () {\r\n");
      out.write("	                $(this).closest(\".modal\").fadeOut(100); // 모달을 서서히 사라지게 함\r\n");
      out.write("	            });\r\n");
      out.write("\r\n");
      out.write("	            // 모달 외부 클릭 시 닫기\r\n");
      out.write("	            $(window).click(function (event) {\r\n");
      out.write("	                if ($(event.target).hasClass(\"modal\")) {\r\n");
      out.write("	                    $(event.target).fadeOut(100);\r\n");
      out.write("	                }\r\n");
      out.write("	            });\r\n");
      out.write("	        });\r\n");
      out.write("	    });\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
