/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-12-26 06:46:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1734951689000L));
    _jspx_dependants.put("jar:file:/C:/Final_Project/Filoom/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>마이페이지</title>\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n");
      out.write("<style>\n");
      out.write("	/* 기본 스타일 초기화 */\n");
      out.write("	* {\n");
      out.write("	    margin: 0;\n");
      out.write("	    padding: 0;\n");
      out.write("	    box-sizing: border-box;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	body {\n");
      out.write("	    font-family: Arial, sans-serif;\n");
      out.write("	    background-color: #121212;\n");
      out.write("	    color: #ffffff;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	/* 마이페이지 컨테이너 */\n");
      out.write("	.mypage-container {\n");
      out.write("	    display: flex;\n");
      out.write("	    width: 1100px;\n");
      out.write("	    background-color: #1e1e1e;\n");
      out.write("	    border-radius: 10px;\n");
      out.write("	    padding: 50px;\n");
      out.write("	    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);\n");
      out.write("	    overflow: hidden;\n");
      out.write("	    margin: 50px auto;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	/* 사이드바 */\n");
      out.write("	.mypage-sidebar {\n");
      out.write("	    width: 20%;\n");
      out.write("	    padding: 10px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.mypage-sidebar h2 a {\n");
      out.write("	    color: #fff; /* 흰 글씨 */\n");
      out.write("	    font-size: 20px; /* 큰 폰트 크기 */\n");
      out.write("	    font-weight: bold; /* 굵은 폰트 */\n");
      out.write("	    text-decoration: none; /* 밑줄 제거 */\n");
      out.write("	    display: block;\n");
      out.write("	    margin-bottom: 30px; /* 아래 간격 */\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.menu-list {\n");
      out.write("	    list-style: none;\n");
      out.write("	    padding: 0;\n");
      out.write("	    margin: 0;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.menu-list li a {\n");
      out.write("	    color: #aaa; /* 기본 회색 글씨 */\n");
      out.write("	    font-size: 14px; /* 작은 폰트 크기 */\n");
      out.write("	    font-weight: normal; /* 얇은 폰트 */\n");
      out.write("	    text-decoration: none; /* 밑줄 제거 */\n");
      out.write("	    display: block;\n");
      out.write("	    padding: 10px 0; /* 상하 간격 */\n");
      out.write("	    transition: color 0.3s ease;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.menu-list li.active a {\n");
      out.write("	    color: #fff; /* 흰 글씨 */\n");
      out.write("	    font-size: 16px; /* 작지만 조금 큰 폰트 크기 */\n");
      out.write("	    font-weight: bold; /* 굵은 폰트 */\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.menu-list li a:hover {\n");
      out.write("	    color: #ffffff;\n");
      out.write("	    font-weight: bold;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	/* 콘텐츠 영역 */\n");
      out.write("	.mypage-content {\n");
      out.write("	    width: 80%;\n");
      out.write("	    padding: 10px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.mypage-header {\n");
      out.write("	    font-size: 24px;\n");
      out.write("	    font-weight: bold;\n");
      out.write("	    margin-bottom: 30px;\n");
      out.write("	    border-bottom: 1px solid #333;\n");
      out.write("	    padding-bottom: 10px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("    <div class=\"mypage-container\">\n");
      out.write("        <div class=\"mypage-sidebar\">\n");
      out.write("            <h2><a href=\"myPage.me\">마이 페이지</a></h2>\n");
      out.write("            <ul class=\"menu-list\">\n");
      out.write("                <li><a href=\"profile.me\">내 정보</a></li>\n");
      out.write("                <li><a href=\"coupon.me\">쿠폰 조회</a></li>\n");
      out.write("                <li><a href=\"reserve.me\">예매 내역 조회</a></li>\n");
      out.write("                <li><a href=\"history.me\">내가 본 영화 조회</a></li>\n");
      out.write("                <li><a href=\"favorite.me\">보고 싶은 영화 조회</a></li>\n");
      out.write("                <li><a href=\"review.me\">내가 쓴 리뷰 조회</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"mypage-content\">\n");
      out.write("            <h1 class=\"mypage-header\">마이페이지</h1>\n");
      out.write("            <div class=\"info-list\">\n");
      out.write("\n");
      out.write("                \n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\n");
      out.write("    \n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
