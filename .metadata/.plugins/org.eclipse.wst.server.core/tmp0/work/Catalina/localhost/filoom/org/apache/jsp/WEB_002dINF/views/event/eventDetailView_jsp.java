/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-02-20 08:30:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.event;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class eventDetailView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1734951689000L));
    _jspx_dependants.put("jar:file:/C:/Filoom/Filoom/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fotherwise_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("   \r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>이벤트 상세조회</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("    body{\r\n");
      out.write("        background-color: black;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /*전체를 감싸는 영역*/\r\n");
      out.write("    .container {\r\n");
      out.write("        background-color: #313131;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("        margin : auto;\r\n");
      out.write("        width : 1900px;\r\n");
      out.write("        max-width: 1900px;\r\n");
      out.write("        padding : 20px;\r\n");
      out.write("        margin-bottom : 30px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 이벤트 제목, 이벤트 기간 */\r\n");
      out.write("    .menu-area {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: space-between;\r\n");
      out.write("        background-color: #E4E0E1;\r\n");
      out.write("        border-radius: 4px;\r\n");
      out.write("        height : 50px;\r\n");
      out.write("        margin-bottom: 15px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #event_title, #event_date {\r\n");
      out.write("        /*border: 1px solid red;*/\r\n");
      out.write("        color : #493628;\r\n");
      out.write("        font-size: 25px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        padding : 3px;\r\n");
      out.write("        padding-top : 6px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #event_title {\r\n");
      out.write("        margin-left: 10px;\r\n");
      out.write("    }\r\n");
      out.write("    #event_date {\r\n");
      out.write("        margin-right: 10px;\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /*내용부분*/\r\n");
      out.write("    .content-area {\r\n");
      out.write("        background-color: #F3F3F3;\r\n");
      out.write("        border-radius: 4px;\r\n");
      out.write("        /*overflow: auto;\r\n");
      out.write("        height : 1250px; */\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .content {\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        padding-top: 20px;\r\n");
      out.write("        margin : auto;\r\n");
      out.write("        /*border: 1px solid red; */\r\n");
      out.write("        width : 90%;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #event_img {\r\n");
      out.write("        display: block;\r\n");
      out.write("        margin : auto;\r\n");
      out.write("        width : 100%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /*목록버튼*/\r\n");
      out.write("    #listBtn {\r\n");
      out.write("        margin-top: 20px;\r\n");
      out.write("        text-align: right;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #listBtn>button, #updateBtn, #deleteBtn {\r\n");
      out.write("        height : 30px;\r\n");
      out.write("        width : 100px;\r\n");
      out.write("        color : #E4E0E1;\r\n");
      out.write("        background-color: #493628;\r\n");
      out.write("        border-radius: 4px;\r\n");
      out.write("        font-size: 15px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        border : none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #listBtn>button:hover, #updateBtn:hover, #deleteBtn:hover  {\r\n");
      out.write("        background-color : #AB886D;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /*댓글부분*/\r\n");
      out.write("    .reply-area {\r\n");
      out.write("        border-top: 2.5px solid #493628;\r\n");
      out.write("        margin: auto;\r\n");
      out.write("        padding : 10px;\r\n");
      out.write("        width : 90%;\r\n");
      out.write("        border-spacing: 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .reply {\r\n");
      out.write("        margin-top: 10px;\r\n");
      out.write("        width : 100%;\r\n");
      out.write("        border-collapse : collapse;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    tr {\r\n");
      out.write("        border : none;\r\n");
      out.write("        border-bottom: 2.5px solid #493628;\r\n");
      out.write("        height: 60px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #replySize {\r\n");
      out.write("        margin-left: 15px;\r\n");
      out.write("        font-size : 18px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        color : #493628;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /*댓글작성영역*/\r\n");
      out.write("    .replyRegister {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        gap : 5px;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("        padding : 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #input {\r\n");
      out.write("        width : 95%;\r\n");
      out.write("        height : 100px;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #registerBtn {\r\n");
      out.write("        width : 5%;\r\n");
      out.write("        height : 100px; \r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #input>#replyInput {\r\n");
      out.write("        border-radius: 4px;\r\n");
      out.write("        resize : none;\r\n");
      out.write("        background-color: #E4E0E1;\r\n");
      out.write("        width : 100%;\r\n");
      out.write("        height : 100%;\r\n");
      out.write("        padding : 10px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("        box-shadow: #E4E0E1;\r\n");
      out.write("        border : 2px solid #493628;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #registerBtn>#register {\r\n");
      out.write("        background-color: #493628;\r\n");
      out.write("        color : #E4E0E1;\r\n");
      out.write("        font-size: 18px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        width : 100%;\r\n");
      out.write("        height : 100%;\r\n");
      out.write("        border : none;\r\n");
      out.write("        border-radius: 4px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #registerBtn>#register:hover {\r\n");
      out.write("        background-color: #AB886D;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    /*댓글 목록조회*/\r\n");
      out.write("       #replyWriter {\r\n");
      out.write("           text-align: center;\r\n");
      out.write("           width : 10%;\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("       #replyDate {\r\n");
      out.write("           text-align: center;\r\n");
      out.write("           width : 20%;\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("       #replyContent {\r\n");
      out.write("           width : 60%;\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("       #buttons {\r\n");
      out.write("           width : 10%;\r\n");
      out.write("       }\r\n");
      out.write("       \r\n");
      out.write("       #modalLink>a {\r\n");
      out.write("           color : #493628;\r\n");
      out.write("           margin-left: 33px;\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("       /*댓글 수정*/\r\n");
      out.write("       .updateReply {\r\n");
      out.write("           /*border: 1px solid red;*/\r\n");
      out.write("           display: flex;\r\n");
      out.write("           justify-content: left;\r\n");
      out.write("           gap : 10px;\r\n");
      out.write("           box-sizing: border-box;\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("       #updateForm {\r\n");
      out.write("           /*border: 1px solid red;*/\r\n");
      out.write("           width : 80%;\r\n");
      out.write("           height : 50px;\r\n");
      out.write("           box-sizing: border-box;\r\n");
      out.write("           border-bottom: 5px;\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("       #updateReply {\r\n");
      out.write("           /*border: 1px solid red;*/\r\n");
      out.write("           resize: none;\r\n");
      out.write("           width : 100%;\r\n");
      out.write("           height: 100%;\r\n");
      out.write("           border: 2px solid #493628;\r\n");
      out.write("           background-color: #E4E0E1;\r\n");
      out.write("           border-radius: 4px;\r\n");
      out.write("           box-sizing: border-box;\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("       #updateBtn, #deleteBtn, #savedBtn, #cancelBtn {\r\n");
      out.write("           background-color: #493628;\r\n");
      out.write("           color : #E4E0E1;\r\n");
      out.write("           font-size : 15px;\r\n");
      out.write("           font-weight: bold;\r\n");
      out.write("           border-radius: 4px;\r\n");
      out.write("           border : none;\r\n");
      out.write("           height : 30px;\r\n");
      out.write("           width : 50px;\r\n");
      out.write("           margin-right: 5px;\r\n");
      out.write("           cursor: pointer;\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("       #updateBtn:hover, #deleteBtn:hover,\r\n");
      out.write("       #savedBtn:hover, #cancelBtn:hover {\r\n");
      out.write("           background-color: #AB886D;\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("       .pagination {\r\n");
      out.write("    margin: 20px 0;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pagination ul {\r\n");
      out.write("    list-style-type: none;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pagination li {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    margin: 0 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pagination a {\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    color: #493628;\r\n");
      out.write("    font-size : 15px;\r\n");
      out.write("    font-weight : bold;\r\n");
      out.write("    padding: 8px 12px;\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pagination a:hover {\r\n");
      out.write("   color: #AB886D;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pagination .active a {\r\n");
      out.write("    \r\n");
      out.write("    color: #AB886D;\r\n");
      out.write("   }\r\n");
      out.write("    \r\n");
      out.write("    /*응모버튼*/\r\n");
      out.write("    .apply {\r\n");
      out.write("    	box-sizing : border-box;\r\n");
      out.write("    	margin-top: 10px;\r\n");
      out.write("    	text-align : center;\r\n");
      out.write("        padding-bottom : 30px;\r\n");
      out.write("    	\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #applyBtn {\r\n");
      out.write("    	height : 70px;\r\n");
      out.write("    	width : 300px;\r\n");
      out.write("    	color : #E4E0E1;\r\n");
      out.write("    	background-color: #AB886D;\r\n");
      out.write("    	border-radius : 4px;\r\n");
      out.write("    	font-size : 40px;\r\n");
      out.write("    	font-weight : bold;\r\n");
      out.write("    	border : none;\r\n");
      out.write("    	\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #applyBtn:hover {\r\n");
      out.write("        background-color : #493628;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #disabledBtn {\r\n");
      out.write("    	height : 70px;\r\n");
      out.write("    	width : 500px;\r\n");
      out.write("    	color : #E4E0E1;\r\n");
      out.write("    	background-color : #AB886D;\r\n");
      out.write("    	border-radius : 4px;\r\n");
      out.write("    	font-size : 30px;\r\n");
      out.write("    	font-weight : bold;\r\n");
      out.write("    	border : none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!--전체를 감싸는 container-->\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("    \r\n");
      out.write("        <!--이벤트제목, 기간-->\r\n");
      out.write("        <div class=\"menu-area\">\r\n");
      out.write("            <div id=\"event_title\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.eventTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("            <div id=\"event_date\">기간&emsp;");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.startDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write('~');
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.endDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!--내용부분-->\r\n");
      out.write("        <div class=\"content-area\">\r\n");
      out.write("            <div class=\"content\">\r\n");
      out.write("            	");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.eventContent }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br><br><br>\r\n");
      out.write("            	");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                <form id=\"postForm\" action=\"\" method=\"get\" enctype=\"multipart/form-data\">\r\n");
      out.write("                	<input type=\"hidden\" name=\"eno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.eventNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                	");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                	\r\n");
      out.write("                </form>\r\n");
      out.write("                \r\n");
      out.write("                <div id=\"listBtn\">\r\n");
      out.write("                    <button onclick=\"history.back()\">목록으로</button>\r\n");
      out.write("\r\n");
      out.write("                    ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            <!-- 이벤트 타입에 따라 보여지는 화면이 다름 -->\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <!-- 댓글 관련 스크립트 -->\r\n");
      out.write("    <script>\r\n");
      out.write("    var loginUser = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';  // 로그인한 ID\r\n");
      out.write("\r\n");
      out.write("    $(function() {\r\n");
      out.write("        selectReplyList(1); // 페이지 첫 로딩시 댓글 목록 조회\r\n");
      out.write("        // setInterval(selectReplyList, 10000); // 10초마다 댓글 목록 갱신\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("	 // 댓글 작성자 가공 함수\r\n");
      out.write("	    function maskUsername(loginUser) {\r\n");
      out.write("	        if (loginUser.length <= 3) {\r\n");
      out.write("	            return loginUser[0] + '*'.repeat(loginUser.length - 1);\r\n");
      out.write("	        }\r\n");
      out.write("	        return loginUser.substring(0, 3) + '*'.repeat(loginUser.length - 3);\r\n");
      out.write("	    }\r\n");
      out.write("\r\n");
      out.write("	 // 댓글 목록 조회\r\n");
      out.write("	    function selectReplyList(cpage = 1) {\r\n");
      out.write("	        $.ajax({\r\n");
      out.write("	            url: \"rlist.ev\", // 댓글 목록 조회 API URL\r\n");
      out.write("	            type: \"get\",\r\n");
      out.write("	            data: { eno: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.eventNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(", cpage: cpage },\r\n");
      out.write("	            success: function(response) {\r\n");
      out.write("	                var resultStr = \"\";\r\n");
      out.write("	                // 댓글 목록 렌더링\r\n");
      out.write("	                if (response.list && Array.isArray(response.list)) {\r\n");
      out.write("	                    response.list.forEach(function(reply) {\r\n");
      out.write("	                        resultStr += \"<tr data-reply-no='\" + reply.replyNo + \"'>\";\r\n");
      out.write("	                        \r\n");
      out.write("	                     	// 댓글 작성자 마스킹 처리\r\n");
      out.write("	                        var maskedWriter = maskUsername(reply.replyWriter);\r\n");
      out.write("	                        resultStr += \"<td id='replyWriter'>\" + maskedWriter + \"</td>\";\r\n");
      out.write("	                        \r\n");
      out.write("	                        resultStr += \"<td id='replyContent'>\" + reply.replyContent + \"</td>\";\r\n");
      out.write("\r\n");
      out.write("	                        // 댓글 작성자와 로그인 유저가 같으면 수정 및 삭제 버튼 추가\r\n");
      out.write("	                        if (reply.replyWriter === loginUser) {\r\n");
      out.write("	                        	resultStr += \"<td id='buttons'>\"\r\n");
      out.write("	                                + \"<button id='updateBtn' class='edit-reply-btn' data-reply-no='\" + reply.replyNo + \"' onclick='editReply(\" + reply.replyNo + \")'>수정</button>\"\r\n");
      out.write("	                                + \"<button id='deleteBtn' onclick='deleteReply(\" + reply.replyNo + \")'>삭제</button>\"\r\n");
      out.write("	                                + \"<button id='savedBtn' style='display:none;' onclick='saveReply(\" + reply.replyNo + \")'>저장</button>\"\r\n");
      out.write("	                                + \"<button id='cancelBtn' style='display:none;' onclick='cancelEdit(\" + reply.replyNo + \")'>취소</button>\"\r\n");
      out.write("	                                + \"</td>\";\r\n");
      out.write("	                        } else if(loginUser === 'admin'){\r\n");
      out.write("	                        	resultStr += \"<td id='buttons'>\"\r\n");
      out.write("	                                + \"<button id='deleteBtn' onclick='deleteReply(\" + reply.replyNo + \")'>삭제</button>\";\r\n");
      out.write("	                        } else {\r\n");
      out.write("	                            resultStr += \"<td></td>\";\r\n");
      out.write("	                        }\r\n");
      out.write("\r\n");
      out.write("	                        resultStr += \"<td id='replyDate'>\" + reply.createDate + \"</td>\";\r\n");
      out.write("	                        resultStr += \"</tr>\";\r\n");
      out.write("	                    });\r\n");
      out.write("\r\n");
      out.write("	                    $(\".reply>tbody\").html(resultStr); // 댓글 내용 업데이트\r\n");
      out.write("	                    $(\"#rcount\").text(response.list.length); // 댓글 갯수 표시\r\n");
      out.write("	                    handlePagination(response.pi, cpage); // 페이징 처리\r\n");
      out.write("	                    \r\n");
      out.write("	                 	// 수정 버튼에 클릭 이벤트 리스너 등록\r\n");
      out.write("	                    $(\".edit-reply-btn\").click(function() {\r\n");
      out.write("	                        var replyNo = $(this).data(\"reply-no\");\r\n");
      out.write("	                        editReply(replyNo); // 클릭된 댓글에 대한 수정 함수 호출\r\n");
      out.write("	                    });\r\n");
      out.write("	                }\r\n");
      out.write("	            },\r\n");
      out.write("	            error: function() {\r\n");
      out.write("	                console.error(\"댓글 목록 조회 실패\");\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	    }\r\n");
      out.write("\r\n");
      out.write("	    // 댓글 작성 함수\r\n");
      out.write("	    function addReply() {\r\n");
      out.write("	    	let replyContent = $(\"#replyInput\").val();\r\n");
      out.write("	        \r\n");
      out.write("\r\n");
      out.write("	        if(replyContent.trim().length != 0) { \r\n");
      out.write("	            $.ajax({\r\n");
      out.write("	                url: \"rinsert.ev\", // 댓글 작성 API\r\n");
      out.write("	                type: \"post\",\r\n");
      out.write("	                contentType: \"application/json\",\r\n");
      out.write("	                data: JSON.stringify({\r\n");
      out.write("	                    replyContent: replyContent,\r\n");
      out.write("	                    replyWriter: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.loginUser.userNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("	                    refEno: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.eventNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("	                }),\r\n");
      out.write("	                success: function(response) {\r\n");
      out.write("	                    if(response.success) {\r\n");
      out.write("	                    	alert(response.message); // 댓글 작성 완료 표시\r\n");
      out.write("	                        selectReplyList(); // 댓글 목록 갱신\r\n");
      out.write("	                        $(\"#replyInput\").val(\"\"); // 입력창 비우기\r\n");
      out.write("	                    } else {\r\n");
      out.write("	                        alert(response.message);\r\n");
      out.write("	                    }\r\n");
      out.write("	                },\r\n");
      out.write("	                error: function() {\r\n");
      out.write("	                    alert(\"댓글 작성 오류\");\r\n");
      out.write("	                }\r\n");
      out.write("	            });\r\n");
      out.write("	        } else {\r\n");
      out.write("	            alert(\"댓글을 작성해주세요.\");\r\n");
      out.write("	        }\r\n");
      out.write("	    }\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write(" 	// 댓글 수정\r\n");
      out.write("    function editReply(replyNo) {\r\n");
      out.write("        // 해당 댓글에 대한 수정 로직 처리\r\n");
      out.write("        var replyRow = $(\"tr[data-reply-no='\" + replyNo + \"']\"); // 해당 댓글 행 찾기\r\n");
      out.write("        var replyContent = replyRow.find(\"#replyContent\").text();  // 현재 댓글 내용\r\n");
      out.write("\r\n");
      out.write("        // 내용 수정 입력창으로 바꾸기\r\n");
      out.write("        replyRow.find(\"#replyContent\").html(\"<textarea id='updateReply'>\" + replyContent + \"</textarea>\");\r\n");
      out.write("        replyRow.find(\"#updateBtn\").hide();  // 수정 버튼 숨기기\r\n");
      out.write("        replyRow.find(\"#deleteBtn\").hide();  // 삭제 버튼 숨기기\r\n");
      out.write("        replyRow.find(\"#savedBtn, #cancelBtn\").show();  // 저장, 취소 버튼 보이기\r\n");
      out.write("        //console.log(\"여긴 왜 안보여?\")\r\n");
      out.write("    }\r\n");
      out.write(" 	\r\n");
      out.write(" 	// 댓글 수정 처리 (저장 버튼 클릭 시)\r\n");
      out.write("    function saveReply(replyNo) {\r\n");
      out.write("        // 수정된 댓글 내용을 가져오기\r\n");
      out.write("        var updatedContent = $(\"#updateReply\").val(); // #updateReply가 textarea로 수정된 내용\r\n");
      out.write("\r\n");
      out.write("        // 서버로 AJAX 요청 보내기\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: \"rupdate.ev\", // 댓글 수정 API URL\r\n");
      out.write("            type: \"POST\", // POST 요청 방식\r\n");
      out.write("            contentType: \"application/json;charset=UTF-8\", // JSON 형식\r\n");
      out.write("            data: JSON.stringify({\r\n");
      out.write("                replyNo: replyNo,              // 댓글 번호 (수정할 댓글의 ID)\r\n");
      out.write("                replyContent: updatedContent,  // 수정된 댓글 내용\r\n");
      out.write("                replyWriter: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.loginUser.userNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"     // 댓글 작성자 (로그인한 사용자 정보)\r\n");
      out.write("            }),\r\n");
      out.write("            success: function(response) {\r\n");
      out.write("                if (response.status === \"success\") {\r\n");
      out.write("                    alert(\"댓글이 수정되었습니다.\");\r\n");
      out.write("                    selectReplyList(); // 댓글 목록을 갱신\r\n");
      out.write("                    cancelEdit(replyNo); // 취소하고 원래 상태로 복구\r\n");
      out.write("                } else {\r\n");
      out.write("                    alert(\"댓글 수정에 실패했습니다.\");\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            error: function() {\r\n");
      out.write("                alert(\"댓글 수정 중 오류가 발생했습니다.\");\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 저장 버튼 클릭 시\r\n");
      out.write("    $(\"#savedBtn\").click(function() {\r\n");
      out.write("        var replyNo = $(this).closest(\"tr\").data(\"replyNo\");  // 수정할 댓글의 번호\r\n");
      out.write("        var replyContent = $(this).closest(\"tr\").find(\"#updateReply\").val();  // 수정된 댓글 내용\r\n");
      out.write("        var replyWriter = $(this).closest(\"tr\").find(\"#replyWriter\").text();  // 댓글 작성자 정보\r\n");
      out.write("\r\n");
      out.write("        // 댓글 수정 요청\r\n");
      out.write("        updateReply(replyNo, replyContent, replyWriter);\r\n");
      out.write("\r\n");
      out.write("        // 수정 상태 비활성화\r\n");
      out.write("        $(this).closest(\"tr\").find(\"#updateReply\").attr(\"readonly\", \"readonly\");\r\n");
      out.write("        $(this).closest(\"tr\").find(\"#savedBtn, #cancelBtn\").hide();  // 저장, 취소 버튼 숨기기\r\n");
      out.write("        $(this).closest(\"tr\").find(\"#updateBtn, #deleteBtn\").show();  // 수정, 삭제 버튼 다시 보여주기\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write(" 	// 댓글 수정 상태 취소 (취소 버튼 클릭 시)\r\n");
      out.write("    function cancelEdit(replyNo) {\r\n");
      out.write("        var replyRow = $(\"tr[data-reply-no='\" + replyNo + \"']\");\r\n");
      out.write("\r\n");
      out.write("        // 댓글 원본 내용을 가져오기 (예: 원본 내용이 data-original-content 속성에 저장돼있다면)\r\n");
      out.write("        var originalContent = replyRow.data(\"originalContent\") || replyRow.find(\"#replyContent\").text();\r\n");
      out.write("\r\n");
      out.write("        // 댓글 내용을 원래대로 복구하기\r\n");
      out.write("        replyRow.find(\"#replyContent\").html(originalContent);\r\n");
      out.write("\r\n");
      out.write("        // 수정/삭제 버튼 보이기\r\n");
      out.write("        replyRow.find(\"#updateBtn\").show();\r\n");
      out.write("        replyRow.find(\"#deleteBtn\").show();\r\n");
      out.write("\r\n");
      out.write("        // 저장/취소 버튼 숨기기\r\n");
      out.write("        replyRow.find(\"#savedBtn, #cancelBtn\").hide();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 댓글 수정 요청 함수\r\n");
      out.write("    function updateReply(replyNo, replyContent, replyWriter) {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: \"rupdate.ev\",   // 댓글 수정 요청 URL (컨트롤러에서 처리할 URL)\r\n");
      out.write("            type: \"POST\",        // POST 방식\r\n");
      out.write("            contentType: \"application/json;charset=UTF-8\", // JSON 형식으로 전송\r\n");
      out.write("            data: JSON.stringify({\r\n");
      out.write("                replyNo: replyNo,           // 댓글 번호\r\n");
      out.write("                replyContent: replyContent, // 수정된 댓글 내용\r\n");
      out.write("                replyWriter: replyWriter    // 댓글 작성자 (작성자 ID 등)\r\n");
      out.write("            }),\r\n");
      out.write("            success: function(response) {\r\n");
      out.write("                if (response.status === \"success\") {\r\n");
      out.write("                    alert(response.message);  // 성공 메시지 표시\r\n");
      out.write("                    // 댓글 목록 새로고침 또는 수정된 댓글 반영\r\n");
      out.write("                    selectReplyList();  // 댓글 목록을 다시 로드하는 함수 호출\r\n");
      out.write("                } else {\r\n");
      out.write("                    alert(response.message);  // 실패 메시지 표시\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            error: function() {\r\n");
      out.write("                alert(\"댓글 수정 오류\");  // 오류 처리\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 댓글 삭제\r\n");
      out.write("    function deleteReply(replyNo) {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: \"rdelete.ev\", \r\n");
      out.write("            type: \"POST\",\r\n");
      out.write("            data: { replyNo: replyNo },\r\n");
      out.write("            success: function(response) {\r\n");
      out.write("                if (response === \"success\") {\r\n");
      out.write("                    alert(\"댓글이 삭제되었습니다.\");\r\n");
      out.write("                    selectReplyList(); // 댓글 목록 갱신\r\n");
      out.write("                } else {\r\n");
      out.write("                    alert(\"댓글 삭제 실패\");\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            error: function() {\r\n");
      out.write("                alert(\"댓글 삭제 오류\");\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function handlePagination(pi, currentPage) {\r\n");
      out.write("        var pageList = $(\"#pagination\");\r\n");
      out.write("        pageList.empty(); // 기존 페이지 버튼을 비웁니다.\r\n");
      out.write("        \r\n");
      out.write("        // 이전 페이지 버튼\r\n");
      out.write("        if (pi.startPage > 1) {\r\n");
      out.write("            pageList.append(\"<li><a href='#' class='page-btn' data-page='1'><<</a></li>\");\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // 이전 페이지 버튼\r\n");
      out.write("        if (currentPage > 1) {\r\n");
      out.write("            pageList.append(\"<li><a href='#' class='page-btn' data-page='\" + (currentPage - 1) + \"'><<</a></li>\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 페이지 번호들\r\n");
      out.write("        for (var i = pi.startPage; i <= pi.endPage; i++) {\r\n");
      out.write("            var activeClass = (i === currentPage) ? \"active\" : \"\";\r\n");
      out.write("            pageList.append(\"<li><a href='#' class='page-btn \" + activeClass + \"' data-page='\" + i + \"'>\" + i + \"</a></li>\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 다음 페이지 버튼\r\n");
      out.write("        if (currentPage < pi.maxPage) {\r\n");
      out.write("            pageList.append(\"<li><a href='#' class='page-btn' data-page='\" + (currentPage + 1) + \"'>>></a></li>\");\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // 마지막 페이지 버튼\r\n");
      out.write("        if (pi.endPage < pi.maxPage) {\r\n");
      out.write("            pageList.append(\"<li><a href='#' class='page-btn' data-page='\" + pi.maxPage + \"'>>></a></li>\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 페이징 버튼 클릭 시 페이지 변경\r\n");
      out.write("        $(\".page-btn\").on(\"click\", function(event) {\r\n");
      out.write("            var page = $(this).data(\"page\");\r\n");
      out.write("            selectReplyList(page); // 댓글 목록을 페이지에 맞게 다시 호출\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write(" 	// 응모버튼 스크립트 \r\n");
      out.write("    $('#applyBtn').click(function (e) {\r\n");
      out.write("        e.preventDefault(); // 기본 동작 방지\r\n");
      out.write("\r\n");
      out.write("        // hidden 필드의 값 가져오기\r\n");
      out.write("        const refEno = $('input[name=\"refEno\"]').val();\r\n");
      out.write("        const userNo = $('input[name=\"userNo\"]').val();\r\n");
      out.write("        const applicationDate = $('input[name=\"applicationDate\"]').val();\r\n");
      out.write("        const drawingStatus = $('input[name=\"drawingStatus\"]').val();\r\n");
      out.write("\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: 'POST',\r\n");
      out.write("            url: 'apply.ev',\r\n");
      out.write("            contentType: 'application/json; charset=UTF-8',\r\n");
      out.write("            data: JSON.stringify({ \r\n");
      out.write("                refEno: refEno, \r\n");
      out.write("                userNo: userNo, \r\n");
      out.write("                applicationDate: applicationDate, \r\n");
      out.write("                drawingStatus: drawingStatus\r\n");
      out.write("            }),\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            success: function (response) {\r\n");
      out.write("                if (response.success) {\r\n");
      out.write("                    alert(\"응모가 완료되었습니다!\");\r\n");
      out.write("                } else {\r\n");
      out.write("                    alert(response.message);\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            error: function (error) {\r\n");
      out.write("                console.error('Error:', error);\r\n");
      out.write("                alert('응모 처리 중 오류가 발생했습니다.');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write(" 	\r\n");
      out.write(" 	// 이벤트 종료일에 따라 댓글창, 응모버튼 비활성화\r\n");
      out.write("    $(document).ready(function () {\r\n");
      out.write("        // 종료일 값을 가져오기\r\n");
      out.write("        var eventEndDateStr = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${e.endDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; // 서버에서 전달된 종료일\r\n");
      out.write("        // console.log(\"Original Event End Date String:\", eventEndDateStr);\r\n");
      out.write("\r\n");
      out.write("        // 문자열을 Date 객체로 변환 (yyyy-MM-dd 형식 가정)\r\n");
      out.write("        var eventEndDate = new Date(eventEndDateStr);\r\n");
      out.write("        // console.log(\"Parsed Event End Date:\", eventEndDate);\r\n");
      out.write("\r\n");
      out.write("        // 자정 기준으로 설정 (종료일 다음날 00:00:00)\r\n");
      out.write("        eventEndDate.setDate(eventEndDate.getDate() + 1); // 종료일 다음날로 이동\r\n");
      out.write("        eventEndDate.setHours(0, 0, 0, 0); // 자정 시점으로 설정\r\n");
      out.write("        // console.log(\"Adjusted Event End Date:\", eventEndDate);\r\n");
      out.write("\r\n");
      out.write("        // 현재 시간과 비교\r\n");
      out.write("        var currentDate = new Date();\r\n");
      out.write("        // console.log(\"Current Date:\", currentDate);\r\n");
      out.write("\r\n");
      out.write("        if (currentDate >= eventEndDate) {\r\n");
      out.write("            alert(\"이미 종료된 이벤트입니다.\");\r\n");
      out.write("            $(\"#applyBtn\").$(\"#replyInput\").prop(\"disabled\", true); // 버튼 비활성화\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write(" 	\r\n");
      out.write("    function postFormSubmit(num) {\r\n");
      out.write("        console.log(\"num:\", num);\r\n");
      out.write("\r\n");
      out.write("        if (num == 1) {\r\n");
      out.write("            // 수정 요청: GET 방식으로\r\n");
      out.write("            $(\"#postForm\").attr(\"action\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/updateForm.ev\")\r\n");
      out.write("                          .attr(\"method\", \"get\") // method를 GET으로 설정\r\n");
      out.write("                          .submit();\r\n");
      out.write("        } else {\r\n");
      out.write("            // 삭제 요청: POST 방식으로\r\n");
      out.write("            $(\"#postForm\").attr(\"action\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/delete.ev\")\r\n");
      out.write("                          .attr(\"method\", \"post\") // method를 POST로 설정\r\n");
      out.write("                          .submit();\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write(" \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/event/eventDetailView.jsp(342,13) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("file");
      // /WEB-INF/views/event/eventDetailView.jsp(342,13) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/event/eventDetailView.jsp(342,13) '${requestScope.list}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${requestScope.list}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                	<img id=\"event_img\" src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.changeName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" alt=\"상세이미지\">\r\n");
            out.write("                ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/event/eventDetailView.jsp(348,17) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("file");
      // /WEB-INF/views/event/eventDetailView.jsp(348,17) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/event/eventDetailView.jsp(348,17) '${list}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${list}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("				        <input type=\"hidden\" name=\"changeName\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.changeName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("				    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/event/eventDetailView.jsp(357,20) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userNo eq 1 }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	                    <!-- <button id=\"updateBtn\" onclick=\"postFormSubmit(1);\">수정</button>-->\r\n");
          out.write("	                    <button id=\"deleteBtn\" onclick=\"postFormSubmit(2);\">삭제</button>\r\n");
          out.write("                    ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            	\r\n");
          out.write("            	");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("            	");
          if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("            	");
          if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/event/eventDetailView.jsp(370,13) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.eventType == 1}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            	   <!--댓글부분-->\r\n");
          out.write("		            <div class=\"reply-area\">\r\n");
          out.write("		                <div id=\"replySize\"><b style=\"color : #AB886D;\" id=\"rcount\">0</b>개의 댓글이 있습니다.</div>\r\n");
          out.write("		                <table class=\"reply\">\r\n");
          out.write("		                    <thead>\r\n");
          out.write("		                        <tr>\r\n");
          out.write("		                            <td colspan=\"4\" style=\"height : 50px\">\r\n");
          out.write("		                                <div class=\"replyRegister\">\r\n");
          out.write("		                                	");
          if (_jspx_meth_c_005fchoose_005f1(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("		                                    \r\n");
          out.write("		                                </div>\r\n");
          out.write("		                                \r\n");
          out.write("		                            </td>\r\n");
          out.write("		\r\n");
          out.write("		                        </tr>\r\n");
          out.write("		                    </thead>\r\n");
          out.write("		\r\n");
          out.write("		                    <tbody>\r\n");
          out.write("		                       <tr>\r\n");
          out.write("	                            \r\n");
          out.write("		                        </tr>\r\n");
          out.write("		                    </tbody>\r\n");
          out.write("		                </table>\r\n");
          out.write("		                \r\n");
          out.write("		                <!-- 댓글 페이징 영역 -->\r\n");
          out.write("		                <div class=\"pagingArea\">\r\n");
          out.write("		                    <ul class=\"pagination\" id=\"pagination\">\r\n");
          out.write("		                        <!-- ajax로 페이징처리 -->\r\n");
          out.write("		                    </ul>\r\n");
          out.write("		                </div>\r\n");
          out.write("		            </div>\r\n");
          out.write("            	");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f1_reused = false;
    try {
      _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
      if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("	\r\n");
          out.write("			                                	");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			                                    ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("		                                    ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
      _jspx_th_c_005fchoose_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /WEB-INF/views/event/eventDetailView.jsp(380,36) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ empty sessionScope.loginUser}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			                                	<!-- 로그인하지 않은 경우 댓글 입력 -->\r\n");
          out.write("				                                    <div id=\"input\">\r\n");
          out.write("				                                        <textarea id=\"replyInput\" placeholder=\"운영원칙에 어긋나는 게시물로 판단되는 글은 제제 조치를 받을 수 있습니다.\" readonly></textarea>\r\n");
          out.write("				                                    </div>\r\n");
          out.write("				                                    <div id=\"registerBtn\">\r\n");
          out.write("				                                        <button id=\"register\">등록</button>\r\n");
          out.write("				                                    </div>\r\n");
          out.write("			                                    ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			                                     <!-- 로그인한 경우 댓글 입력 -->\r\n");
          out.write("			                                    	<div id=\"input\">\r\n");
          out.write("				                                        <textarea id=\"replyInput\" placeholder=\"운영원칙에 어긋나는 게시물로 판단되는 글은 제제 조치를 받을 수 있습니다.\" ></textarea>\r\n");
          out.write("				                                    </div>\r\n");
          out.write("				                                    <div id=\"registerBtn\">\r\n");
          out.write("				                                        <button id=\"register\" onclick=\"addReply();\">등록</button>\r\n");
          out.write("				                                    </div>\r\n");
          out.write("			                                    ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/event/eventDetailView.jsp(422,13) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.eventType == 2 }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            		<form id=\"participateForm\">\r\n");
          out.write("            			<input type=\"hidden\" name=\"applicantNo\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.a.applicantNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" />\r\n");
          out.write("            			<input type=\"hidden\" name=\"refEno\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.eventNo != null ? requestScope.e.eventNo : 0  }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"; />\r\n");
          out.write("            			<input type=\"hidden\" name=\"userNo\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userNo != null ? sessionScope.loginUser.userNo : 0  }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"; />\r\n");
          out.write("            			<input type=\"hidden\" name=\"applicationDate\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.a.applicationDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" />\r\n");
          out.write("            			<input type=\"hidden\" name=\"drawingStatus\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.a.drawingStatus }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" />\r\n");
          out.write("            			<input type=\"hidden\" id=\"endDate\" name=\"endDate\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.endDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" />\r\n");
          out.write("	            		<div class=\"apply\">\r\n");
          out.write("	            			");
          if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fwhen_005f2, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("	            			\r\n");
          out.write("	            			");
          if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fwhen_005f2, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("	            			\r\n");
          out.write("	            		</div>\r\n");
          out.write("            		</form>\r\n");
          out.write("            	");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f2);
      // /WEB-INF/views/event/eventDetailView.jsp(431,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser != null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	            				<!-- 로그인 유저가 있을 경우 응모 가능 -->\r\n");
          out.write("								<button type=\"submit\" id=\"applyBtn\">응모하기</button>\r\n");
          out.write("	            			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f2);
      // /WEB-INF/views/event/eventDetailView.jsp(436,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser == null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	            				<!-- 로그인하지 않은 경우 메세지 표시 또는 비활성화-->\r\n");
          out.write("								<button id=\"disabledBtn\" disabled>로그인 후 응모가능합니다.</button>\r\n");
          out.write("	            			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise_005fnobody.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f1_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
      if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise_005fnobody.reuse(_jspx_th_c_005fotherwise_005f1);
      _jspx_th_c_005fotherwise_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f1_reused);
    }
    return false;
  }
}
