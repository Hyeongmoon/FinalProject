/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-12-29 09:04:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin.event;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class adminEventEnrollForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>관리자용 이벤트 글작성</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/admin.css\" />\r\n");
      out.write("<style>\r\n");
      out.write("body{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 100%;\r\n");
      out.write("    background-color: #151515;\r\n");
      out.write("    overflow: hidden;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#admin_content{\r\n");
      out.write("\r\n");
      out.write("    width: 1850px;\r\n");
      out.write("    height: 900px;\r\n");
      out.write("    margin: auto;\r\n");
      out.write("    margin-top: 30px;\r\n");
      out.write("    background-color: #313131;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    box-shadow: 4px 4px#151515 ;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("#navbar{\r\n");
      out.write("    width: 20%;\r\n");
      out.write("    height: 100%;\r\n");
      out.write("    /*background-color: #4b8492;*/\r\n");
      out.write("    float: left;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("#logo{\r\n");
      out.write("    position: relative;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 15%;\r\n");
      out.write("    /*background-color: aliceblue;*/\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#logo>img{\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    right:  50%; \r\n");
      out.write("    transform: translate(-50%, 80%);\r\n");
      out.write("    width: 60%;\r\n");
      out.write("    height: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#nav {\r\n");
      out.write("    margin: auto;\r\n");
      out.write("    width: 90%;\r\n");
      out.write("    height: 80%;\r\n");
      out.write("    background-color: #151515;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#nav > ul {\r\n");
      out.write("    list-style-type: none;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 80%;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#nav > ul > li {\r\n");
      out.write("    margin: auto;\r\n");
      out.write("    gap: 2px;\r\n");
      out.write("    width: 90%;\r\n");
      out.write("    height: 20%;\r\n");
      out.write("    /*background-color: aliceblue;*/\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    transition: background-color 0.3s; \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#nav > ul > li:hover {\r\n");
      out.write("    background-color: #d6c0b3; \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#nav > ul > li.selected {\r\n");
      out.write("    background-color: #ab886d; \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#nav > ul > li > a {\r\n");
      out.write("    color: #313131;\r\n");
      out.write("    font-size: 30px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("#admin_right{\r\n");
      out.write("\r\n");
      out.write("    width: 80%;\r\n");
      out.write("    height: 100%;\r\n");
      out.write("    /*background-color: rgb(100, 76, 47);*/\r\n");
      out.write("    float: left;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#admin_title{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 15%;\r\n");
      out.write("    /*background-color: #4b8492;*/\r\n");
      out.write("    position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#admin_title_content{\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    right:  50%; \r\n");
      out.write("    transform: translate(-50%, 40%);\r\n");
      out.write("    width: 98%;\r\n");
      out.write("    height: 60%;\r\n");
      out.write("    background-color: #E4E0E1;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#admin_detail{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 85%;\r\n");
      out.write("    /*background-color: aquamarine;*/\r\n");
      out.write("    position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#admin_page{\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    right:  50%; \r\n");
      out.write("    transform: translate(-50%, 0%);\r\n");
      out.write("    width: 98%;\r\n");
      out.write("    height: 95%;\r\n");
      out.write("    background-color: #E4E0E1;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/*여기 샘플코드*/\r\n");
      out.write("#text_sample{\r\n");
      out.write("    width: 100px;\r\n");
      out.write("    height: 30px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    box-shadow: 3px 3px 3px rgb(0, 0, 0, 0.2);\r\n");
      out.write("    outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#button_sample {\r\n");
      out.write("    width: 100px;\r\n");
      out.write("    height: 40px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    color: #D2CECF;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("    font-weight: bolder;\r\n");
      out.write("    box-shadow: 3px 3px 3px rgb(0, 0, 0, 0.2);\r\n");
      out.write("    background-color: #493628;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#button_sample:hover {\r\n");
      out.write("    transform: scale(1.1em);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#button_sample:active {\r\n");
      out.write("    background-color: #AB886D;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*내거 영역*/\r\n");
      out.write("    #admin_title_content {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: space-between;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #boardTitle {\r\n");
      out.write("        font-size: 30px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        color : #493628;\r\n");
      out.write("        padding : 20px; \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #sub {\r\n");
      out.write("        font-size: 20px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        color : #493628;\r\n");
      out.write("        padding : 25px; \r\n");
      out.write("        margin-top: 5px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .title_date_count {\r\n");
      out.write("        border-bottom : 4px solid #493628;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: left;\r\n");
      out.write("        gap : 32px;\r\n");
      out.write("        /*border : 1px solid blue;*/\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .contentArea {\r\n");
      out.write("        border-bottom : 4px solid #493628;\r\n");
      out.write("        margin-left: 0px;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        display : flex;\r\n");
      out.write("        align-items: left;\r\n");
      out.write("        gap : 3px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .content {\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .title, .startDate, .endDate, .content, #thumbnail {\r\n");
      out.write("        font-size: 24px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        color : #493628;\r\n");
      out.write("        padding-left : 5px;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: left;\r\n");
      out.write("        gap : 10px;\r\n");
      out.write("        margin-left: 5px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #title, #startDate, #endDate, #content {\r\n");
      out.write("        height: 40px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        box-shadow: 3px 3px 3px rgb(0, 0, 0, 0.2);\r\n");
      out.write("        outline: none;\r\n");
      out.write("        margin-bottom : 10px;\r\n");
      out.write("        background-color: white;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #content {\r\n");
      out.write("        width : 1300px;\r\n");
      out.write("        height : 320px;\r\n");
      out.write("        resize: none;\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #title {\r\n");
      out.write("        width : 450px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #startDate {\r\n");
      out.write("        width : 200px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #endDate {\r\n");
      out.write("        width : 200px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /*사진첨부영역*/\r\n");
      out.write("    .fileArea {\r\n");
      out.write("        border-bottom : 4px solid #493628;\r\n");
      out.write("        margin-left: 0px;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        display : flex;\r\n");
      out.write("        align-items: left;\r\n");
      out.write("        gap : 15px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #file {\r\n");
      out.write("        padding: 10px 0 10px 10px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    #contentImg1, #contentImg2, #contentImg3, #contentImg4 {\r\n");
      out.write("            height: 170px;\r\n");
      out.write("            width : 170px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            box-shadow: 3px 3px 3px rgb(0, 0, 0, 0.2);\r\n");
      out.write("            outline: none;\r\n");
      out.write("            margin-bottom : 5px;\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            cursor : pointer\r\n");
      out.write("            \r\n");
      out.write("     }\r\n");
      out.write("	\r\n");
      out.write("	/*\r\n");
      out.write("    .thumbnailArea>input {\r\n");
      out.write("        height: 170px;\r\n");
      out.write("        width : 170px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        box-shadow: 3px 3px 3px rgb(0, 0, 0, 0.2);\r\n");
      out.write("        outline: none;\r\n");
      out.write("        margin-bottom : 5px;\r\n");
      out.write("        background-color: white;\r\n");
      out.write("    } */\r\n");
      out.write("\r\n");
      out.write("    /*이벤트 종류, 종료여부, 버튼*/\r\n");
      out.write("    .type-status-btn {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: right;\r\n");
      out.write("        gap : 25px;\r\n");
      out.write("        padding : 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /*이벤트 종류*/\r\n");
      out.write("    .type, .status {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: right;\r\n");
      out.write("        gap : 25px;\r\n");
      out.write("        font-size: 20px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        color: #493628;\r\n");
      out.write("        padding : 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #type-method, #eventStatus {\r\n");
      out.write("        font-size: 17px;\r\n");
      out.write("        padding : 3px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #type-method>input, #eventStatus>input {\r\n");
      out.write("        width: 12px;\r\n");
      out.write("        height : 12px;\r\n");
      out.write("        cursor : pointer;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 브라우저 기본 스타일 초기화 */\r\n");
      out.write("	input[type=\"file\"] {\r\n");
      out.write("	    display : none;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("    /*버튼*/\r\n");
      out.write("    .btn {\r\n");
      out.write("        text-align: right;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("        padding : 5px;\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button {\r\n");
      out.write("        width: 100px;\r\n");
      out.write("        height: 40px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        color: #D2CECF;\r\n");
      out.write("        font-size: 20px;\r\n");
      out.write("        font-weight: bolder;\r\n");
      out.write("        box-shadow: 3px 3px 3px rgb(0, 0, 0, 0.2);\r\n");
      out.write("        background-color: #493628;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button:hover {\r\n");
      out.write("        transform: scale(1.1em); !important;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button:active {\r\n");
      out.write("        background-color: #AB886D; !important;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id = \"admin_content\">\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../common/adminHeader.jsp", out, false);
      out.write("   \r\n");
      out.write("        <div id = \"admin_right\">\r\n");
      out.write("            <div id =\"admin_title\">\r\n");
      out.write("\r\n");
      out.write("                <!-- 혜원 - 관리자 이벤트 상세조회 -->\r\n");
      out.write("                <div id = \"admin_title_content\">\r\n");
      out.write("                    <div id=\"boardTitle\">이벤트 글 작성</div>\r\n");
      out.write("                    <div id=\"sub\">체크(<b style=\"color : red;\">*</b>)된 항목은 필수 입력사항입니다.</div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div id = \"admin_detail\">\r\n");
      out.write("                \r\n");
      out.write("                <!-- 혜원 목록테이블-->\r\n");
      out.write("                <div id =\"admin_page\">\r\n");
      out.write("                    <!--이건 버튼 이랑 text 샘플\r\n");
      out.write("                    <input type =\"text\" id =\"text_sample\">\r\n");
      out.write("                    <input type=\"button\" id =\"button_sample\" value=\"샘플\">-->\r\n");
      out.write("                    \r\n");
      out.write("                    \r\n");
      out.write("                    <form id=\"enrollForm\" action=\"insert.ev\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("                    	<!-- 쿠폰 정보 넘기기 -->\r\n");
      out.write("                    	<input type=\"hidden\" id=\"couponNo\" name=\"couponNo\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${couponNo != null ? couponNo : 0}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    	<input type=\"hidden\" id=\"refEno\" name=\"refEno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eventNo != null ? eventNo : 0}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    	<input type=\"hidden\" id=\"couponName\" name=\"coupoName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.eventTitle }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    	<input type=\"hidden\" id=\"couponLevel\" name=\"couponLevel\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.eventType }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    	<input type=\"hidden\" id=\"couponExpDate\" name=\"couponExpDate\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${couponExpDate != null ? couponExpDate.toString('yyyy-MM-dd') : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    	<input type=\"hidden\" id=\"couponStatus\" name=\"couponStatus\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.c.couponStatus }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    \r\n");
      out.write("                        <!--제목, 작성일, 조회수-->\r\n");
      out.write("                        <div class=\"title_date_count\">\r\n");
      out.write("                            <div class=\"title\">\r\n");
      out.write("                                <label for=\"title\">제목<b style=\"color : red;\">*</b></label><input type=\"text\" id=\"title\" name=\"eventTitle\"></input>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"startDate\">\r\n");
      out.write("                                <label for=\"startDate\">이벤트 시작일<b style=\"color : red;\">*</b></label> <input type=\"date\" id=\"startDate\" min=\"\" name=\"startDate\"></input>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"endDate\">\r\n");
      out.write("                                <label for=\"endDate\">이벤트 종료일<b style=\"color : red;\">*</b></label><input type=\"date\" id=\"endDate\" min=\"\" name=\"endDate\"></input>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        \r\n");
      out.write("                        <!-- 날짜 관련 스크립트 -->\r\n");
      out.write("                        <script>\r\n");
      out.write("						    document.addEventListener(\"DOMContentLoaded\", function() {\r\n");
      out.write("						        const startDateInput = document.getElementById(\"startDate\");\r\n");
      out.write("						        const endDateInput = document.getElementById(\"endDate\");\r\n");
      out.write("						\r\n");
      out.write("						        // 오늘 날짜 (yyyy-mm-dd 형식) 계산\r\n");
      out.write("						        const today = new Date().toISOString().split('T')[0];\r\n");
      out.write("						\r\n");
      out.write("						        // 시작일을 오늘 날짜 이상으로 제한\r\n");
      out.write("						        startDateInput.setAttribute(\"min\", today);\r\n");
      out.write("						\r\n");
      out.write("						        // 종료일의 최소 날짜를 오늘 날짜로 설정\r\n");
      out.write("						        endDateInput.setAttribute(\"min\", today);\r\n");
      out.write("						\r\n");
      out.write("						        // 시작일이 변경될 때, 종료일의 min 속성도 시작일 이후로 업데이트\r\n");
      out.write("						        startDateInput.addEventListener(\"change\", function() {\r\n");
      out.write("						            const startDate = startDateInput.value;\r\n");
      out.write("						            endDateInput.setAttribute(\"min\", startDate); // 종료일은 시작일 이후로만 선택 가능\r\n");
      out.write("						        });\r\n");
      out.write("						    });\r\n");
      out.write("						</script>\r\n");
      out.write("\r\n");
      out.write("                        <!-- 내용 -->\r\n");
      out.write("                        <div class=\"contentArea\">\r\n");
      out.write("                            <label for=\"content\" class=\"content\">내용<b style=\"color : red;\">*</b></label>\r\n");
      out.write("                            <textarea id=\"content\" name=\"eventContent\"></textarea>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <!-- 사진첨부 -->\r\n");
      out.write("                        <div class=\"fileArea\">\r\n");
      out.write("                            <label for=\"fileInput\" id=\"file\">사진<br>첨부<b style=\"color : red;\">*</b></label>\r\n");
      out.write("                            \r\n");
      out.write("                            <img id=\"contentImg1\" src=\"#\" alt=\"Preview Image 1\" data-target=\"file1\" />\r\n");
      out.write("							<img id=\"contentImg2\" src=\"#\" alt=\"Preview Image 2\" data-target=\"file2\" />\r\n");
      out.write("							<img id=\"contentImg3\" src=\"#\" alt=\"Preview Image 3\" data-target=\"file3\" />\r\n");
      out.write("							<img id=\"contentImg4\" src=\"#\" alt=\"Preview Image 4\" data-target=\"file4\" />\r\n");
      out.write("                            \r\n");
      out.write("                            <!-- 파일 입력받는 요소  -->\r\n");
      out.write("                            <div id=\"file-area\" style=\"display : none;\">\r\n");
      out.write("	                            <!-- 썸네일은 필수입력사항으로 지정 -->\r\n");
      out.write("	                            <input type=\"file\" id=\"file1\" name=\"upfiles\" data-index=\"1\" onchange=\"loadImg(this);\" multiple required>\r\n");
      out.write("								<input type=\"file\" id=\"file2\" name=\"upfiles\" data-index=\"2\" onchange=\"loadImg(this);\" multiple>\r\n");
      out.write("								<input type=\"file\" id=\"file3\" name=\"upfiles\" data-index=\"3\" onchange=\"loadImg(this);\" multiple>\r\n");
      out.write("								<input type=\"file\" id=\"file4\" name=\"upfiles\" data-index=\"4\" onchange=\"loadImg(this);\" multiple>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("                            \r\n");
      out.write("                            <div class=\"comment\" style=\"padding : 10px;\">\r\n");
      out.write("                                <!--button type=\"button\" class=\"btn\" id=\"fileButton\" style=\"width : 140px; text-align: center;\">파일첨부</button>\r\n");
      out.write("                                <!--input type=\"file\" id=\"fileInput\" style=\"display:none;\"> -->\r\n");
      out.write("                                <!-- 썸네일은 필수입력사항으로 지정 \r\n");
      out.write("	                            <input type=\"file\" id=\"file1\" name=\"upfiles\" onchange=\"loadImg(this, 1);\" multiple style=\"display:none;\">\r\n");
      out.write("	                            \r\n");
      out.write("	                            <!-- 기본이미지 --\r\n");
      out.write("	                            <input type=\"file\" id=\"file2\" name=\"upfiles\" onchange=\"loadImg(this, 2);\" multiple style=\"display:none;\">\r\n");
      out.write("	                            <input type=\"file\" id=\"file3\" name=\"upfiles\" onchange=\"loadImg(this, 3);\" multiple style=\"display:none;\">\r\n");
      out.write("	                            <input type=\"file\" id=\"file4\" name=\"upfiles\" onchange=\"loadImg(this, 4);\" multiple style=\"display:none;\"> -->\r\n");
      out.write("                                \r\n");
      out.write("                                <div style=\"color : #493628; font-size: 16px; font-weight : bold; margin-top: 10px;\">\r\n");
      out.write("                                    * JPEG, PNG 형식의 10M 이하의 파일만 첨부 가능합니다.(최대 4개)<br><br>\r\n");
      out.write("                                    * 개인정보가 포함된 이미지 등록은 자제하여 주시기 바랍니다. \r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        \r\n");
      out.write("\r\n");
      out.write("                        <!--이벤트 종류 / 종료 여부 / 버튼-->\r\n");
      out.write("                        <div class=\"type-status-btn\">\r\n");
      out.write("                            <div class=\"type\">\r\n");
      out.write("                                <div style=\"margin-top: 2px;\">이벤트 참여 방법<b style=\"color : red;\">*</b></div>\r\n");
      out.write("                                <div id=\"type-method\">\r\n");
      out.write("                                    댓글<input type=\"radio\" name=\"eventType\" value=\"1\" required>\r\n");
      out.write("                                    응모버튼<input type=\"radio\" name=\"eventType\" value=\"2\" required>\r\n");
      out.write("                                    오프라인<input type=\"radio\" name=\"eventType\" value=\"3\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"status\">\r\n");
      out.write("                                <div style=\"margin-top: 2px;\">이벤트 종료 여부<b style=\"color : red;\">*</b></div>\r\n");
      out.write("                                <div id=\"eventStatus\">\r\n");
      out.write("                                    진행중인 이벤트<input type=\"radio\" name=\"eventStatus\" value=\"N\" required> <!-- N 으로 변경 -->\r\n");
      out.write("                                    종료된 이벤트<input type=\"radio\" name=\"eventStatus\" value=\"Y\" disabled>  <!-- Y 으로 변경 -->\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        \r\n");
      out.write("                            <!--등록, 취소 버튼-->\r\n");
      out.write("                            <div class=\"btn\">\r\n");
      out.write("                                <button id=\"cancle\" style=\"width : 100px; margin-right : 5px;\" onclick=\"history.back()\">취소</button>\r\n");
      out.write("                                <button type=\"submit\" id=\"submit\" style=\"width : 130px;\" onclick=\"setCouponData()\">등록</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                    </form>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script>\r\n");
      out.write("    document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("        const navItems = document.querySelectorAll(\"#nav > ul > li\");\r\n");
      out.write("    \r\n");
      out.write("        navItems.forEach(item => {\r\n");
      out.write("            item.addEventListener(\"click\", function () {\r\n");
      out.write("                // 모든 항목에서 selected 클래스 제거\r\n");
      out.write("                navItems.forEach(nav => nav.classList.remove(\"selected\"));\r\n");
      out.write("    \r\n");
      out.write("                // 클릭된 항목에 selected 클래스 추가\r\n");
      out.write("                this.classList.add(\"selected\");\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write(" 	// 이미지 첨부 스크립트 (중복 방지 적용)\r\n");
      out.write("    document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("        const images = document.querySelectorAll(\"img[data-target]\");\r\n");
      out.write("        const fileInputs = document.querySelectorAll('input[name=\"upfiles\"]');\r\n");
      out.write("\r\n");
      out.write("        // 이미지 클릭 시 파일 입력창 열기\r\n");
      out.write("        images.forEach((img) => {\r\n");
      out.write("            const boundClickEvent = img.getAttribute(\"data-bound-click\");\r\n");
      out.write("\r\n");
      out.write("            // 중복 클릭 방지를 위한 속성 확인\r\n");
      out.write("            if (!boundClickEvent) {\r\n");
      out.write("                img.addEventListener(\"click\", function () {\r\n");
      out.write("                    const fileInputId = img.getAttribute(\"data-target\");\r\n");
      out.write("                    const fileInput = document.getElementById(fileInputId);\r\n");
      out.write("                    if (fileInput) fileInput.click(); // 파일 입력창 열기\r\n");
      out.write("                });\r\n");
      out.write("                img.setAttribute(\"data-bound-click\", \"true\"); // 이벤트 등록 표기\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 파일 입력 변화 시 미리보기 업데이트\r\n");
      out.write("        fileInputs.forEach((input) => {\r\n");
      out.write("            const boundChangeEvent = input.getAttribute(\"data-bound-change\");\r\n");
      out.write("\r\n");
      out.write("            // 중복 체인지 방지를 위한 속성 확인\r\n");
      out.write("            if (!boundChangeEvent) {\r\n");
      out.write("                input.addEventListener(\"change\", function () {\r\n");
      out.write("                    loadImg(input); // 이미지 처리\r\n");
      out.write("                });\r\n");
      out.write("                input.setAttribute(\"data-bound-change\", \"true\"); // 이벤트 등록 표기\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 파일을 선택하면 미리보기 이미지에 표시\r\n");
      out.write("    function loadImg(input) {\r\n");
      out.write("        const index = input.dataset.index;\r\n");
      out.write("        const previewImg = document.getElementById(\"contentImg\" + index);\r\n");
      out.write("        const file = input.files[0];\r\n");
      out.write("        \r\n");
      out.write("        previewImg.addEventListener('click', () => {\r\n");
      out.write("            // console.log(`contentImg");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" clicked`);\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        if (!previewImg) {\r\n");
      out.write("            console.error(`Image element with id 'contentImg");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' not found.`);\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        if (file && file.type.startsWith(\"image/\")) {\r\n");
      out.write("            // console.log(\"Selected File:\", file); // 단일 로그\r\n");
      out.write("            const reader = new FileReader();\r\n");
      out.write("            reader.onload = function (e) {\r\n");
      out.write("                previewImg.src = e.target.result;\r\n");
      out.write("            };\r\n");
      out.write("            reader.readAsDataURL(file);\r\n");
      out.write("        } else {\r\n");
      out.write("            alert(\"이미지 파일만 선택 가능합니다.\");\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("            const fileInputs = document.querySelectorAll('input[name=\"upfiles\"]');\r\n");
      out.write("            fileInputs.forEach((input, index) => {\r\n");
      out.write("                input.addEventListener('change', function() {\r\n");
      out.write("                    loadImg(input, index + 1);  // 1부터 시작하도록 index + 1\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        // 쿠폰 데이터 넘기는 스크립트 \r\n");
      out.write("        function setCouponData() {\r\n");
      out.write("	    // 서버에서 받은 값을 JavaScript 변수에 할당\r\n");
      out.write("	    var couponNo = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.c.couponNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; // 쿠폰 번호 (서버에서 전달받은 값)\r\n");
      out.write("	    var refEno = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.eventNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; // 이벤트 번호 (서버에서 전달받은 값)\r\n");
      out.write("	    var couponName = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.e.eventTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; // 이벤트 제목 (쿠폰 이름)\r\n");
      out.write("	    var couponLevel = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.c.couponLevel}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; // 쿠폰 레벨 (서버에서 전달받은 값)\r\n");
      out.write("	    var couponExpDate = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.c.couponExpDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; // 만료일 (서버에서 전달받은 값)\r\n");
      out.write("	    var couponStatus = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.c.couponStatus}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; // 쿠폰 상태 (서버에서 전달받은 값)\r\n");
      out.write("	\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
      out.write("	    console.log(\"couponExpDate : \" + couponExpDate);\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
      out.write("	    // hidden input에 쿠폰 정보 설정\r\n");
      out.write("	    document.getElementById(\"couponNo\").value = couponNo;\r\n");
      out.write("	    document.getElementById(\"refEno\").value = refEno;\r\n");
      out.write("	    document.getElementById(\"couponName\").value = couponName;\r\n");
      out.write("	    document.getElementById(\"couponLevel\").value = couponLevel;\r\n");
      out.write("	    document.getElementById(\"couponExpDate\").value = couponExpDate;\r\n");
      out.write("	    document.getElementById(\"couponStatus\").value = couponStatus;\r\n");
      out.write("	\r\n");
      out.write("	    // 폼 제출\r\n");
      out.write("	    document.getElementById(\"eventForm\").submit(); // 폼 ID가 \"eventForm\"이면 이를 사용하여 제출\r\n");
      out.write("	}\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
