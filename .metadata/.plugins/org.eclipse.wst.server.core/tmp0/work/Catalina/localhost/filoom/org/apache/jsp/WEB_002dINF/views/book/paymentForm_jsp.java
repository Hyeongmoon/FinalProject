/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-02-20 09:21:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.book;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class paymentForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1734951689000L));
    _jspx_dependants.put("jar:file:/C:/00_FinalProject_Filoom/Filoom/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>paymentForm</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 나이스페이 연동 스크립트 구문 -->\r\n");
      out.write("<script src=\"https://pg-web.nicepay.co.kr/v3/common/js/nicepay-pgweb.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//결제창 최초 요청시 실행됩니다.\r\n");
      out.write("function nicepayStart(){\r\n");
      out.write("	goPay(document.payForm);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//[PC 결제창 전용]결제 최종 요청시 실행됩니다. <<'nicepaySubmit()' 이름 수정 불가능>>\r\n");
      out.write("function nicepaySubmit(){\r\n");
      out.write("	// beforeunload 이벤트 제거 \r\n");
      out.write("	$(window).off(\"beforeunload\");\r\n");
      out.write("	document.payForm.submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//[PC 결제창 전용]결제창 종료 함수 <<'nicepayClose()' 이름 수정 불가능>>\r\n");
      out.write("function nicepayClose(){\r\n");
      out.write("	alert(\"결제가 취소 되었습니다\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    /* 겹칠수도 있으니 나중에 지우기 */\r\n");
      out.write("     body{\r\n");
      out.write("        color: white;\r\n");
      out.write("        background-color: black;\r\n");
      out.write("    } \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    #outer{\r\n");
      out.write("        margin: auto;\r\n");
      out.write("        margin-top: 40px;\r\n");
      out.write("        margin-bottom: 40px;\r\n");
      out.write("        \r\n");
      out.write("        width:60%;\r\n");
      out.write("        background-color: #222222;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        padding-bottom: 3%;\r\n");
      out.write("        border:1px solid white; \r\n");
      out.write("        border-radius: 1%;\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 결제하기 메인 타이틀 글씨 */\r\n");
      out.write("    #mainTitle{\r\n");
      out.write("        font-weight: bolder;\r\n");
      out.write("        font-size:50px;\r\n");
      out.write("        padding-top: 2%;\r\n");
      out.write("        padding-bottom:2%;\r\n");
      out.write("    }\r\n");
      out.write("    #mainTitle>span{\r\n");
      out.write("    	font-size:10px;\r\n");
      out.write("    	color:gray;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    /* 타이틀 글씨 크기, 상하패딩 */\r\n");
      out.write("    .infoTitle{\r\n");
      out.write("        font-weight: bolder;\r\n");
      out.write("        font-size: 30px;\r\n");
      out.write("        padding-top:2%;\r\n");
      out.write("        padding-bottom:1%;\r\n");
      out.write("       \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    /* 왼쪽영역 */\r\n");
      out.write("\r\n");
      out.write("    /* 왼쪽 결제하기 영역 */\r\n");
      out.write("    #leftDiv{\r\n");
      out.write("        width: 60%;\r\n");
      out.write("        padding-left:3%;\r\n");
      out.write("        /* padding-right:3%; */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 왼쪽 영역에 padding left 주기 */\r\n");
      out.write("    #leftDiv>div>div{\r\n");
      out.write("        padding-left:2%;\r\n");
      out.write("        /* border: 1px solid red; */\r\n");
      out.write("    }\r\n");
      out.write("    #leftDiv>div>div>div{\r\n");
      out.write("        padding-left:2%;\r\n");
      out.write("        padding-bottom: 2%;\r\n");
      out.write("        padding-top:1%;\r\n");
      out.write("        /* border: 1px solid red; */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    #leftDiv{\r\n");
      out.write("        width : 100%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 예매정보영역 */\r\n");
      out.write("    #bookInfoArea{\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        border-top: 3px solid white;\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 이미지, 얘메정보 */\r\n");
      out.write("    #bookInfo{\r\n");
      out.write("        display:flex;    \r\n");
      out.write("        /* border:1px solid green; */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 영화이미지 */\r\n");
      out.write("    #imgDiv{\r\n");
      out.write("        /* border:1px solid yellow; */\r\n");
      out.write("        width:40%;\r\n");
      out.write("        padding-right: 3%;\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    /* 예매정보 */\r\n");
      out.write("    #movieInfo{\r\n");
      out.write("        /* border:1px solid yellow; */\r\n");
      out.write("        width:100%;\r\n");
      out.write("        /* margin:3%; */\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* 영화제목 */\r\n");
      out.write("    #movieInfo>div:nth-child(1){\r\n");
      out.write("        font-weight: bolder;\r\n");
      out.write("        font-size: 30px;\r\n");
      out.write("        border-bottom: 2px solid white;\r\n");
      out.write("        margin-right: 3%;\r\n");
      out.write("        padding-bottom: 2%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 예매정보 */\r\n");
      out.write("    #movieInfo>div>div{\r\n");
      out.write("        font-size: 20px;\r\n");
      out.write("        margin-top: 2%;\r\n");
      out.write("        margin-bottom: 2%;\r\n");
      out.write("        padding-left: 3%;\r\n");
      out.write("    }    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("    /*쿠폰 영역*/\r\n");
      out.write("    #couponArea{\r\n");
      out.write("        border-top: 3px solid white;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #couponArea > :first-child{\r\n");
      out.write("    	display:inline-block;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("   	#couponList>div{\r\n");
      out.write("   		display:inline-block;\r\n");
      out.write("   		vertical-align: top; /* 요소 상단 정렬 */\r\n");
      out.write("   	}\r\n");
      out.write("   	\r\n");
      out.write("   	#couponList>div{\r\n");
      out.write("   		border:1px solid white;\r\n");
      out.write("   		margin:3%;\r\n");
      out.write("   		width:25%;\r\n");
      out.write("   		height:100px;\r\n");
      out.write("   		text-align : center;\r\n");
      out.write("   	}\r\n");
      out.write("   	\r\n");
      out.write("   	#selectCouponBtn{\r\n");
      out.write("   		background-color: transparent;\r\n");
      out.write("   		color:white;\r\n");
      out.write("   		\r\n");
      out.write("   	}\r\n");
      out.write("   	#selectCouponBtn:hover{\r\n");
      out.write("   		border:1px solid white;	\r\n");
      out.write("	\r\n");
      out.write("   	}\r\n");
      out.write("   	\r\n");
      out.write("   	/*  */\r\n");
      out.write("    #couponList input{\r\n");
      out.write("   		display:none; \r\n");
      out.write("   	} \r\n");
      out.write("   	\r\n");
      out.write("   	/* 인풋태그와 연결되 label */\r\n");
      out.write("   	#couponList label{\r\n");
      out.write("   		display:block;\r\n");
      out.write("   		width:100%;\r\n");
      out.write("   		\r\n");
      out.write("   		height:100px;\r\n");
      out.write("   		\r\n");
      out.write("   		\r\n");
      out.write("   	}\r\n");
      out.write("   	\r\n");
      out.write("   	/* 쿠폰 사용기한 span  */\r\n");
      out.write("   	#couponList span{\r\n");
      out.write("   		color:white;\r\n");
      out.write("   		font-size:10px;\r\n");
      out.write("   	}\r\n");
      out.write("   	\r\n");
      out.write("   	\r\n");
      out.write("   	/* 선택된 쿠폰 div영역 */\r\n");
      out.write("    .selectedCoupon{\r\n");
      out.write("    	background-color: gray;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    /* 결제수단 영역 */\r\n");
      out.write("    #payMethodArea{\r\n");
      out.write("        width:100%;\r\n");
      out.write("        border-top: 3px solid white;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #payMethods input{\r\n");
      out.write("        /* display:none; */\r\n");
      out.write("    }\r\n");
      out.write("    #payMethods label{\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        border: 2px solid white;\r\n");
      out.write("        border-radius: 2%;\r\n");
      out.write("        display: inline-block;\r\n");
      out.write("        width:30%;\r\n");
      out.write("        height: 40px;\r\n");
      out.write("        vertical-align: 40px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #payMethods label:hover{\r\n");
      out.write("        border: 2px solid gray;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .selectedPayMethod{\r\n");
      out.write("    	background-color:gray;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    /* 오른쪽영역//////////////////////////////////////////////////// */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    /* 오른쪽 약관동의, 결제금액 영역 */\r\n");
      out.write("    #rightDiv{\r\n");
      out.write("        width:40%;\r\n");
      out.write("        padding:3%;\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    #rightDiv>div{\r\n");
      out.write("        width:100%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 체크박스 영역 */\r\n");
      out.write("    #CheckBoxArea{\r\n");
      out.write("\r\n");
      out.write("        border:1px #d9d9d9 solid;\r\n");
      out.write("        border-radius: 5%;\r\n");
      out.write("        color:#d9d9d9;\r\n");
      out.write("    }\r\n");
      out.write("    #CheckBoxArea>div{\r\n");
      out.write("        border-bottom: 1px #d9d9d9 solid;\r\n");
      out.write("        padding: 6%;\r\n");
      out.write("    } \r\n");
      out.write("    #checkBoxArea2{\r\n");
      out.write("        display:flex;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    /* 총 결제금액 영역 */\r\n");
      out.write("\r\n");
      out.write("    #totalArea{\r\n");
      out.write("        padding-top: 30px;      \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #tableDiv{\r\n");
      out.write("        border:2px solid white;\r\n");
      out.write("        border-radius: 5%;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #totalTable{\r\n");
      out.write("        \r\n");
      out.write("        width:100%;\r\n");
      out.write("        height:400px;\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    #totalTable>tbody>td{\r\n");
      out.write("        border-top: 1px solid white;\r\n");
      out.write("        padding: 5%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #totalButtonArea{\r\n");
      out.write("        \r\n");
      out.write("        display: flex;\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #totalButtonArea>div{\r\n");
      out.write("        width:100%;\r\n");
      out.write("    }\r\n");
      out.write("    #totalButtonArea button{\r\n");
      out.write("        width : 100%;\r\n");
      out.write("        height : 60px;\r\n");
      out.write("        background-color: #ab886d;;\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    /* 이전 버튼 */\r\n");
      out.write("    #backBtn{\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    /* 결제 버튼 */\r\n");
      out.write("    #submitBtn{\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("        \r\n");
      out.write("	/* 결제시 필요한 인풋태그들 */\r\n");
      out.write("\r\n");
      out.write("	#couponList input{\r\n");
      out.write("		display:none;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	#payMethods input{\r\n");
      out.write("		display:none;\r\n");
      out.write("	}	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    #submitData{\r\n");
      out.write("    	display:none;\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body> \r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("	\r\n");
      out.write("	    \r\n");
      out.write("    <form id=\"payForm\" name=\"payForm\" method=\"post\" action=\"/filoom/payResult.pm\">\r\n");
      out.write("        <div id=\"outer\"> <!-- 바깥테두리-->\r\n");
      out.write("\r\n");
      out.write("            <!-- 왼쪽 -->\r\n");
      out.write("            <div id=\"leftDiv\" >\r\n");
      out.write("                <div id=\"mainTitle\">\r\n");
      out.write("                    결제하기 \r\n");
      out.write("                    <span>제한시간</span>\r\n");
      out.write("                    <span id=\"payiTmeLimit\">0</span>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div id=\"bookInfoArea\">\r\n");
      out.write("                    <div class=\"infoTitle\">예매정보</div>\r\n");
      out.write("                    <div id=\"bookInfo\">\r\n");
      out.write("                        <div id=\"imgDiv\">\r\n");
      out.write("                            <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/posters/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.movie.fileCodename}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"영화이미지\" width=\"100%\" />\r\n");
      out.write("                            \r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div id=\"movieInfo\">\r\n");
      out.write("                            <div>\r\n");
      out.write("                            	<span>\r\n");
      out.write("                            		<img src=\"resources/images/posters/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.movie.filmRate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(".svg\" height=\"25px\">\r\n");
      out.write("                            		\r\n");
      out.write("                            	</span>\r\n");
      out.write("                            	\r\n");
      out.write("                            	<span>\r\n");
      out.write("                            		");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.movie.movieTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("                            	</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div>\r\n");
      out.write("\r\n");
      out.write("                                <div id=\"movieDate\"></div>\r\n");
      out.write("                                <div id=\"moviePlayTime\"></div>\r\n");
      out.write("\r\n");
      out.write("                                <div>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.movie.screenName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("                                <div>\r\n");
      out.write("                                	");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                               	</div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div id=\"couponArea\">\r\n");
      out.write("                    <div class=\"infoTitle\">할인쿠폰</div>\r\n");
      out.write("                    <button id=\"selectCouponBtn\" type=\"button\" onclick=\"selectCoupon()\">조회</button>\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <div id=\"couponList\">\r\n");
      out.write("                        	<input type=\"checkbox\" name=\"couponNos\" value=\"\" hidden>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div id=\"payMethodArea\">\r\n");
      out.write("                    <div class=\"infoTitle\">결제수단</div>\r\n");
      out.write("                    <div id=\"payMethods\">\r\n");
      out.write("                        <div>\r\n");
      out.write("							\r\n");
      out.write("                            <input type=\"radio\" name=\"PayMethod\" id=\"pay1\" value=\"CARD\"  checked><label for=\"pay1\" class=\"selectedPayMethod\">카드결제</label>\r\n");
      out.write("                            <input type=\"radio\" name=\"PayMethod\" id=\"pay2\" value=\"BANK\" ><label for=\"pay2\">계좌이체</label>\r\n");
      out.write("                            <input type=\"radio\" name=\"PayMethod\" id=\"pay3\" value=\"CELLPHONE\"><label for=\"pay3\">휴대폰결제</label>\r\n");
      out.write("							<input type=\"radio\" name=\"PayMethod\" id=\"pay4\" value=\"NONE\" >\r\n");
      out.write("							\r\n");
      out.write("                            \r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div> \r\n");
      out.write("			\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <!-- 오른쪽 -->\r\n");
      out.write("            <div id=\"rightDiv\">\r\n");
      out.write("\r\n");
      out.write("                <!-- 총 결제 금액 -->\r\n");
      out.write("                <div id=\"totalArea\">\r\n");
      out.write("                    <div class=\"infoTitle\" >결제금액</div>\r\n");
      out.write("                    <div id=\"tableDiv\">\r\n");
      out.write("                        <table id=\"totalTable\">\r\n");
      out.write("                            <tbody>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <td>결제수단</td>\r\n");
      out.write("                                    <td colspan=\"2\" id=\"payMethod\">카드결제</td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <td>금액</td>\r\n");
      out.write("                                    <td  id=\"totalPriceTd\"></td>\r\n");
      out.write("                                    <td>원</td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <td>할인</td>\r\n");
      out.write("                                    <td id=\"couponPrice\">0</td>\r\n");
      out.write("                                    <td>원</td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <td colspan=\"3\" ><h4>최종결제금액</h4></td>\r\n");
      out.write("                                    \r\n");
      out.write("                                </tr>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <td colspan=\"2\" id=\"finalPrice\">0</td>\r\n");
      out.write("                                    <td>원</td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("\r\n");
      out.write("                            </tbody>\r\n");
      out.write("                        </table>\r\n");
      out.write("                        \r\n");
      out.write("                       \r\n");
      out.write("							\r\n");
      out.write("							\r\n");
      out.write("							\r\n");
      out.write("				        </div>\r\n");
      out.write("				       \r\n");
      out.write("                        <div id=\"totalButtonArea\">\r\n");
      out.write("                            <div>\r\n");
      out.write("                                <button type=\"button\" id=\"backBtn\" onclick=\"cancelSeat()\">이전</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div>\r\n");
      out.write("                            	<button type=\"button\" onclick=\"beforePay();\">결제</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("         \r\n");
      out.write("                     \r\n");
      out.write("	              \r\n");
      out.write("	<div id=\"submitData\">			\r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("		<input type=\"text\" name=\"GoodsName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.movie.movieTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">결제 상품명(o)\r\n");
      out.write("		<input type=\"text\" name= \"totalCost\" value=\"\"> 토탈 코스트(o)\r\n");
      out.write("		<input type=\"text\" name=\"Amt\" value=\"\">결제 상품금액(o)\r\n");
      out.write("		<input type=\"text\" name=\"MID\" value=\"nictest00m\">상점 아이디(o)\r\n");
      out.write("		<input type=\"text\" name=\"Moid\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.bookingSeatList[0].bookingSeatNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">상품 주문번호 (o)\r\n");
      out.write("		<input type=\"text\" name=\"BuyerName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">구매자명 (o)\r\n");
      out.write("		<input type=\"text\" name=\"BuyerEmail\" value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.email }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">구매자명 이메일 (o)\r\n");
      out.write("		<!-- 변경 불가능 -->\r\n");
      out.write("		<input type=\"text\" name=\"EdiDate\" value=\"");
      out.write("\"/>전문 생성일시 (o)\r\n");
      out.write("		<input type=\"text\" name=\"SignData\" value=\"");
      out.write("\"/>해쉬값(o) \r\n");
      out.write("		<input type=\"text\" name=\"playingNo\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.movie.playingNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> playingNo (o)\r\n");
      out.write("		 쿠폰 번호(o)  \r\n");
      out.write("		");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </form>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("   		\r\n");
      out.write("    	//영화금액\r\n");
      out.write("    	const price = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.PRICE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("    	//쿠폰금액 (100%)\r\n");
      out.write("    	const couponPrice = price;\r\n");
      out.write("    	\r\n");
      out.write("    	//선택된 좌석 수\r\n");
      out.write("		const seatCount = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.bookingSeatList.size()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; \r\n");
      out.write("	\r\n");
      out.write("		//영화상영시간(문자열)\r\n");
      out.write("		const playTime = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.movie.playTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("		\r\n");
      out.write("		//러닝타임\r\n");
      out.write("		const runTime = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.movie.runtime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("		\r\n");
      out.write("		let Amt = \"\"; //결제할 금액\r\n");
      out.write("		\r\n");
      out.write("		const playingNo = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.movie.playingNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("		\r\n");
      out.write("		let timeLimit = 300; //5분\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		//전체 로드 다 된후 실행\r\n");
      out.write("    	$(function(){		\r\n");
      out.write("			setInterval(countDown,1000);\r\n");
      out.write("    		showMovieDate(playTime); 	\r\n");
      out.write("    		showPlayTime(playTime,runTime);		\r\n");
      out.write("    		showTotalPrice(); 					//총금액	\r\n");
      out.write("    		showCost();							//최종결재금액\r\n");
      out.write("    	});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		//좌석삭제 요청 ajax 요청 메소드\r\n");
      out.write("		function deleteSeatAndBook(){\r\n");
      out.write("	\r\n");
      out.write("			console.log(\"deleteSeatAndBook()실행\");\r\n");
      out.write("			let seatNos = [];\r\n");
      out.write("			$(\"#submitData>input[name='bookingSeatNos']\").each(function(index,item){\r\n");
      out.write("				seatNos.push($(item).val());\r\n");
      out.write("			});\r\n");
      out.write("			console.log(seatNos);\r\n");
      out.write("			location.href = \"book.do\";\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:\"deleteSB.pm\",\r\n");
      out.write("				type:\"post\",\r\n");
      out.write("				contentType: \"application/json\",\r\n");
      out.write("				data:JSON.stringify(seatNos),\r\n");
      out.write("				success:function(){\r\n");
      out.write("					console.log(\"ajax-deleteSeatAndBook 통신 성공\");\r\n");
      out.write("				},\r\n");
      out.write("				error:function(){\r\n");
      out.write("					console.log(\"ajax-deleteSeatAndBook 통신 실패\");\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// beforeunload 이벤트\r\n");
      out.write("		$(window).on(\"beforeunload\",deleteSeatAndBook);\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("		//카운트다운\r\n");
      out.write("		\r\n");
      out.write("		let seconds = 1;\r\n");
      out.write("		function countDown(){\r\n");
      out.write("					\r\n");
      out.write("			++seconds;\r\n");
      out.write("			\r\n");
      out.write("			let differenceTime = timeLimit - seconds; \r\n");
      out.write("			if(differenceTime==0){\r\n");
      out.write("				location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.contextRoot}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/filoom/book.do';\r\n");
      out.write("				alert(\"죄송합니다. 제한시간이 초과되었습니다.\")\r\n");
      out.write("			}\r\n");
      out.write("			$(\"#payiTmeLimit\").text(differenceTime);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("    	\r\n");
      out.write("		// 영화상영날짜 뿌려주기 \r\n");
      out.write("		function showMovieDate(playTime){\r\n");
      out.write("			\r\n");
      out.write("			let date = dateTimeToDate(playTime);\r\n");
      out.write("		\r\n");
      out.write("			$(\"#movieDate\").text(date);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		//날짜시간(문자열) -> 년,월,일, 요일 \r\n");
      out.write("    	function dateTimeToDate(dateString){\r\n");
      out.write("    		\r\n");
      out.write("    		let playTimeObj = new Date(dateString);\r\n");
      out.write("    		let yyyy = playTimeObj.getFullYear();\r\n");
      out.write("    		\r\n");
      out.write("            let mm = String(playTimeObj.getMonth()+1).padStart(2,'0');\r\n");
      out.write("            let dd = String(playTimeObj.getDate()).padStart(2,'0');\r\n");
      out.write("            \r\n");
      out.write("            const daysOfWeek = [\"일요일\",\"월요일\",\"화요일\",\"수요일\",\"목요일\",\"금요일\",\"토요일\"];\r\n");
      out.write("            let dayOfWeek = daysOfWeek[playTimeObj.getDay()];\r\n");
      out.write("            \r\n");
      out.write("            let date =yyyy + \"년 \" + mm + \"월 \"+dd+\"일 \"+ dayOfWeek;\r\n");
      out.write("    		\r\n");
      out.write("            return date;\r\n");
      out.write("			\r\n");
      out.write("    	};\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write("    	//날짜시간+러닝타임 -> 시작시간~종료시간\r\n");
      out.write("    	function showPlayTime(playTime, runTime){\r\n");
      out.write("    		\r\n");
      out.write("    		let startTime = playTime.substring(11,16);\r\n");
      out.write("    		\r\n");
      out.write("    		let [hours, minutes] = startTime.split(\":\").map(Number);\r\n");
      out.write("\r\n");
      out.write("    		minutes += +runTime; //숫자로써 계산 문자열앞에+			\r\n");
      out.write("		\r\n");
      out.write("    		hours += Math.floor(minutes/60);	\r\n");
      out.write("    		\r\n");
      out.write("    		minutes %=60;\r\n");
      out.write("    		\r\n");
      out.write("    		hours %= 24\r\n");
      out.write("    		\r\n");
      out.write("    		let endTime = String(hours).padStart(2,\"0\")+\":\"+String(minutes).padStart(2,\"0\");\r\n");
      out.write("    		\r\n");
      out.write("    		let moviePlayTime = startTime + \" ~ \" + endTime;\r\n");
      out.write("    		\r\n");
      out.write("    		$(\"#moviePlayTime\").text(moviePlayTime);\r\n");
      out.write("				\r\n");
      out.write("    		\r\n");
      out.write("    	}\r\n");
      out.write("    		\r\n");
      out.write("\r\n");
      out.write("    	//할인전 금액\r\n");
      out.write("    	//선택된 좌석수 * 영화가격\r\n");
      out.write("    	function showTotalPrice(){\r\n");
      out.write("			\r\n");
      out.write("    		let totalPrice = price*seatCount;\r\n");
      out.write("     		$(\"#totalPriceTd\").text(totalPrice);\r\n");
      out.write("     		$(\"#finalPrice\").text(totalPrice);\r\n");
      out.write("     		$(\"#submitData>input[name=totalCost]\").val(totalPrice);\r\n");
      out.write("    	}\r\n");
      out.write("    		\r\n");
      out.write("    	\r\n");
      out.write("    	/* 결제수단 */\r\n");
      out.write("    \r\n");
      out.write("		/* 선택된 결제수단 띄어주기 */\r\n");
      out.write("		$(\"#payMethods input\").change(function(){\r\n");
      out.write("\r\n");
      out.write("			let selectedPayMethod = $(this).val();\r\n");
      out.write("			\r\n");
      out.write("			if(selectedPayMethod===\"BANK\"){\r\n");
      out.write("				selectedPayMethod=\"계좌이체\";\r\n");
      out.write("			}else if(selectedPayMethod===\"CELLPHONE\"){\r\n");
      out.write("				selectedPayMethod=\"휴대폰결제\";\r\n");
      out.write("			}else{\r\n");
      out.write("				selectedPayMethod=\"신용카드\";\r\n");
      out.write("			}					\r\n");
      out.write("			let payMethodsLabel = $(this).next();\r\n");
      out.write("			$(\"#payMethod\").text(selectedPayMethod);\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("    	\r\n");
      out.write("		/* \r\n");
      out.write("			선택된 결제수단 스타일 주기  .selectedPayMethod \r\n");
      out.write("			클릭할때마다, 전체 클래스 제거, 클릭된 요소에만 클래스속성추가\r\n");
      out.write("		*/\r\n");
      out.write("		let labelTags = $(\"#payMethods label\"); \r\n");
      out.write("		\r\n");
      out.write("		labelTags.click(function(){ \r\n");
      out.write("			\r\n");
      out.write("			labelTags.removeClass(\"selectedPayMethod\"); \r\n");
      out.write("			\r\n");
      out.write("			$(this).addClass(\"selectedPayMethod\"); \r\n");
      out.write("\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    	\r\n");
      out.write("		\r\n");
      out.write("		/* 쿠폰 */\r\n");
      out.write("		\r\n");
      out.write("    	//조회 클릭시 : 쿠폰리스트\r\n");
      out.write("    	function selectCoupon(){\r\n");
      out.write("    		$.ajax({\r\n");
      out.write("    			url:\"couponList.co\",\r\n");
      out.write("    			type:\"post\",\r\n");
      out.write("    			data:{\r\n");
      out.write("    				userNo:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" /* 세션의 userNo로 수정 */\r\n");
      out.write("    			},\r\n");
      out.write("    			success:function(result) {\r\n");
      out.write("    				let couponList =\"\";\r\n");
      out.write("    				if(result.length===0){ //객체배열의 값이 없는값.. 비었는지로 조건걸기\r\n");
      out.write("    					couponList += \"<span>사용 가능한 쿠폰이 없습니다</span> \";\r\n");
      out.write("    							    + \"<input type='checkbox' name='couponNos' hidden>\";\r\n");
      out.write("    				}else{	    				\r\n");
      out.write("	    				result.forEach((item,index) => {\r\n");
      out.write("	    					couponList += \"<div>\"\r\n");
      out.write("    									+ 	\"<input type='checkbox' name='couponNos' id='coupon\"+index+\"'value='\"+item.couponNo+\"' >\"\r\n");
      out.write("    									+ 	\"<label for='coupon\"+index+\"'>\"+item.couponName+\"<br> \"\r\n");
      out.write("    									+ 		\"<span>\"+dateTimeToDate(item.couponExpDate)+\"까지</span>\"\r\n");
      out.write("    									+ 	\"</label>\"\r\n");
      out.write("    									+ \"</div>\";\r\n");
      out.write("	    				});\r\n");
      out.write("	    				\r\n");
      out.write("    				}\r\n");
      out.write("    				$(\"#couponList\").html(couponList);\r\n");
      out.write("    				//한번조회후 비활성화\r\n");
      out.write("    				$(\"selectCouponBtn\").prop(\"disabled\",true);\r\n");
      out.write("\r\n");
      out.write("    			},\r\n");
      out.write("    			error:function(){\r\n");
      out.write("    				console.log(\"ajax 통신 실패\");\r\n");
      out.write("    			},\r\n");
      out.write("    			\r\n");
      out.write("    		})\r\n");
      out.write("    	}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		// 좌석수 만큼만 쿠폰수 사용 가능하게\r\n");
      out.write("		/* \r\n");
      out.write("			쿠폰리스트가 체크/해제 할때마다 체크된 갯수 구하기\r\n");
      out.write("			\r\n");
      out.write("		*/\r\n");
      out.write("		$(\"#couponList\").on('change','input',function(){\r\n");
      out.write("\r\n");
      out.write("			let checkedCount = $(\"#couponList input:checked\").length; \r\n");
      out.write("			\r\n");
      out.write("			if(seatCount<checkedCount){\r\n");
      out.write("				$(this).prop('checked',false);\r\n");
      out.write("				alert(\"선택한 좌석수만큼 쿠폰 사용이 가능합니다.\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			if($(this).prop('checked')){\r\n");
      out.write("				$(this).parent().addClass(\"selectedCoupon\");\r\n");
      out.write("				\r\n");
      out.write("			}else{\r\n");
      out.write("				$(this).parent().removeClass(\"selectedCoupon\");\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			let totalCouponPrice = couponPrice*checkedCount;\r\n");
      out.write("			\r\n");
      out.write("			$(\"#couponPrice\").text(totalCouponPrice);\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write(" 		// 최종 결제 금액 구하기 \r\n");
      out.write("		$(\"#couponList\").on('change','input',showCost);\r\n");
      out.write("		function showCost(){\r\n");
      out.write("			//console.log(\"체인지이벤트발생\");\r\n");
      out.write("			\r\n");
      out.write("			let totalPrice = $(\"#totalPriceTd\").text();\r\n");
      out.write("			let totalCouponPrice = $(\"#couponList input:checked\").length*couponPrice;\r\n");
      out.write("			\r\n");
      out.write("			let finalPrice = totalPrice - totalCouponPrice;\r\n");
      out.write("			$(\"#finalPrice\").text(finalPrice)\r\n");
      out.write("			$(\"#submitData>input[name=Amt]\").val(finalPrice);\r\n");
      out.write("			\r\n");
      out.write("			Amt = finalPrice;\r\n");
      out.write("			//console.log(\"최종 결제금액 = \" +Amt );\r\n");
      out.write("			\r\n");
      out.write("		}  \r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("		//nicepaystart  전\r\n");
      out.write("		function beforePay(){\r\n");
      out.write("			\r\n");
      out.write("			let seatNos = [];\r\n");
      out.write("			$(\"#submitData>input[name='bookingSeatNos']\").each(function(index,item){\r\n");
      out.write("				seatNos.push($(item).val());\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:\"beforePay.pm\",\r\n");
      out.write("				type:\"post\",\r\n");
      out.write("				contentType:\"application/json\",\r\n");
      out.write("				data: JSON.stringify({price:Amt,\r\n");
      out.write("									  seatNos:seatNos,\r\n");
      out.write("									  playingNo:playingNo}),\r\n");
      out.write("				success:function(payInfo){\r\n");
      out.write("					\r\n");
      out.write("					if(payInfo.result==\"fail\"){\r\n");
      out.write("						console.log(\"좌석 유효성 검사 실패\")\r\n");
      out.write("						location.reload();\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					let bookNo=payInfo.bookNo; //\r\n");
      out.write("					let merchantKey=payInfo.merchantKey; \r\n");
      out.write("					let merchantId=payInfo.merchantId; //\r\n");
      out.write("					let ediDate = payInfo.ediDate;//\r\n");
      out.write("					let hashString = payInfo.hashString;\r\n");
      out.write("					\r\n");
      out.write("					$(\"#submitData>input[name=MID]\").val(merchantId);\r\n");
      out.write("					$(\"#submitData>input[name=EdiDate]\").val(ediDate);\r\n");
      out.write("					$(\"#submitData>input[name=SignData]\").val(hashString);\r\n");
      out.write("	\r\n");
      out.write("					if(Amt===0){ //결제할 금액이 0원인경우\r\n");
      out.write("						\r\n");
      out.write("						// beforeunload 이벤트 제거 \r\n");
      out.write("						$(window).off(\"beforeunload\");\r\n");
      out.write("						 \r\n");
      out.write("						//결제금액 없을경우 결제수단 none\r\n");
      out.write("						$(\"#pay4\").prop(\"checked\", true);\r\n");
      out.write("						\r\n");
      out.write("						$(\"#payForm\").submit();\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("					}else{\r\n");
      out.write("					\r\n");
      out.write("						nicepayStart();\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				error:function(){\r\n");
      out.write("					console.log(\"ajax통신실패:결제전\")\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("			})\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("		//선택된 쿠폰 넘버 배열로 가져오기\r\n");
      out.write("		function getCouponNos(){\r\n");
      out.write("			let checkedCoupons = $(\"#couponList input:checked\");\r\n");
      out.write("			\r\n");
      out.write("			let couponNos = [];\r\n");
      out.write("			checkedCoupons.each(function(){\r\n");
      out.write("				\r\n");
      out.write("				couponNos.push($(this).val());\r\n");
      out.write("				\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("			return couponNos;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/book/paymentForm.jsp(396,33) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/book/paymentForm.jsp(396,33) '${requestScope.bookingSeatList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${requestScope.bookingSeatList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/book/paymentForm.jsp(396,33) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("bookingSeat");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                                		\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bookingSeat.seatNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("                                	");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/book/paymentForm.jsp(510,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("seat");
      // /WEB-INF/views/book/paymentForm.jsp(510,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/book/paymentForm.jsp(510,2) '${requestScope.bookingSeatList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${requestScope.bookingSeatList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("			<input type=\"text\" name=\"bookingSeatNos\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${seat.bookingSeatNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"> 좌석번호(o)\r\n");
            out.write("		");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }
}
