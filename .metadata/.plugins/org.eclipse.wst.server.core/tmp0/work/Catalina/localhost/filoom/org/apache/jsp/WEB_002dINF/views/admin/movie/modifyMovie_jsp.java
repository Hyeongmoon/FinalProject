/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-01-03 07:04:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin.movie;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class modifyMovie_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1734951689000L));
    _jspx_dependants.put("jar:file:/C:/Final_Project/Filoom/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>영화 수정:: Filoom</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/admin.css\" />\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("    <!-- jQuery 연동 -->\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        #admin_right * {\r\n");
      out.write("            font-family: \"Poppins\", sans-serif;\r\n");
      out.write("            font-size:25px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #admin_title_content {\r\n");
      out.write("            display:flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            color:#493628;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        #goBack:hover {\r\n");
      out.write("            cursor:pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #admin_page {\r\n");
      out.write("            display:flex;            \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #admin_page div {\r\n");
      out.write("            display:inline-block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #innerAdmin {\r\n");
      out.write("            width:90%;\r\n");
      out.write("            margin: 5px 5%;\r\n");
      out.write("        }\r\n");
      out.write("        #innerAdmin>* {\r\n");
      out.write("            margin: 0px 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* #admin_page * {\r\n");
      out.write("            border:1px solid green;\r\n");
      out.write("        } */\r\n");
      out.write("\r\n");
      out.write("        /* 가로를 무조건 480px로 맞추고 세로가 726px보다 짧아질 경우 마진으로  */\r\n");
      out.write("        #admin_page img {\r\n");
      out.write("            /* width:480px; */\r\n");
      out.write("            width:100%;\r\n");
      out.write("            /* height:640px; */\r\n");
      out.write("            height:100%;\r\n");
      out.write("            /* object-fit: cover; */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #newPoster {\r\n");
      out.write("            width:480px;\r\n");
      out.write("            height:100%;\r\n");
      out.write("            background-color: azure;\r\n");
      out.write("            /* margin: 44px 0px; */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #basicInfo {\r\n");
      out.write("            height:100%;\r\n");
      out.write("            /* border:1px solid red; */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th {text-align:left;}\r\n");
      out.write("\r\n");
      out.write("        input/*:not(#runtime)*/, textarea {\r\n");
      out.write("            width:100%;\r\n");
      out.write("            box-sizing:border-box;\r\n");
      out.write("            /* background-color: #f3f3f3; */\r\n");
      out.write("            /* 배경색은 보류 - 이러면 입력란이 움푹 들어간 느낌이 생김 */\r\n");
      out.write("            color:#493628;\r\n");
      out.write("        }\r\n");
      out.write("        textarea {max-height:300px;}\r\n");
      out.write("        \r\n");
      out.write("        #basicInfo .filmrate {\r\n");
      out.write("            width:60px; height:60px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .screentype {\r\n");
      out.write("			display:none;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.screentype+label {\r\n");
      out.write("		    display:inline-block;\r\n");
      out.write("	        width:120px;\r\n");
      out.write("	        height:80px;\r\n");
      out.write("	        margin: 0px 30px;\r\n");
      out.write("	        filter:contrast(0%);\r\n");
      out.write("	    }\r\n");
      out.write("	    .screentype:checked+label {\r\n");
      out.write("	        filter:contrast(100%);\r\n");
      out.write("	    }\r\n");
      out.write("	    .screentype#imax+label {\r\n");
      out.write("	        background: no-repeat;\r\n");
      out.write("	        background-image:url('resources/images/icons/IMAX_small.svg');\r\n");
      out.write("	    }\r\n");
      out.write("	    .screentype#fdx+label {\r\n");
      out.write("	        background: no-repeat;\r\n");
      out.write("	        background-image:url('resources/images/icons/4DX_small.svg');\r\n");
      out.write("	    }\r\n");
      out.write("	    .screentype#screenx+label {\r\n");
      out.write("	        background: no-repeat;\r\n");
      out.write("	        background-image:url('resources/images/icons/SCREENX_small.svg');\r\n");
      out.write("	    }\r\n");
      out.write("\r\n");
      out.write("        /* 나중에 admin.css 손볼 때 #movie_submit로 변경 예정 */\r\n");
      out.write("        #button_sample {\r\n");
      out.write("            position:fixed;\r\n");
      out.write("            bottom:30px;\r\n");
      out.write("            right:30px;\r\n");
      out.write("            width:150px;\r\n");
      out.write("            font-size:20px;\r\n");
      out.write("            margin: 0px 35px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id = \"admin_content\">\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../common/adminHeader.jsp", out, false);
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        <div id = \"admin_right\">\r\n");
      out.write("            <div id =\"admin_title\">\r\n");
      out.write("\r\n");
      out.write("                <!-- 여기가 관리자 상단 회원번호, 회원아이디 이런거 적는 곳\r\n");
      out.write("                    구상은 각자 알아서~ \r\n");
      out.write("                -->\r\n");
      out.write("                <div id = \"admin_title_content\">\r\n");
      out.write("                    <p id=\"fnName\" style=\"padding-left:33px; font-weight:bold;\">영화 수정</p>\r\n");
      out.write("                    <p id=\"goBack\" style=\"padding-right:33px;\"\r\n");
      out.write("                        onclick=\"location.href='movielist_ad.mo';\">\r\n");
      out.write("                        ← 목록으로 돌아가기\r\n");
      out.write("                    </p>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div id = \"admin_detail\">\r\n");
      out.write("                \r\n");
      out.write("                <!-- 여기 안이 관리자 컨텐츠 영역이에요~-->\r\n");
      out.write("                <div id =\"admin_page\" align=\"center\">\r\n");
      out.write("                    <!-- align = \"center\" ?-->\r\n");
      out.write("                    <input type=\"hidden\" id=\"serial\" value=\"1\">\r\n");
      out.write("                    <div id=\"innerAdmin\">\r\n");
      out.write("                        <div id=\"newPoster\">\r\n");
      out.write("                            <img id=\"posterDisplay\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/posters/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.fileCodename}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                            <input type=\"hidden\" id=\"prevpath\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.imagePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                            <input type=\"file\" id=\"posterInput\" style=\"display:none;\" onchange=\"loadImg(this);\">\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <div id=\"basicInfo\">\r\n");
      out.write("                            <table>\r\n");
      out.write("                            	<tr style='display:none;'>\r\n");
      out.write("                            		<td colspan=\"5\"><input type=\"hidden\" id=\"mno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.movieNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></td>\r\n");
      out.write("                            	</tr>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>영화 제목</th>\r\n");
      out.write("                                    <td colspan=\"4\"><input type=\"text\" id=\"title\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.movieTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                \r\n");
      out.write("                                <tr style=\"display:none;\">\r\n");
      out.write("                                    <th>확인용</th>\r\n");
      out.write("                                    <td><input type=\"radio\" name=\"filmrate\" value=\"3\"  id=\"rate3\"\r\n");
      out.write("                                    	");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                                    	></td>\r\n");
      out.write("                                    <td><input type=\"radio\" name=\"filmrate\" value=\"12\" id=\"rate12\"\r\n");
      out.write("                                    	");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                                    	></td>\r\n");
      out.write("                                    <td><input type=\"radio\" name=\"filmrate\" value=\"15\" id=\"rate15\"\r\n");
      out.write("                                    	");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                                    	></td>\r\n");
      out.write("                                    <td><input type=\"radio\" name=\"filmrate\" value=\"19\" id=\"rate19\"\r\n");
      out.write("                                    	");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                                    	></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>상영 등급</th>\r\n");
      out.write("                                    <td colspan=\"4\" width=540>\r\n");
      out.write("                                    	<div style=\"display:flex; justify-content: space-between;\">\r\n");
      out.write("	                                    	<label for=\"rate3\"><img class=\"filmrate\" src=\"resources/images/posters/3.svg\" onclick=\"rateFilm(3);\" alt=\"ALL\"></label>\r\n");
      out.write("	                                    	<label for=\"rate12\"><img class=\"filmrate\" src=\"resources/images/posters/12.svg\" onclick=\"rateFilm(12);\" alt=\"12\"></label>\r\n");
      out.write("	                                    	<label for=\"rate15\"><img class=\"filmrate\" src=\"resources/images/posters/15.svg\" onclick=\"rateFilm(15);\" alt=\"15\"></label>\r\n");
      out.write("	                                    	<label for=\"rate19\"><img class=\"filmrate\" src=\"resources/images/posters/19.svg\" onclick=\"rateFilm(19);\" alt=\"19\"></label>\r\n");
      out.write("                                    	</div>\r\n");
      out.write("                                    </td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>감독</th>\r\n");
      out.write("                                    <td colspan=\"4\"><input type=\"text\" id=\"director\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.director}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>주요 배우</th>\r\n");
      out.write("                                    <td colspan=\"4\"><input type=\"text\" id=\"cast\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.starring}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>장르</th>\r\n");
      out.write("                                    <td colspan=\"4\"><input type=\"text\" id=\"genre\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.genre}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                \r\n");
      out.write("                                <!-- 이미 개봉한 경우 개봉일자를 변경할 수 없음 -->\r\n");
      out.write("                                <!-- ↓ 년월일까지 표기라 'date'가 맞음 -->\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>개봉일자</th>\r\n");
      out.write("                                    <td colspan=\"4\"><input type=\"date\" id=\"open_date\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.openDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>상영시간</th>\r\n");
      out.write("                                    <td><input type=\"number\" id=\"runtime\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.runtime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></td>\r\n");
      out.write("                                    <td colspan=\"3\">분</td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                \r\n");
      out.write("                                <!-- 로고별 이미지가 외관상 정렬이 안 되어 있는데 내부적으로는 정렬한 거 맞음\r\n");
      out.write("                                	원본 이미지들의 width만 120px로 통일한 거고 원본의 비율 차이 때문에 이건 어쩔 수 없음 -->\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>추가 상영 타입</th>\r\n");
      out.write("                                    <td colspan=\"4\"><div id=\"screentype\">\r\n");
      out.write("                                    	<input type=\"checkbox\" class=\"screentype\" id=\"imax\" value=\"IMAX\">\r\n");
      out.write("								        <label for=\"imax\" value=\"IMAX\"></label>\r\n");
      out.write("									<input type=\"checkbox\" class=\"screentype\" id=\"fdx\" value=\"4DX\">\r\n");
      out.write("								        <label for=\"fdx\"></label>\r\n");
      out.write("									<input type=\"checkbox\" class=\"screentype\" id=\"screenx\" value=\"SCREENX\">\r\n");
      out.write("								        <label for=\"screenx\"></label>\r\n");
      out.write("                                   	</div></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                \r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>트레일러 링크</th>\r\n");
      out.write("                                    <td colspan=\"4\"><input type=\"url\" id=\"trailer_link\"\r\n");
      out.write("                                    	value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.trailer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>시놉시스</th>\r\n");
      out.write("                                    <td colspan=\"4\"><textarea name=\"\" \r\n");
      out.write("                                        rows=\"3\" id=\"synopsis\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.description}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                            </table>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <!-- <button>1234</button> -->\r\n");
      out.write("\r\n");
      out.write("                    <input type=\"button\" id =\"button_sample\"\r\n");
      out.write("                     name=\"movie_submit\" value=\"수정 완료\" onclick=\"submitMovie();\">\r\n");
      out.write("					<!-- console.log($(':radio:checked').val());\r\n");
      out.write("						OR console.log($('input[name=filmrate]:checked').val()); -->\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("    document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("        const navItems = document.querySelectorAll(\"#nav > ul > li\");\r\n");
      out.write("    \r\n");
      out.write("        navItems.forEach(item => {\r\n");
      out.write("            item.addEventListener(\"click\", function () {\r\n");
      out.write("                // 모든 항목에서 selected 클래스 제거\r\n");
      out.write("                navItems.forEach(nav => nav.classList.remove(\"selected\"));\r\n");
      out.write("    \r\n");
      out.write("                // 클릭된 항목에 selected 클래스 추가\r\n");
      out.write("                this.classList.add(\"selected\");\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 이미지 첨부시, #posterDisplay 칸이 이미지 미리보기로 바뀜\r\n");
      out.write("    $(function() {\r\n");
      out.write("    	// 지금 filmRate를 target.getFilmRate()로 받을 거 아냐\r\n");
      out.write("//     	let filmRate = target.getFilmRate();\r\n");
      out.write("//     	console.log(filmRate);\r\n");
      out.write("//     	$(\"#rate\"+filmRate).attr(\"checked\",\"true\");\r\n");
      out.write("    	// $(\"input[name=filmrate][value=\"+filmRate+\"]\").attr(\"checked\",\"true\");\r\n");
      out.write("        $(\"#posterDisplay\").click(function() {\r\n");
      out.write("            $(\"#posterInput\").click();\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    function loadImg(inputFile) {\r\n");
      out.write("\r\n");
      out.write("        // if file is selected\r\n");
      out.write("        if(inputFile.files.length == 1) {\r\n");
      out.write("            console.log(\"ON\");\r\n");
      out.write("            let reader = new FileReader();\r\n");
      out.write("            reader.readAsDataURL(inputFile.files[0]);\r\n");
      out.write("\r\n");
      out.write("            // 미리보기 띄우기\r\n");
      out.write("            reader.onload = function(e) {\r\n");
      out.write("                // 'e' : 현재 발생한 event의 정보를 담고 있는 '이벤트 객체'\r\n");
      out.write("                // 만들어진 URL 주소가 담기는 곳 = e.target.result\r\n");
      out.write("\r\n");
      out.write("                $(\"#posterDisplay\").attr(\"src\",e.target.result);\r\n");
      out.write("                var photo = document.getElementById(\"posterDisplay\").innerHTML;\r\n");
      out.write("                //console.log(e.target.result);\r\n");
      out.write("            };\r\n");
      out.write("        }\r\n");
      out.write("        // if not\r\n");
      out.write("        else {\r\n");
      out.write("            console.log(\"OFF\");\r\n");
      out.write("            $(\"#posterDisplay\").attr(\"src\",\"https://placehold.co/480x716\");\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function rateFilm(num) {\r\n");
      out.write("        // console.log(num);\r\n");
      out.write("        let target = $(\"label[for$=\"+num+\"]\");\r\n");
      out.write("        $(\"label *\").removeAttr(\"border\");\r\n");
      out.write("        // screenType도 label을 쓰긴 하는데 얘네는 border를 안 쓰니까 괜찮음\r\n");
      out.write("        target.children().first().attr({\r\n");
      out.write("            \"border\":\"3px solid red\"\r\n");
      out.write("        });\r\n");
      out.write("        // 현재 border-style과 border-color가 적용되지 않는 이슈 있음\r\n");
      out.write("        // 즉, 현재 버튼 선택시 3px만 적용됨\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    function submitMovie() {\r\n");
      out.write("		// 이미지 변경 없을 때는 확인만 함\r\n");
      out.write("		console.log($(\"#posterInput\").val());\r\n");
      out.write("		\r\n");
      out.write("    	/* ↓ 이걸 해야 form 태그없이도 current request is not a multipart request\r\n");
      out.write("		안 띄우고 이미지를 넣을 수 있다고 함 */\r\n");
      out.write("		let formData = new FormData();\r\n");
      out.write("		\r\n");
      out.write("		// adding checkbox selection of 'screenType'\r\n");
      out.write("		let screenType = [];\r\n");
      out.write("		$(\".screentype\").each(function() {\r\n");
      out.write("			if($(this).is(\":checked\")) {\r\n");
      out.write("				screenType.push($(this).val());\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		let mno = $(\"#mno\").val();\r\n");
      out.write("		formData.append(\"movieNo\", mno);\r\n");
      out.write("		formData.append(\"movieTitle\", $(\"#title\").val());\r\n");
      out.write("		formData.append(\"filmRate\", parseInt($(\"input[name=filmrate]:checked\").val(), 10));\r\n");
      out.write("		// 10진수로 parseInt\r\n");
      out.write("		formData.append(\"director\", $(\"#director\").val());\r\n");
      out.write("		formData.append(\"starring\", $(\"#cast\").val());\r\n");
      out.write("		formData.append(\"genre\", $(\"#genre\").val());\r\n");
      out.write("		formData.append(\"openDate\", $(\"#open_date\").val());\r\n");
      out.write("		formData.append(\"screenType\", screenType.join(\",\"));\r\n");
      out.write("		formData.append(\"runtime\", $(\"#runtime\").val());\r\n");
      out.write("		// ↑ number로 받고 있어서 굳이 parseInt 안 해도 됨\r\n");
      out.write("		formData.append(\"trailer\", $(\"#trailer_link\").val());\r\n");
      out.write("		formData.append(\"description\",$(\"#synopsis\").val());\r\n");
      out.write("		\r\n");
      out.write("		// 포스터를 첨부하지 않은 경우\r\n");
      out.write("    	if($(\"#posterInput\").val() === '') {\r\n");
      out.write("    		// 혹시나 삭제 과정에서 포스터만 지워지고 영화 정보는 남았는데 거기서 수정을 누를 경우를 대비하여..\r\n");
      out.write("    		if($(\"#prevpath\").val() === '') {\r\n");
      out.write("    			alert('포스터가 없습니다.');\r\n");
      out.write("    			return false;\r\n");
      out.write("    		}\r\n");
      out.write("    		\r\n");
      out.write("    		// confirm : 확인 누르면 true, 취소 누르면 false\r\n");
      out.write("    		else if(!confirm(\"포스터가 변경되지 않았습니다. 그래도 변경하시겠습니까?\")) {\r\n");
      out.write("    			console.log(false);\r\n");
      out.write("    			return false;\r\n");
      out.write("    		}\r\n");
      out.write("    	} else {\r\n");
      out.write("    		// 기존 이미지 경로 추가\r\n");
      out.write("			formData.append(\"prevpath\", $(\"#prevpath\").val());\r\n");
      out.write("	    	\r\n");
      out.write("    		// 이미지 추가\r\n");
      out.write("	    	formData.append(\"img\", $(\"#posterInput\")[0].files[0]);\r\n");
      out.write("	    	let prevpath = $(\"#prevpath\").val();\r\n");
      out.write("	   	}\r\n");
      out.write("		\r\n");
      out.write("    	$.ajax({\r\n");
      out.write("    		url:\"admin.updatemovie.mo\",\r\n");
      out.write("    		type:\"post\",\r\n");
      out.write("    		data: formData,\r\n");
      out.write("    		// illegal invocation 오류 방지\r\n");
      out.write("    		contentType:false,\r\n");
      out.write("    		processData:false,\r\n");
      out.write("\r\n");
      out.write("    		success: function(result) {\r\n");
      out.write("    			if (result == \"success\") {\r\n");
      out.write("    				alert('수정되었습니다.');\r\n");
      out.write("    				\r\n");
      out.write("    				location.href = 'admin.managemovie.mo?movieNo='+mno;\r\n");
      out.write("    			} else if (result == \"half_success\") {\r\n");
      out.write("    				alert('영화 정보만 수정되었습니다.');\r\n");
      out.write("    				location.href = 'admin.managemovie.mo?movieNo='+mno;\r\n");
      out.write("    			} else {\r\n");
      out.write("    				// if result == \"failure\"\r\n");
      out.write("    				alert('영화 정보가 수정되지 않았습니다.');\r\n");
      out.write("    			}\r\n");
      out.write("    		},\r\n");
      out.write("    		error: function(result) {\r\n");
      out.write("    			alert('DAMN!');\r\n");
      out.write("    		}	\r\n");
      out.write("    	});\r\n");
      out.write("	\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/admin/movie/modifyMovie.jsp(178,37) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.filmRate eq 3}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("checked");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/admin/movie/modifyMovie.jsp(181,37) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.filmRate eq 12}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("checked");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/admin/movie/modifyMovie.jsp(184,37) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.filmRate eq 15}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("checked");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/views/admin/movie/modifyMovie.jsp(187,37) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.target.filmRate eq 19}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("checked");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }
}
